

local function initialize()
    local GUI = Rayfield:CreateWindow({
		Name = "Applesaken",
		Theme = "Default",
		LoadingTitle = "Apple Ware",
		LoadingSubtitle = "can fart hub please collab already",
		Icon = "apple",
		Link = "https://github.com/SilkScripts/AppleStuff/get out of here",

		DisableBuildWarnings = true,
		DisableRayfieldPrompts = true,

		KeySystem = false,
		KeySettings = {
			Title = "Appleware Key or sum",
			Subtitle = "FART HUB PLEASE COLLABBB",
			Note = "Join Discord Server To Get Key | https://discord.gg/fGFV3r9yKC",
			FileName = "Applewarething",
			SaveKey = true,
			GrabKeyFromSite = false,
			Key = {"Apple"}, 
		},
	})
    

    

    local function button1() -- creds to ivan
		local visible = true
		local sausageHolder = game:GetService("CoreGui").TopBarApp.UnibarLeftFrame.UnibarMenu["2"]
		local originalSize = sausageHolder.Size.X.Offset

		sausageHolder.Size = UDim2.new(0, originalSize + 48, 0, sausageHolder.Size.Y.Offset)

		local buttonFrame = Instance.new("Frame", sausageHolder)
		buttonFrame.Size = UDim2.new(0, 44, 0, 44)
		buttonFrame.BackgroundTransparency = 1
		buttonFrame.BorderSizePixel = 0
		buttonFrame.Position = UDim2.new(0, sausageHolder.Size.X.Offset - 48, 0, 0)

		local imageButton = Instance.new("ImageButton", buttonFrame)
		imageButton.BackgroundTransparency = 1
		imageButton.BorderSizePixel = 0
		imageButton.Size = UDim2.new(0, 36, 0, 36)
		imageButton.AnchorPoint = Vector2.new(0.5, 0.5)
		imageButton.Position = UDim2.new(0.5, 0, 0.5, 0)
		imageButton.Image = "http://www.roblox.com/asset/?id=99937635381008"

		local function toggleGUI()
			visible = not visible
			Rayfield:SetVisibility(visible, false)
			sausageHolder.Size = UDim2.new(0, originalSize + (visible and 48 or 0), 0, sausageHolder.Size.Y.Offset)
		end

		imageButton.Activated:Connect(toggleGUI)

		sausageHolder:GetPropertyChangedSignal("Size"):Connect(function()
			if sausageHolder.Size.X.Offset == originalSize then
				sausageHolder.Size = UDim2.new(0, originalSize + 48, 0, sausageHolder.Size.Y.Offset)
			end
		end)
	end

	local function button2() -- creds to ivan
		local visible = true
		local topBarApp = game:GetService("CoreGui"):WaitForChild("TopBarApp")
		local leftFrame = topBarApp:WaitForChild("TopBarFrame"):WaitForChild("LeftFrame")

		local sigmaFrame = Instance.new("Frame", leftFrame)
		sigmaFrame.Name = "SigmaFrame"
		sigmaFrame.Size = UDim2.new(0, 32, 0, 32)
		sigmaFrame.Position = UDim2.new(0, 0, 1, 0)
		sigmaFrame.BackgroundTransparency = 1
		sigmaFrame.LayoutOrder = 5

		local background = Instance.new("ImageLabel", sigmaFrame)
		background.Name = "Background"
		background.Size = UDim2.new(0, 32, 0, 32)
		background.Position = UDim2.new(0, 0, 0, 0)
		background.Image = "rbxasset://textures/ui/TopBar/iconBase.png"
		background.BackgroundTransparency = 1

		local icon = Instance.new("ImageButton", background)
		icon.Name = "Icon"
		icon.Size = UDim2.new(0, 36, 0, 36)
		icon.Position = UDim2.new(0.5, 0, 0.5, 0)
		icon.AnchorPoint = Vector2.new(0.5, 0.5)
		icon.Image = "http://www.roblox.com/asset/?id=99937635381008"
		icon.BackgroundTransparency = 1

		local function toggleGUI()
			visible = not visible
			Rayfield:SetVisibility(visible, false)
		end
		icon.Activated:Connect(toggleGUI)
	end

	local function init() -- creds to ivan
		if game:GetService("CoreGui"):FindFirstChild("TopBarApp"):FindFirstChild("UnibarLeftFrame") then
			button1()
		else
			button2()
		end
	end

    init()




    local function toggleHighlightGen(state)
        isHighlightActive = state 
    
        local function applyGeneratorHighlight(generator)
            if generator.Name == "Generator" then
                local existingHighlight = generator:FindFirstChild("GeneratorHighlight")
                local progress = generator:FindFirstChild("Progress")
                
                if isHighlightActive then
                    if not existingHighlight then
                        local genhighlight = Instance.new("Highlight")
                        genhighlight.Parent = generator
                        genhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        genhighlight.Name = "GeneratorHighlight"
                    end
                else
                    if existingHighlight then
                        existingHighlight:Destroy()
                    end
                    return
                end
    
                if progress then
                    if progress.Value == 100 then
                        local highlight = generator:FindFirstChild("GeneratorHighlight")
                        if highlight then
                            highlight:Destroy()
                        end
                        return
                    end
    
                    progress:GetPropertyChangedSignal("Value"):Connect(function()
                        if progress.Value == 100 then
                            local highlight = generator:FindFirstChild("GeneratorHighlight")
                            if highlight then
                                highlight:Destroy()
                            end
                        elseif isHighlightActive and not generator:FindFirstChild("GeneratorHighlight") then
                            local genhighlight = Instance.new("Highlight")
                            genhighlight.Parent = generator
                            genhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                            genhighlight.Name = "GeneratorHighlight"
                        end
                    end)
                end
            end
        end
    
        for _, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
            applyGeneratorHighlight(v)
        end
    
        game.Workspace.Map.Ingame.Map.ChildAdded:Connect(function(child)
            applyGeneratorHighlight(child)
        end)
    end
    
    
    
    local function togglehidebar(state)
        hideplayerbar = state 
        local playergui = player.PlayerGui
        local playerinfo = playergui.TemporaryUI.PlayerInfo
    
        if hideplayerbar then
            playerinfo.CurrentSurvivors.Visible = false
            playerinfo.PlayerIcon.Image = "rbxassetid://12549056837"
        else
            playerinfo.CurrentSurvivors.Visible = true
        end
    end
    
    
    local function hawktuahmode(state)
        if player.Character.Name ~= "c00lkidd" then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't COolkid, this POSSIBLY can bug out, so untoggle unless you're on Coolkidd!", Duration = 5}
            return end
        local TS = game:GetService("TweenService")
        hawktuahactive = state
    if state then
        Rayfield:Notify{Title = "DM", Content = "hawk tuah mode", Duration = 10}
    end
        
        game.DescendantAdded:Connect(function(descendant)
            for _, v in pairs(hawktuahactivatesound) do
            if descendant.Name == v then
                if hawktuahactive then
                    local propout = {
                        ImageTransparency = 1
                    }
    
                    local propin = {
                        ImageTransparency = 0
                    }
    
                    local screengui = Instance.new("ScreenGui")
                    local frame = Instance.new("Frame")
                    local image = Instance.new("ImageLabel")
                    local sound = Instance.new("Sound")
                    sound.Parent = game.Workspace
                    sound.SoundId = "rbxassetid://17787027130"
                    sound:Play()
    
                    screengui.Parent = game.Players.LocalPlayer.PlayerGui
                    screengui.IgnoreGuiInset = true
                    frame.Parent = screengui
                    image.Parent = frame
    
                    frame.Size = UDim2.new(1,0,1,0)
                    frame.Position = UDim2.new(0, 0, 0, 0)
                    frame.BackgroundTransparency = 1
    
                    image.Size = UDim2.new(1,0,1,0)
                    image.Position = UDim2.new(0, 0, 0, 0)
                    image.BackgroundTransparency = 1
    
                    image.Image = "http://www.roblox.com/asset/?id=100505038126957"
    
                    local tweeninfoI = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
                    local tween = TS:Create(image,tweeninfoI, propout)
                    tween:play()
    
                   
                    wait(1)
    
                    local tweeninfoII = TweenInfo.new(0.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
                    local tweenI = TS:Create(image,tweeninfoII, propin)
                    tweenI:play()
                    screengui:Destroy()
                end
            end
        end
        end)
    end
    
    
    
    local function Do1x1x1x1Popups() -- creds to ivan
        while true do
            if Do1x1PopupsLoop then
                local player = game:GetService("Players").LocalPlayer
                local popups = player.PlayerGui.TemporaryUI:GetChildren()
    
                for _, i in ipairs(popups) do
                    if i.Name == "1x1x1x1Popup" then
                        local centerX = i.AbsolutePosition.X + (i.AbsoluteSize.X / 2)
                        local centerY = i.AbsolutePosition.Y + (i.AbsoluteSize.Y / 2)
        
                        VirtualBallsManager:SendMouseButtonEvent(centerX, centerY, Enum.UserInputType.MouseButton1.Value, true, player.PlayerGui, 1)
                        VirtualBallsManager:SendMouseButtonEvent(centerX, centerY, Enum.UserInputType.MouseButton1.Value, false, player.PlayerGui, 1)
                    end
                end
            end
            task.wait(0.1)
        end
    end
    
    
    local function instantsolvegen()
        for i, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
            if v.name == "Generator" then
                local num = 0
                repeat
                num += 1
                v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
                until num == 4
            end
        end
    end
    
    local function solvegen()
        for i, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
            if v.name == "Generator" then
                v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
            end
        end
    end
    
    
    local function instantsolvegenhell()
        for i, v in pairs(game.Workspace.Map.Ingame.Map.Generators:GetChildren()) do
            if v:IsA("Model") then
                local num = 0
                repeat
                num += 1
                v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
                until num == 4
            end
        end
    end
    
    local function highlighttools(state)
        toolhighlightActive = state
        
        local function applyHighlight(tool)
            if toolhighlightActive then
                local existinghighlight = tool:FindFirstChild("ToolHighlight")
                if not existinghighlight then
                    local toolhighlight = Instance.new("Highlight")
                    toolhighlight.Name = "ToolHighlight"
                    toolhighlight.Parent = tool
                    toolhighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    
                    if tool.Name == "Medkit" then
                        toolhighlight.FillColor = Color3.fromRGB(0, 255, 0)
                    elseif tool.Name == "BloxyCola" then
                        toolhighlight.FillColor = Color3.fromRGB(88, 57, 39)
                    end
                end
            else
                local existinghighlight = tool:FindFirstChild("ToolHighlight")
                if existinghighlight then
                    existinghighlight:Destroy()
                end
            end
        end
        
        for _, v in pairs(game.Workspace.Map.Ingame:GetChildren()) do
            if v:IsA("Tool") then
                applyHighlight(v)
            end
        end
        
        game.Workspace.Map.Ingame.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                applyHighlight(child)
            end
        end)
    end
    



    local function givemesomepizza(state)
        if not state then
            
            for _, v in pairs(connections) do
                v:Disconnect()
            end
            table.clear(connections)
            return
        end
    
        
        local function tp(child)
            if child:IsA("BasePart") and child.Name == "Pizza" then
                local player = game.Players.LocalPlayer
                if player and player.Character then
                    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        child.CFrame = hrp.CFrame
                    end
                end
            end
        end
    
        
        local function watchtower()
            local map = workspace:FindFirstChild("Map")
            local insession = map and map:FindFirstChild("Ingame")
    
            if insession then
                
                for _, child in pairs(insession:GetChildren()) do
                    tp(child)
                end
                
                table.insert(connections, insession.ChildAdded:Connect(tp))
            end
        end
    
        
        watchtower()
    end

    local function setdelay(value)
        delay = value
        
    end

        
    
    local function autogen(state)
        run = state
        
        local debounce = {}
        


        while run do
            task.wait()
            for _, v in pairs(game.Workspace.Map.Ingame.Map:GetChildren()) do
                if v.Name == "Generator" then
                    
                    if not debounce[v] then
                        debounce[v] = true
                        v:WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
                        task.delay(delay, function() debounce[v] = nil end)
                    end
                end
            end
        end
    end
    





    
    local function corruptnatureesp(state)
        isCorruptNatureEspActive = state
        for i, v in pairs(game.Workspace.Map.Ingame:GetChildren()) do
            if v:IsA("Model") then
                local existingHighlight = v:FindFirstChild("CorruptNatureHighlight")
                if isCorruptNatureEspActive then
                    if not existingHighlight then
                        if v.Name == "HumanoidRootProjectile" or v.Name == "PizzaDeliveryRig" or v.Name == "Bunny" or v.Name == "Mafiaso1" or v.Name == "Mafiaso2" or v.Name == "Mafiaso3" then
                            local highlight = Instance.new("Highlight")
                            highlight.Name = "CorruptNatureHighlight"
                            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                            highlight.Parent = v
                        end
                    end
                else
                    if existingHighlight then
                        existingHighlight:Destroy()
                    end
                end
            end
        end
    end
    
    
    local function survivorutilesp(state)
        isSurvivorUtilEspActive = state
        
        local function applySurvivorUtilHighlight(model)
            local existingHighlight = model:FindFirstChild("SurvivorUtilHighlight")
            if isSurvivorUtilEspActive then
                if not existingHighlight then
                    for _, util in pairs(survivorutil) do
                        if model.Name == util then
                            local highlight = Instance.new("Highlight")
                            highlight.Name = "SurvivorUtilHighlight"
                            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                            highlight.FillColor = Color3.fromRGB(255,255,255)
                            highlight.FillTransparency = 0.5
                            highlight.Parent = model
                        end
                    end
                end
            else
                if existingHighlight then
                    existingHighlight:Destroy()
                end
            end
        end
        
        for _, v in pairs(game.Workspace.Map.Ingame:GetChildren()) do
            if v:IsA("Model") or v:IsA("Part") then
                applySurvivorUtilHighlight(v)
            end
        end
        
        game.Workspace.Map.Ingame.ChildAdded:Connect(function(child)
            if child:IsA("Model") or child:IsA("Part") then
                applySurvivorUtilHighlight(child)
            end
        end)
    end
    
    
    local function activatethehakari(state)
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
    
        hakariactive = state
    
        if hakariactive then
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
    
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
    
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://138019937280193"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
    
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://87166578676888"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = true
            sound:Play()
    
            local effect = game.ReplicatedStorage.Assets.Emotes.HakariDance.HakariBeamEffect:Clone()
            effect.Name = "PlayerEmoteVFX"
            effect.CFrame = char.PrimaryPart.CFrame * CFrame.new(0, -1, -0.3)
            effect.WeldConstraint.Part0 = char.PrimaryPart
            effect.WeldConstraint.Part1 = effect
            effect.Parent = char
            effect.CanCollide = false
    
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "HakariDance"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
    
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
            end)
        else
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0 
    
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
    
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
    
            local effect = char:FindFirstChild("PlayerEmoteVFX")
            if effect then
                effect:Destroy()
            end
    
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://138019937280193" then
                    track:Stop()
                end
            end
        end
    end
    
    
    local function activatethesilly(state)
    
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
        sillyactive = state
    
        if sillyactive then
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
        
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
        
           
            local emoteScript = require(game:GetService("ReplicatedStorage").Assets.Emotes.Shucks)
            emoteScript.Created({Character = char})
        
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://74238051754912"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
        
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://123236721947419"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = false
            sound:Play()
        
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "Shucks"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
        
                
                local saw = char:FindFirstChild("Saw")
                if saw then saw:Destroy() end
        
                local playerHand = char:FindFirstChild("PlayerEmoteHand")
                if playerHand then playerHand:Destroy() end
            end)
        else
    
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0
    
            local saw = char:FindFirstChild("Saw")
            if saw then saw:Destroy() end
    
            local playerHand = char:FindFirstChild("PlayerEmoteHand")
            if playerHand then playerHand:Destroy() end
    
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
    
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
    
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://74238051754912" then
                    track:Stop()
                end
            end
        end
    end
    
    
    local function activatethequiet(state)
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
        sillyactive = state
    
        if sillyactive then
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
        
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
        
            local emoteScript = require(game:GetService("ReplicatedStorage").Assets.Emotes.MissTheQuiet)
            emoteScript.Created({Character = char})
        
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://100986631322204"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
        
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://131936418953291"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = false
            sound:Play()
        
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "MissTheQuiet"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
        
                local assetsToDestroy = {"EmoteHatAsset", "EmoteLighting", "PlayerEmoteHand"}
                for _, assetName in ipairs(assetsToDestroy) do
                    local asset = char:FindFirstChild(assetName)
                    if asset then asset:Destroy() end
                end
            end)
        else
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0
        
            local assetsToDestroy = {"EmoteHatAsset", "EmoteLighting", "PlayerEmoteHand"}
            for _, assetName in ipairs(assetsToDestroy) do
                local asset = char:FindFirstChild(assetName)
                if asset then asset:Destroy() end
            end
        
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
        
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
        
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://100986631322204" then
                    track:Stop()
                end
            end
        end
    end
    
    
    local function activatethesilly2(state)
        local char = player.Character or player.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
    
        sillyactive = state
    
        if sillyactive then
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
    
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
    
    
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://74238051754912"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
    
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://123236721947419"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = false
            sound:Play()
    
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "Shucks"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
    
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
            end)
        else
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0
    
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
    
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
    
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://74238051754912" then
                    track:Stop()
                end
            end
        end
    end
    
    
    
    
    local function survivorHighlighter(state)
        isSurvivorHighlightActive = state
    
        local function applySurvivorHighlight(model)
            if model:IsA("Model") and model:FindFirstChild("Head") then
                local existingBillboard = model.Head:FindFirstChild("billboard")
                local existingHighlight = model:FindFirstChild("HiThere")
                
                if isSurvivorHighlightActive then
                    if not existingBillboard then
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "billboard"
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.StudsOffset = Vector3.new(0, 2, 0)
                        billboard.AlwaysOnTop = true
                        billboard.Parent = model.Head
                        
                        local textLabel = Instance.new("TextLabel", billboard)
                        textLabel.Size = UDim2.new(1, 0, 1, 0)
                        textLabel.Text = model.Name
                        textLabel.TextColor3 = Color3.new(1, 1, 1)
                        textLabel.TextStrokeTransparency = 0
                        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                        textLabel.BackgroundTransparency = 1
                    end
    
                    if not existingHighlight then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "HiThere"
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.FillColor = Color3.fromRGB(0, 255, 0)
                        highlight.Parent = model
                    end
                else
                    if existingBillboard then
                        existingBillboard:Destroy()
                    end
                    if existingHighlight then
                        existingHighlight:Destroy()
                    end
                end
            end
        end
    
        for _, v in pairs(game.Workspace.Players.Survivors:GetChildren()) do
            applySurvivorHighlight(v)
        end
    
        game.Workspace.Players.Survivors.ChildAdded:Connect(function(child)
            applySurvivorHighlight(child)
        end)
    end
    
    
    
    local function killerHighlighter(state)
        isKillerHighlightActive = state
    
        local function applyKillerHighlight(model)
            if model:IsA("Model") and model:FindFirstChild("Head") then
                local existingBillboard = model.Head:FindFirstChild("billboard")
                local existingHighlight = model:FindFirstChild("HiThere")
                
                if isKillerHighlightActive then
                    if not existingBillboard then
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "billboard"
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.StudsOffset = Vector3.new(0, 2, 0)
                        billboard.AlwaysOnTop = true
                        billboard.Parent = model.Head
                        
                        local textLabel = Instance.new("TextLabel", billboard)
                        textLabel.Size = UDim2.new(1, 0, 1, 0)
                        textLabel.Text = model.Name
                        textLabel.TextColor3 = Color3.new(1, 0, 0)
                        textLabel.TextStrokeTransparency = 0
                        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                        textLabel.BackgroundTransparency = 1
                    end
    
                    if not existingHighlight then
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "HiThere"
                        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.Parent = model
                    end
                else
                    if existingBillboard then
                        existingBillboard:Destroy()
                    end
                    if existingHighlight then
                        existingHighlight:Destroy()
                    end
                end
            end
        end
    
        for _, v in pairs(game.Workspace.Players.Killers:GetChildren()) do
            applyKillerHighlight(v)
        end
    
        game.Workspace.Players.Killers.ChildAdded:Connect(function(child)
            applyKillerHighlight(child)
        end)
    end
    
    local function bringbackjumppower(state)
        jumppowerenabled = state
    
        if jumppowerenabled then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
        else
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
        end
       
    end
    
    local function speedmulti(value)
        game.Players.LocalPlayer.Character.SpeedMultipliers.Sprinting.Value = value
    end

    local function bringbackjumppowerslider(value)
    
        if jumppowerenabled then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
        else
           return
        end
       
    end
    
    local function FOVmulti(value)
        game.Players.LocalPlayer.Character.FOVMultipliers.FOVSetting.Value = value
    end
    
    local function kaiguyskin()      
        if player.Character.Name ~= "Guest1337" then
                    Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't Guest, this POSSIBLY can bug out, so untoggle unless you're on Guest!", Duration = 5}
                    return end
            for _, v in pairs(player.Character:GetChildren()) do
                if v:IsA("Shirt") then
                    v:Destroy()
                end
    
                if v:IsA("Pants") then
                    v:Destroy()
                end
    
                local headband = Instance.new("Accessory")
                local scarf = Instance.new("Accessory")
                local shirt = Instance.new("Shirt")
                local pants = Instance.new("Pants")
                --
                local headbandhandle = Instance.new("Part")
                local scarfhandle = Instance.new("Part")
                local headbandhandleattach = Instance.new("Attachment")
                local scarfhandleattach = Instance.new("Attachment")
                local headbandweld = Instance.new("Weld")
                local scarfweld = Instance.new("Weld")
                scarfhandle.Name = "Handle"
                headbandhandle.Name = "Handle"
                scarfhandle.CanCollide = false
                headbandhandle.CanCollide = false
                --
                local headbandmesh = Instance.new("SpecialMesh")
                local scarfmesh = Instance.new("SpecialMesh")
                --
                shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=836903658"
                pants.PantsTemplate = "http://www.roblox.com/asset/?id=731578592"
                shirt.Parent = player.Character
                pants.Parent = player.Character
                 --
                headband.Parent = player.Character
                scarf.Parent = player.Character
                scarfhandle.Parent = scarf
                headbandhandle.Parent = headband
                headbandhandleattach.Parent = headbandhandle
                scarfhandleattach.Parent = scarfhandle
                headbandmesh.Parent = headbandhandle
                scarfmesh.Parent = scarfhandle
                headbandhandle.Color = Color3.fromRGB(27, 42, 53)
                scarfhandle.Color = Color3.fromRGB(27, 42, 53)
                --
                headbandweld.Parent = headbandhandle
                headbandweld.Name = "AccessoryWeld"
                headbandweld.Part0 = headbandhandle
                headbandweld.Part1 = player.Character.Head
                headbandweld.C0 = CFrame.new(0, 0, 0)
                headbandweld.C1 = CFrame.new(0, 0, 0)
                --
                scarfweld.Parent = scarfhandle
                scarfweld.Name = "AccessoryWeld"
                scarfweld.Part0 = scarfhandle
                scarfweld.Part1 = player.Character.Torso
                scarfweld.C0 = CFrame.new(0, -0.4, 0)
                scarfweld.C1 = CFrame.new(0, 0, 0)
                --
                headbandmesh.MeshId = "http://www.roblox.com/asset/?id=20407184"
                headbandmesh.Scale = Vector3.new(1.103, 1.071, 1.103)
                scarfmesh.MeshId = "http://www.roblox.com/asset/?id=99856331"
                scarfmesh.Scale = Vector3.new(1.071, 1.071, 1.071)
                scarfmesh.VertexColor = Vector3.new(1, 2, 1)
                --
                headbandhandleattach.Name = "HatAttachment"
                headbandhandleattach.CFrame = CFrame.new(0, 0.557, 0)
                scarfhandleattach.Name = "NeckAttachment"
                scarfhandleattach.CFrame = CFrame.new(0, 0.519, 0)
    
                local playergui = player.PlayerGui
                local playerinfo = playergui.TemporaryUI.PlayerInfo
    
        
            playerinfo.PlayerIcon.Image = "http://www.roblox.com/asset/?id=97047410245118"
     
    
            end
    end
    
    local function doomskin()      
        if player.Character.Name ~= "Shedletsky" then
                    Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't Shedletsky, this POSSIBLY can bug out, so untoggle unless you're on Shedletsky!", Duration = 5}
                    return end
            for _, v in pairs(player.Character:GetChildren()) do
                if v:IsA("Shirt") then
                    v:Destroy()
                end
    
                if v:IsA("Pants") then
                    v:Destroy()
                end
    
                local headband = Instance.new("Accessory")
             
                local shirt = Instance.new("Shirt")
                local pants = Instance.new("Pants")
                local tshirt = Instance.new("ShirtGraphic")
                --
                local headbandhandle = Instance.new("Part")
             
                local headbandhandleattach = Instance.new("Attachment")
              
                local headbandweld = Instance.new("Weld")
               
               
                headbandhandle.Name = "Handle"
              
                headbandhandle.CanCollide = false
                --
                local headbandmesh = Instance.new("SpecialMesh")
              
                --
                shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=1808496"
                pants.PantsTemplate = "http://www.roblox.com/asset/?id=1809861"
                tshirt.Graphic = "http://www.roblox.com/asset/?id=2426992"
                shirt.Parent = player.Character
                pants.Parent = player.Character
                tshirt.Parent = player.Character
                 --
                headband.Parent = player.Character
        
                headbandhandle.Parent = headband
                headbandhandleattach.Parent = headbandhandle
                
                headbandmesh.Parent = headbandhandle
               
                headbandhandle.Color = Color3.fromRGB(27, 42, 53)
                
                --
                headbandweld.Parent = headbandhandle
                headbandweld.Name = "AccessoryWeld"
                headbandweld.Part0 = headbandhandle
                headbandweld.Part1 = player.Character.Head
                headbandweld.C0 = CFrame.new(0, -0.5, 0)
                headbandweld.C1 = CFrame.new(0, 0, 0)
                --
                --
                headbandmesh.MeshId = "http://www.roblox.com/asset/?id=1286103"
                headbandmesh.TextureId = "rbxassetid://6858319251"
                headbandmesh.Scale = Vector3.new(0.992, 0.994, 0.992)
               if player.Character:FindFirstChild("ShedHair") then
                player.Character:FindFirstChild("ShedHair"):Destroy()
               end
                --
                headbandhandleattach.Name = "HatAttachment"
                headbandhandleattach.CFrame = CFrame.new(0, 0.557, 0)
    
                local playergui = player.PlayerGui
                local playerinfo = playergui.TemporaryUI.PlayerInfo
    
        
            playerinfo.PlayerIcon.Image = "http://www.roblox.com/asset/?id=118308385507069"
     
    
            end
    end


    
    local function chanceaimbot(state)
        chanceaim = state
        if game.Players.LocalPlayer.Character.Name ~= "Chance" and state then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't Chance, this POSSIBLY can bug out, so untoggle unless you're on Chance!", Duration = 5}
            return 
        end
        if state then
            chanceaimbotLoop = game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(child)
                if not chanceaim then return end
                for _, v in pairs(chanceaimbotsounds) do
                    if child.Name == v  then
                        local killer = game.Workspace.Players:FindFirstChild("Killers"):FindFirstChildOfClass("Model")
                        if killer and killer:FindFirstChild("HumanoidRootPart") then
                            local killerHRP = killer.HumanoidRootPart
                            local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if playerHRP then
                                local direction = (killerHRP.Position - playerHRP.Position).Unit
                                local num = 1
                                local maxIterations = 100
                            
                                
                                    while num <= maxIterations do
                                        task.wait(0.01)
                                        num = num + 1
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, killerHRP.Position)
                                        playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, Vector3.new(killerHRP.Position.X, killerHRP.Position.Y, killerHRP.Position.Z))
                                    end
                                
                            
                            end
                        end
                    end
                end
            end)
        else
            if chanceaimbotLoop then
                chanceaimbotLoop:Disconnect()
                chanceaimbotLoop = nil
            end
        end
    end
    
    local function shedaimbot(state)
        shedaim = state
        if game.Players.LocalPlayer.Character.Name ~= "Shedletsky" and state then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't Shedletsky, this POSSIBLY can bug out, so untoggle unless you're on Shedletsky!", Duration = 5}
            return
        end
        if state then
            shedloop = game.Players.LocalPlayer.Character.Sword.ChildAdded:Connect(function(child)
                if not shedaim then return end
                for _, v in pairs(shedaimbotsounds) do
                    if child.Name == v then
                        local killersFolder = game.Workspace.Players:FindFirstChild("Killers")
                        if killersFolder then
                            local killer = killersFolder:FindFirstChildOfClass("Model")
                            if killer and killer:FindFirstChild("HumanoidRootPart") then
                                local killerHRP = killer.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                if playerHRP then
                                    local num = 1
                                    local maxIterations = 100
    
                                    while num <= maxIterations do
                                        task.wait(0.01)
                                        num = num + 1
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, killerHRP.Position)
                                        playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, killerHRP.Position)
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        else
            if shedloop then
                shedloop:Disconnect()
                shedloop = nil
            end
        end
    end
    
    local function guestaimbot(state)
        shedaim = state
        if game.Players.LocalPlayer.Character.Name ~= "Guest1337" and state then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't Guest, this POSSIBLY can bug out, so untoggle unless you're on Guest!", Duration = 5}
            return
        end
        if state then
            shedloop = game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(child)
                if not shedaim then return end
                for _, v in pairs(guestsounds) do
                    if child.Name == v then
                        local killersFolder = game.Workspace.Players:FindFirstChild("Killers")
                        if killersFolder then
                            local killer = killersFolder:FindFirstChildOfClass("Model")
                            if killer and killer:FindFirstChild("HumanoidRootPart") then
                                local killerHRP = killer.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                if playerHRP then
                                    local num = 1
                                    local maxIterations = 100
    
                                    while num <= maxIterations do
                                        task.wait(0.01)
                                        num = num + 1
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, killerHRP.Position)
                                        playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, killerHRP.Position)
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        else
            if guestloop then
                guestloop:Disconnect()
                guestloop = nil
            end
        end
    end
        
    local function aimbot1x1x1x1(state)
        aimbot1x1 = state
    
        if game.Players.LocalPlayer.Character.Name ~= "1x1x1x1" and state then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't  1x, this POSSIBLY can bug out, so untoggle unless you're on 1x!", Duration = 5}
            return 
        end
    
        if state then
            aimbot1x1loop = game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(child)
                if not aimbot1x1 then return end
                for _, v in pairs(aimbot1x1sounds) do
                    if child.Name == v then
                        local survivors = {}
                        for _, player in pairs(game.Players:GetPlayers()) do
                            if player ~= game.Players.LocalPlayer then
                                local character = player.Character
                                if character and character:FindFirstChild("HumanoidRootPart") then
                                    table.insert(survivors, character)
                                end
                            end
                        end
    
                        local nearestSurvivor = nil
                        local shortestDistance = math.huge  
                        
                        for _, survivor in pairs(survivors) do
                            local survivorHRP = survivor.HumanoidRootPart
                            local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            
                            if playerHRP then
                                local distance = (survivorHRP.Position - playerHRP.Position).Magnitude
                                if distance < shortestDistance then
                                    shortestDistance = distance
                                    nearestSurvivor = survivor
                                end
                            end
                        end
                        
                        if nearestSurvivor then
                            local nearestHRP = nearestSurvivor.HumanoidRootPart
                            local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            
                            if playerHRP then
                                local direction = (nearestHRP.Position - playerHRP.Position).Unit
                                local num = 1
                                local maxIterations = 100 
    
                                
                                    if child.Name == "rbxassetid://79782181585087" then
                                        maxIterations = 220  
                                    end
    
                                while num <= maxIterations do
                                    task.wait(0.01)
                                    num = num + 1
                                    workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, nearestHRP.Position)
                                    playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, Vector3.new(nearestHRP.Position.X, nearestHRP.Position.Y, nearestHRP.Position.Z))
                                end
                            
                            end
                        end
                    end
                end
            end)
        else
            if aimbot1x1loop then
                aimbot1x1loop:Disconnect()
                aimbot1x1loop = nil
            end
        end
    end
    
    local function johnaimbot(state)
        johnaim = state
        if game.Players.LocalPlayer.Character.Name ~= "JohnDoe" and state then
            Rayfield:Notify{Title = "Wrong Character", Content = "Oops, your current character isn't John Doe, this POSSIBLY can bug out, so untoggle unless you're on John!", Duration = 5}
            return 
        end
            if state then
                johnloop = game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(child)
                    if not johnaim then return end
                    for _, v in pairs(johnaimbotsounds) do
                        if child.Name == v then
                           
                            local survivors = {}
                            for _, player in pairs(game.Players:GetPlayers()) do
                                if player ~= game.Players.LocalPlayer then
                                    local character = player.Character
                                    if character and character:FindFirstChild("HumanoidRootPart") then
                                        table.insert(survivors, character)
                                    end
                                end
                            end
        
                           
                            local nearestSurvivor = nil
                            local shortestDistance = math.huge  
                            
                            for _, survivor in pairs(survivors) do
                                local survivorHRP = survivor.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                
                                if playerHRP then
                                    local distance = (survivorHRP.Position - playerHRP.Position).Magnitude
                                    if distance < shortestDistance then
                                        shortestDistance = distance
                                        nearestSurvivor = survivor
                                    end
                                end
                            end
                            
                          
                            if nearestSurvivor then
                                local nearestHRP = nearestSurvivor.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                local maxIterations = 330
                                if playerHRP then
                                    local direction = (nearestHRP.Position - playerHRP.Position).Unit
                                    local num = 1
                                   
                                        
                                        while num <= maxIterations do
                                            task.wait(0.01)
                                            num = num + 1
                                            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, nearestHRP.Position)
                                            playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, Vector3.new(nearestHRP.Position.X, nearestHRP.Position.Y, nearestHRP.Position.Z))
                    
                                    end
                                end
                            end
                        end
                    end
                end)
            else
                if johnloop then
                    johnloop:Disconnect()
                    johnloop = nil
                end
            end
    end
    
    local function jasonaimbot(state)
        jasonaim = state
        if game.Players.LocalPlayer.Character.Name ~= "Jason" and state then
            Rayfield:Notify{Title = "Wrong Character", Text = "Oops, your current character isn't Jason, this POSSIBLY can bug out, so untoggle unless you're on Jason. Also this is buggy asf lmao", Duration = 5}
            return 
        end
            if state then
                jasonaimbotloop = game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(child)
                    if not jasonaim then return end
                    for _, v in pairs(jasonaimbotsounds) do
                        if child.Name == v then
                           
                            local survivors = {}
                            for _, player in pairs(game.Players:GetPlayers()) do
                                if player ~= game.Players.LocalPlayer then
                                    local character = player.Character
                                    if character and character:FindFirstChild("HumanoidRootPart") then
                                        table.insert(survivors, character)
                                    end
                                end
                            end
        
                           
                            local nearestSurvivor = nil
                            local shortestDistance = math.huge  
                            
                            for _, survivor in pairs(survivors) do
                                local survivorHRP = survivor.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                
                                if playerHRP then
                                    local distance = (survivorHRP.Position - playerHRP.Position).Magnitude
                                    if distance < shortestDistance then
                                        shortestDistance = distance
                                        nearestSurvivor = survivor
                                    end
                                end
                            end
                            
                          
                            if nearestSurvivor then
                                local nearestHRP = nearestSurvivor.HumanoidRootPart
                                local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                local maxIterations = 70
                                if playerHRP then
                                    local direction = (nearestHRP.Position - playerHRP.Position).Unit
                                    local num = 1
                                   
                                        
                                        while num <= maxIterations do
                                            task.wait(0.01)
                                            num = num + 1
                                            
                                            playerHRP.CFrame = CFrame.lookAt(playerHRP.Position, Vector3.new(nearestHRP.Position.X, nearestHRP.Position.Y, nearestHRP.Position.Z))
                    
                                    end
                                end
                            end
                        end
                    end
                end)
            else
                if jasonaimbotloop then
                    jasonaimbotloop:Disconnect()
                    jasonaimbotloop = nil
                end
            end
    end
    
    local function flip() -- bro ivan if you see this mine started SPINNING LIKE A DOLPHIN I CANT BRO IM SORRY BUT I WANTED TO USE THIS WHEN I WAS USING MY UI LOLLL 
        local char = player.Character
        local hum = char.Humanoid
        local animator = hum.Animator
        local hrp = char.HumanoidRootPart
    
    
        if animator then
            for _, v in pairs(animator:GetPlayingAnimationTracks()) do
                v:Stop()
            end
        end
    
        hum:ChangeState(Enum.HumanoidStateType.Physics)
            hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
            hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
            hum:SetStateEnabled(Enum.HumanoidStateType.Running, false)
            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
    
            local duration = 0.45
            local steps = 120
            local startCFrame = hrp.CFrame
            local forwardVector = startCFrame.LookVector
            local upVector = Vector3.new(0, 1, 0)
            task.spawn(function()
                local startTime = tick()
                for i = 1, steps do
                    local t = i / steps
                    local height = 4 * (t - t ^ 2) * 10
                    local nextPos = startCFrame.Position + forwardVector * (35 * t) + upVector * height
                    local rotation = startCFrame.Rotation * CFrame.Angles(-math.rad(i * (360 / steps)), 0, 0)
    
                    hrp.CFrame = CFrame.new(nextPos) * rotation
                    local elapsedTime = tick() - startTime
                    local expectedTime = (duration / steps) * i
                    local waitTime = expectedTime - elapsedTime
                    if waitTime > 0 then
                        task.wait(waitTime)
                    end
                end
    
                hrp.CFrame = CFrame.new(startCFrame.Position + forwardVector * 35) * startCFrame.Rotation
                hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
                hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
                hum:SetStateEnabled(Enum.HumanoidStateType.Running, true)
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
                hum:ChangeState(Enum.HumanoidStateType.Running)
    
                
            end)
    
    
    end
    
    
    
    
    
    
    
    
    local function staminadrainono(state)
        stam = state
        local stamscript = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)
        
        local connection
        connection = game:GetService("RunService").Heartbeat:Connect(function()
            if not stam then
                connection:Disconnect()
                stamscript.StaminaLossDisabled = nil
                return
            end
            stamscript.StaminaLossDisabled = function() 
            end
        end)
        
        
        
            
    end
    
    
    
    local function unlockclientcharacters()
        local clone = game.Players.LocalPlayer.PlayerData.Equipped.Skins:Clone()
        clone.Parent = game.Players.LocalPlayer.PlayerData.Purchased.Killers
        for i, v in pairs(clone:GetChildren()) do
            v.Parent = game.Players.LocalPlayer.PlayerData.Purchased.Killers
            end
        local clone2 = game.Players.LocalPlayer.PlayerData.Equipped.Skins:Clone()
        clone2.Parent = game.Players.LocalPlayer.PlayerData.Purchased.Survivors
        
            for i, v in pairs(clone2:GetChildren()) do
            v.Parent = game.Players.LocalPlayer.PlayerData.Purchased.Survivors
            end
    end
    
    
    
    
    
    Rayfield:Notify{Title = "JOIN THE DISCORD", Content = "plz https://discord.gg/fGFV3r9yKC", Duration = 60, Image = "clipboard"}
    Rayfield:Notify{Title = "Welcome to Apple Ware", Content = "Feel free to post any bugs or suggestions in the server :)", Duration = 10, Image = "Apple"}
   
    
    
    local VisualTab = GUI:CreateTab("Visuals", "eye")
        
    local gentab = GUI:CreateTab("Generator", "archive")
   
    local chartab = GUI:CreateTab("Killers", "axe")
    
    local survivortab = GUI:CreateTab("Survivors", "key")
    
    local blatanttab = GUI:CreateTab("Blatant", "laugh")
    
    local misctab = GUI:CreateTab("Misc", "meh")
    
    
    
    
    local InstantSolveButton = gentab:CreateButton({
        Name = "Instant Solver Button",
        Callback = function()
        instantsolvegen()
        end,
     })
    
     local InstantSolveButtonGenHell = gentab:CreateButton({
        Name = "Gen Hell 2 Map Instant Solver Button",
        Callback = function()
        instantsolvegenhell()
        end,
     })
    
    
     local OnePuzzle = gentab:CreateButton({
        Name = "One Puzzle Solver Button",
        Callback = function()
        solvegen()
        end,
     })
    

     gentab:CreateDivider() 


    
     local Toggle1 = gentab:CreateToggle({
        Name = "Auto Generator",
        CurrentValue = false,
      
        Callback = function(state)
        autogen(state)
        end,
     })


     local Toggle2 = gentab:CreateToggle({
        Name = "Generator Highlighter",
        CurrentValue = false,
     
        Callback = function(state)
        toggleHighlightGen(state)
        end,
     })
    
     gentab:CreateDivider() 

     local Keybind = gentab:CreateKeybind({
        Name = "Do Current Generator Puzzle",
        CurrentKeybind = "H",
        HoldToInteract = false,
       
        Callback = function(Keybind)
        solvegen()
        end,
     })

     local Slider1 = gentab:CreateSlider({
        Name = "Auto Gen Delay",
        Range = {2.5, 10},
        Increment = 0.1,
        Suffix = "seconds",
        CurrentValue = 0.1,
         
        Callback = function(value)
        setdelay(value)
        end,
     })

    --
    local Toggle3 = VisualTab:CreateToggle({
        Name = "Tool Highlighter",
        CurrentValue = false,
    
        Callback = function(state)
        highlighttools(state)
        end,
     })
    
     local Toggle4 = VisualTab:CreateToggle({
        Name = "Survivor Highligter",
        CurrentValue = false,
     
        Callback = function(state)
        survivorHighlighter(state)
        end,
     })
    
     local Toggle5 = VisualTab:CreateToggle({
        Name = "Killer Highligter",
        CurrentValue = false,
       
        Callback = function(state)
        killerHighlighter(state)
        end,
     })
    
     local Toggle6 = VisualTab:CreateToggle({
        Name = "C00lkidd ESP",
        CurrentValue = false,
       
        Callback = function(state)
        corruptnatureesp(state)
        end,
     })
    
     local Toggle7 = VisualTab:CreateToggle({
        Name = "Survivor Utility Highlighter",
        CurrentValue = false,
      
        Callback = function(state)
        survivorutilesp(state)
        end,
     })
    --
    
    local UnlockChars  = misctab:CreateButton({
        Name = "Unlock Characters [CLIENT]",
        Callback = function()
        unlockclientcharacters()
        end,
     })
    
     misctab:CreateDivider() 
    
     local Toggle8 = misctab:CreateToggle({
        Name = "Hakari Dance",
        CurrentValue = false,
        
        Callback = function(state)
        activatethehakari(state)
        end,
     })
    
     local Toggle9 = misctab:CreateToggle({
        Name = "Aw Shucks [PAID EXECS]",
        CurrentValue = false,
        
        Callback = function(state)
        activatethesilly(state)
        end,
     })
    
     local Toggle10 = misctab:CreateToggle({
        Name = "Aw Shucks [FREE EXECS]",
        CurrentValue = false,
        
        Callback = function(state)
        activatethesilly2(state)
        end,
     })
    
     local Toggle11 = misctab:CreateToggle({
        Name = "Miss the Quiet",
        CurrentValue = false,
       
        Callback = function(state)
        activatethequiet(state)
        end,
     })
    
     misctab:CreateDivider() 
    
     local Toggle12 = misctab:CreateToggle({
        Name = "Hide Player Bar",
        CurrentValue = false,
         
        Callback = function(state)
            togglehidebar(state)
        end,
     })
    
     misctab:CreateDivider() 

     local Slider2 = misctab:CreateSlider({
        Name = "FOV",
        Range = {1, 2},
        Increment = 1,
        Suffix = ";",
        CurrentValue = 1,
      
        Callback = function(value)
        FOVmulti(value)
        end,
     })

     misctab:CreateDivider() 

     local Key = misctab:CreateKeybind({
        Name = "flip lol",
        CurrentKeybind = "~",
        HoldToInteract = false,
       
        Callback = function(Keybind)
        flip()
        end,
     })
     
    
    --
    
    -- 
    
    local kaiguy = survivortab:CreateButton({
        Name = "Kai 1337 Skin",
        Callback = function()
        kaiguyskin()
        end,
     })

     local doom = survivortab:CreateButton({
        Name = "Doombringer Shed Skin",
        Callback = function()
        doomskin()
        end,
     })
    
     survivortab:CreateDivider() 

     local Toggle13 = survivortab:CreateToggle({
        Name = "Chance Aimbot",
        CurrentValue = false,
        
        Callback = function(state)
            chanceaimbot(state)
        end,
     })
    
     local Toggle14 = survivortab:CreateToggle({
        Name = "Shed Aimbot",
        CurrentValue = false,
        
        Callback = function(state)
            shedaimbot(state)
        end,
     })
    
     local Toggle15 = survivortab:CreateToggle({
        Name = "Guest Aimbot",
        CurrentValue = false,
        
        Callback = function(state)
            guestaimbot(state)
        end,
     })

     local Toggle16 = survivortab:CreateToggle({
        Name = "Pizza TP",
        CurrentValue = false,
        
        Callback = function(state)
            givemesomepizza(state)
        end,
     })
    --
    local CoolKidAimbotToggle = chartab:CreateToggle({ -- creds to ivan.. ivan if ur seeing this i accidentally deleted mine and lost it and its 2 lines so xd.
        Name = "C00lkid Aimbot",
        CurrentValue = false,
        Callback = function(state)
            game:GetService("ReplicatedStorage").Modules.Network.RemoteEvent:FireServer("SetDevice", state and "Mobile" or "PC")
        end,
    })
    

    local aimbot1x1x1aimbot = chartab:CreateToggle({
        Name = "1x1x1x1 aimbot",
        CurrentValue = false,
        Callback = function(state)
           aimbot1x1x1x1(state)
        end,
    })


    chartab:CreateDivider() 

    local popupsolver = chartab:CreateToggle({
        Name = "Instant Pop-Up solver",
        CurrentValue = false,
        Callback = function(state)
            Do1x1PopupsLoop = state and task.spawn(Do1x1x1x1Popups)
        end,
    })

    
    --
    
    
    
    
    
    
    local JohnAimbot = blatanttab:CreateToggle({ 
        Name = "John Doe Spike Aimbot",
        CurrentValue = false,
        Callback = function(state)
            johnaimbot(state)
        end,
    })
    
    local JasonAimbot = blatanttab:CreateToggle({ 
        Name = "Jason Aimbot [BUGGY. ONLY KILL WITH ABILITIES]",
        CurrentValue = false,
        Callback = function(state)
            jasonaimbot(state)
        end,
    })
    
    blatanttab:CreateDivider() 


    local nostaminaloss = blatanttab:CreateToggle({ 
        Name = "No Stamina Loss",
        CurrentValue = false,
        Callback = function(state)
            staminadrainono(state)
        end,
    })
    
    
    local jump = blatanttab:CreateToggle({ 
        Name = "Bring Back Jump Power",
        CurrentValue = false,
        Callback = function(state)
            bringbackjumppower(state)
        end,
    })
    
    local hawktuah = blatanttab:CreateToggle({ 
        Name = "Hawk Tuah Mode",
        CurrentValue = false,
        Callback = function(state)
            hawktuahmode(state)
        end,
    })
    
    blatanttab:CreateDivider() 

    local WalkspeedSlider = blatanttab:CreateSlider({
        Name = "WalkSpeed",
        Range = {1, 1000},
        Increment = 1,
        Suffix = ";",
        CurrentValue = 1,
        Callback = function(value)
        speedmulti(value)
        end,
     })

     local JumpspeedSlider = blatanttab:CreateSlider({
        Name = "Jump Power",
        Range = {1, 1000},
        Increment = 1,
        Suffix = ";",
        CurrentValue = 50,
        Callback = function(value)
        bringbackjumppowerslider(value)
        end,
     })
end

initialize()


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Forsaken Meta Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Meta Hub",
   LoadingSubtitle = "by Metta",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image
local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image
local EspTab = Window:CreateTab("Esp", 4483362458) -- Title, Image
local GeneratorTab = Window:CreateTab("Generators", 4483362458)
local AimbotTab = Window:CreateTab("Aimbot", 4483362458) -- Title, Image
local Toggle = PlayerTab:CreateToggle({
   Name = "Infinite Stamina",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
           
           local originalStaminaChange = sprintingModule.ChangeStat
           sprintingModule.ChangeStat = function(self, stat, value)
               if stat == "Stamina" then
                   return
               end
               return originalStaminaChange(self, stat, value)
           end
           
           local originalInit = sprintingModule.Init
           sprintingModule.Init = function(self)
               originalInit(self)
               
               self.StaminaLossDisabled = true
               self.Stamina = self.MaxStamina
               
               local staminaLoop
               staminaLoop = game:GetService("RunService").Heartbeat:Connect(function()
                   if self.Stamina < self.MaxStamina then
                       self.Stamina = self.MaxStamina
                       if self.__staminaChangedEvent then
                           self.__staminaChangedEvent:Fire(self.MaxStamina)
                       end
                   end
               end)
               
               self._infiniteStaminaLoop = staminaLoop
           end
           
           if sprintingModule.DefaultsSet then
               sprintingModule.StaminaLossDisabled = true
               sprintingModule.Stamina = sprintingModule.MaxStamina
               
               if not sprintingModule._infiniteStaminaLoop then
                   local staminaLoop = game:GetService("RunService").Heartbeat:Connect(function()
                       if sprintingModule.Stamina < sprintingModule.MaxStamina then
                           sprintingModule.Stamina = sprintingModule.MaxStamina
                           if sprintingModule.__staminaChangedEvent then
                               sprintingModule.__staminaChangedEvent:Fire(sprintingModule.MaxStamina)
                           end
                       end
                   end)
                   sprintingModule._infiniteStaminaLoop = staminaLoop
               end
           end
           
           _G.InfiniteStaminaData = {
               OriginalChangeStat = originalStaminaChange,
               OriginalInit = originalInit,
               Module = sprintingModule
           }
           
       else
           if _G.InfiniteStaminaData then
               local sprintingModule = _G.InfiniteStaminaData.Module
               
               sprintingModule.ChangeStat = _G.InfiniteStaminaData.OriginalChangeStat
               sprintingModule.Init = _G.InfiniteStaminaData.OriginalInit
               sprintingModule.StaminaLossDisabled = false
               
               if sprintingModule._infiniteStaminaLoop then
                   sprintingModule._infiniteStaminaLoop:Disconnect()
                   sprintingModule._infiniteStaminaLoop = nil
               end
               
               _G.InfiniteStaminaData = nil
           end
       end
   end,
})
local Input = PlayerTab:CreateInput({
   Name = "Speed",
   CurrentValue = "",
   PlaceholderText = "Enter sprint speed",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       local newSpeed = tonumber(Text)
       if newSpeed then
           local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
           
           if sprintingModule then
               sprintingModule.SprintSpeed = newSpeed
               
               if sprintingModule.IsSprinting and sprintingModule.__speedMultiplier then
                   local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                   if humanoid then
                       local baseSpeed = humanoid:GetAttribute("BaseSpeed") or 16
                       sprintingModule.__speedMultiplier.Value = newSpeed / baseSpeed
                   end
               end
           end
       end
   end,
})
local Input = PlayerTab:CreateInput({
   Name = "Stamina gain/sec",
   CurrentValue = "",
   PlaceholderText = "Enter stamina gain per second",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       local newGain = tonumber(Text)
       if newGain then
           local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
           
           if sprintingModule then
               sprintingModule.StaminaGain = newGain
           end
       end
   end,
})
local Toggle = EspTab:CreateToggle({
   Name = "Killer esp",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           if not _G.KillerESPData then
               _G.KillerESPData = {
                   Highlights = {},
                   Connections = {}
               }
           end

           local function isKiller(model)
               return model:IsA("Model") and model.Parent and model.Parent.Name == "Killers" and model.Parent.Parent and model.Parent.Parent.Name == "Players" and model.Parent.Parent.Parent == game.Workspace
           end

           local function updateKillerESP()
               for killer, highlight in pairs(_G.KillerESPData.Highlights) do
                   if killer and killer.Parent then
                       highlight.Adornee = killer
                       highlight.Enabled = true
                   else
                       highlight.Enabled = false
                   end
               end
           end

           local function createKillerESP(killer)
               if not isKiller(killer) then return end
               
               local highlight = Instance.new("Highlight")
               highlight.Name = killer.Name .. "_KillerESP"
               highlight.FillColor = Color3.fromRGB(255, 0, 0)
               highlight.FillTransparency = 0.5
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
               highlight.OutlineTransparency = 0.2
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Parent = game.CoreGui
               
               _G.KillerESPData.Highlights[killer] = highlight
           end

           local function scanForKillers()
               local playersFolder = game.Workspace:FindFirstChild("Players")
               if playersFolder then
                   local killersFolder = playersFolder:FindFirstChild("Killers")
                   if killersFolder then
                       for _, killer in pairs(killersFolder:GetChildren()) do
                           if killer:IsA("Model") then
                               createKillerESP(killer)
                           end
                       end
                   end
               end
           end

           scanForKillers()

           local function handleDescendantAdded(descendant)
               if descendant:IsA("Model") then
                   local parent = descendant.Parent
                   if parent and parent.Name == "Killers" then
                       local grandParent = parent.Parent
                       if grandParent and grandParent.Name == "Players" and grandParent.Parent == game.Workspace then
                           createKillerESP(descendant)
                       end
                   end
               end
           end

           local function handleDescendantRemoving(descendant)
               if _G.KillerESPData.Highlights[descendant] then
                   _G.KillerESPData.Highlights[descendant]:Destroy()
                   _G.KillerESPData.Highlights[descendant] = nil
               end
           end

           local descendantAddedConn = game.Workspace.DescendantAdded:Connect(handleDescendantAdded)
           local descendantRemovingConn = game.Workspace.DescendantRemoving:Connect(handleDescendantRemoving)

           _G.KillerESPData.MainConnections = {
               descendantAdded = descendantAddedConn,
               descendantRemoving = descendantRemovingConn
           }

           _G.KillerESPData.UpdateLoop = game:GetService("RunService").Heartbeat:Connect(function()
               updateKillerESP()
           end)

       else
           if _G.KillerESPData then
               if _G.KillerESPData.UpdateLoop then
                   _G.KillerESPData.UpdateLoop:Disconnect()
               end

               if _G.KillerESPData.MainConnections then
                   _G.KillerESPData.MainConnections.descendantAdded:Disconnect()
                   _G.KillerESPData.MainConnections.descendantRemoving:Disconnect()
               end

               for killer, highlight in pairs(_G.KillerESPData.Highlights) do
                   highlight:Destroy()
               end

               _G.KillerESPData = nil
           end
       end
   end,
})
local Toggle = EspTab:CreateToggle({
   Name = "Players' esp",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           if not _G.SurvivorESPData then
               _G.SurvivorESPData = {
                   Highlights = {},
                   Connections = {}
               }
           end

           local function isSurvivor(model)
               return model:IsA("Model") and model.Parent and model.Parent.Name == "Survivors" and model.Parent.Parent and model.Parent.Parent.Name == "Players" and model.Parent.Parent.Parent == game.Workspace and model ~= game.Players.LocalPlayer.Character
           end

           local function updateSurvivorESP()
               for survivor, highlight in pairs(_G.SurvivorESPData.Highlights) do
                   if survivor and survivor.Parent then
                       highlight.Adornee = survivor
                       highlight.Enabled = true
                   else
                       highlight.Enabled = false
                   end
               end
           end

           local function createSurvivorESP(survivor)
               if not isSurvivor(survivor) then return end
               
               local highlight = Instance.new("Highlight")
               highlight.Name = survivor.Name .. "_SurvivorESP"
               highlight.FillColor = Color3.fromRGB(0, 255, 0)
               highlight.FillTransparency = 0.6
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
               highlight.OutlineTransparency = 0.2
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Parent = game.CoreGui
               
               _G.SurvivorESPData.Highlights[survivor] = highlight
           end

           local function scanForSurvivors()
               local playersFolder = game.Workspace:FindFirstChild("Players")
               if playersFolder then
                   local survivorsFolder = playersFolder:FindFirstChild("Survivors")
                   if survivorsFolder then
                       for _, survivor in pairs(survivorsFolder:GetChildren()) do
                           if survivor:IsA("Model") then
                               createSurvivorESP(survivor)
                           end
                       end
                   end
               end
           end

           scanForSurvivors()

           local function handleDescendantAdded(descendant)
               if descendant:IsA("Model") then
                   local parent = descendant.Parent
                   if parent and parent.Name == "Survivors" then
                       local grandParent = parent.Parent
                       if grandParent and grandParent.Name == "Players" and grandParent.Parent == game.Workspace then
                           createSurvivorESP(descendant)
                       end
                   end
               end
           end

           local function handleDescendantRemoving(descendant)
               if _G.SurvivorESPData.Highlights[descendant] then
                   _G.SurvivorESPData.Highlights[descendant]:Destroy()
                   _G.SurvivorESPData.Highlights[descendant] = nil
               end
           end

           local descendantAddedConn = game.Workspace.DescendantAdded:Connect(handleDescendantAdded)
           local descendantRemovingConn = game.Workspace.DescendantRemoving:Connect(handleDescendantRemoving)

           _G.SurvivorESPData.MainConnections = {
               descendantAdded = descendantAddedConn,
               descendantRemoving = descendantRemovingConn
           }

           _G.SurvivorESPData.UpdateLoop = game:GetService("RunService").Heartbeat:Connect(function()
               updateSurvivorESP()
           end)

       else
           if _G.SurvivorESPData then
               if _G.SurvivorESPData.UpdateLoop then
                   _G.SurvivorESPData.UpdateLoop:Disconnect()
               end

               if _G.SurvivorESPData.MainConnections then
                   _G.SurvivorESPData.MainConnections.descendantAdded:Disconnect()
                   _G.SurvivorESPData.MainConnections.descendantRemoving:Disconnect()
               end

               for survivor, highlight in pairs(_G.SurvivorESPData.Highlights) do
                   highlight:Destroy()
               end

               _G.SurvivorESPData = nil
           end
       end
   end,
})
local Toggle = EspTab:CreateToggle({
   Name = "Item esp",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           if not _G.ItemESPData then
               _G.ItemESPData = {
                   Highlights = {},
                   Billboards = {},
                   Connections = {}
               }
           end

           local function isTargetItem(model)
               return model:IsA("Model") and (model.Name == "BloxyCola" or model.Name == "Medkit") and 
                      model.Parent and model.Parent.Name == "Map" and 
                      model.Parent.Parent and model.Parent.Parent.Name == "Ingame" and 
                      model.Parent.Parent.Parent and model.Parent.Parent.Parent.Name == "Map" and 
                      model.Parent.Parent.Parent.Parent == game.Workspace
           end

           local function updateItemESP()
               for item, data in pairs(_G.ItemESPData.Highlights) do
                   if item and item.Parent then
                       data.highlight.Adornee = item
                       data.highlight.Enabled = true
                       if data.billboard then
                           data.billboard.Adornee = item
                           data.billboard.Enabled = true
                       end
                   else
                       data.highlight.Enabled = false
                       if data.billboard then
                           data.billboard.Enabled = false
                       end
                   end
               end
           end

           local function createItemESP(item)
               if not isTargetItem(item) then return end
               
               local highlight = Instance.new("Highlight")
               highlight.Name = item.Name .. "_ItemESP"
               highlight.FillColor = Color3.fromRGB(128, 0, 128)
               highlight.FillTransparency = 0.5
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
               highlight.OutlineTransparency = 0.1
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Parent = game.CoreGui
               
               local billboard = Instance.new("BillboardGui")
               billboard.Name = item.Name .. "_Label"
               billboard.Size = UDim2.new(0, 80, 0, 20)
               billboard.StudsOffset = Vector3.new(0, 2, 0)
               billboard.AlwaysOnTop = true
               billboard.Adornee = item
               billboard.Parent = game.CoreGui
               
               local textLabel = Instance.new("TextLabel")
               textLabel.Size = UDim2.new(1, 0, 1, 0)
               textLabel.BackgroundTransparency = 1
               textLabel.Text = item.Name
               textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
               textLabel.TextSize = 12
               textLabel.Font = Enum.Font.SourceSansBold
               textLabel.TextStrokeTransparency = 0
               textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
               textLabel.Parent = billboard
               
               _G.ItemESPData.Highlights[item] = {
                   highlight = highlight,
                   billboard = billboard
               }
           end

           local function scanForItems()
               local mapFolder = game.Workspace:FindFirstChild("Map")
               if mapFolder then
                   local ingameFolder = mapFolder:FindFirstChild("Ingame")
                   if ingameFolder then
                       local mapSubFolder = ingameFolder:FindFirstChild("Map")
                       if mapSubFolder then
                           for _, item in pairs(mapSubFolder:GetDescendants()) do
                               if item:IsA("Model") and (item.Name == "BloxyCola" or item.Name == "Medkit") then
                                   createItemESP(item)
                               end
                           end
                       end
                   end
               end
           end

           scanForItems()

           local function handleDescendantAdded(descendant)
               if descendant:IsA("Model") and (descendant.Name == "BloxyCola" or descendant.Name == "Medkit") then
                   local parent = descendant.Parent
                   if parent and parent.Name == "Map" then
                       local grandParent = parent.Parent
                       if grandParent and grandParent.Name == "Ingame" then
                           local greatGrandParent = grandParent.Parent
                           if greatGrandParent and greatGrandParent.Name == "Map" and greatGrandParent.Parent == game.Workspace then
                               createItemESP(descendant)
                           end
                       end
                   end
               end
           end

           local function handleDescendantRemoving(descendant)
               if _G.ItemESPData.Highlights[descendant] then
                   local data = _G.ItemESPData.Highlights[descendant]
                   data.highlight:Destroy()
                   if data.billboard then
                       data.billboard:Destroy()
                   end
                   _G.ItemESPData.Highlights[descendant] = nil
               end
           end

           local descendantAddedConn = game.Workspace.DescendantAdded:Connect(handleDescendantAdded)
           local descendantRemovingConn = game.Workspace.DescendantRemoving:Connect(handleDescendantRemoving)

           _G.ItemESPData.MainConnections = {
               descendantAdded = descendantAddedConn,
               descendantRemoving = descendantRemovingConn
           }

           _G.ItemESPData.UpdateLoop = game:GetService("RunService").Heartbeat:Connect(function()
               updateItemESP()
           end)

       else
           if _G.ItemESPData then
               if _G.ItemESPData.UpdateLoop then
                   _G.ItemESPData.UpdateLoop:Disconnect()
               end

               if _G.ItemESPData.MainConnections then
                   _G.ItemESPData.MainConnections.descendantAdded:Disconnect()
                   _G.ItemESPData.MainConnections.descendantRemoving:Disconnect()
               end

               for item, data in pairs(_G.ItemESPData.Highlights) do
                   data.highlight:Destroy()
                   if data.billboard then
                       data.billboard:Destroy()
                   end
               end

               _G.ItemESPData = nil
           end
       end
   end,
})
local Toggle = EspTab:CreateToggle({
   Name = "Generators' esp",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           if not _G.GeneratorESPData then
               _G.GeneratorESPData = {
                   Highlights = {},
                   Billboards = {},
                   Connections = {}
               }
           end

           local function isGenerator(model)
               return model:IsA("Model") and model.Name == "Generator" and 
                      model.Parent and model.Parent.Name == "Map" and 
                      model.Parent.Parent and model.Parent.Parent.Name == "Ingame" and 
                      model.Parent.Parent.Parent and model.Parent.Parent.Parent.Name == "Map" and 
                      model.Parent.Parent.Parent.Parent == game.Workspace
           end

           -- Функция для получения прогресса генератора
           local function getGeneratorProgress(generator)
               local progressValue = generator:FindFirstChild("Progress")
               if progressValue and progressValue:IsA("NumberValue") then
                   return progressValue.Value
               end
               return 0
           end

           local function updateGeneratorESP()
               for generator, highlight in pairs(_G.GeneratorESPData.Highlights) do
                   if generator and generator.Parent then
                       local progress = getGeneratorProgress(generator)
                       
                       -- Если прогресс 100% - скрываем подсветку
                       if progress >= 100 then
                           highlight.Enabled = false
                           if _G.GeneratorESPData.Billboards[generator] then
                               _G.GeneratorESPData.Billboards[generator].Enabled = false
                           end
                       else
                           highlight.Enabled = true
                           
                           -- Обновляем цвет в зависимости от прогресса
                           if progress == 0 then
                               highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Красный
                           elseif progress < 50 then
                               highlight.FillColor = Color3.fromRGB(255, 165, 0) -- Оранжевый
                           elseif progress < 100 then
                               highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Желтый
                           end
                           
                           -- Обновляем текст прогресса
                           if _G.GeneratorESPData.Billboards[generator] then
                               _G.GeneratorESPData.Billboards[generator].TextLabel.Text = math.floor(progress) .. "%"
                               _G.GeneratorESPData.Billboards[generator].Enabled = true
                           end
                       end
                       
                       highlight.Adornee = generator
                   else
                       highlight.Enabled = false
                       if _G.GeneratorESPData.Billboards[generator] then
                           _G.GeneratorESPData.Billboards[generator].Enabled = false
                       end
                   end
               end
           end

           local function createGeneratorESP(generator)
               if not isGenerator(generator) then return end
               
               -- Создаем подсветку
               local highlight = Instance.new("Highlight")
               highlight.Name = generator.Name .. "_GeneratorESP"
               highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Начальный цвет красный
               highlight.FillTransparency = 0.6
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
               highlight.OutlineTransparency = 0.2
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Parent = game.CoreGui
               
               -- Создаем BillboardGui для текста прогресса
               local billboard = Instance.new("BillboardGui")
               billboard.Name = generator.Name .. "_ProgressText"
               billboard.Adornee = generator:FindFirstChild("PrimaryPart") or generator:FindFirstChildWhichIsA("BasePart")
               billboard.Size = UDim2.new(0, 100, 0, 40)
               billboard.StudsOffset = Vector3.new(0, 3, 0)
               billboard.AlwaysOnTop = true
               billboard.MaxDistance = 100
               
               local textLabel = Instance.new("TextLabel")
               textLabel.Size = UDim2.new(1, 0, 1, 0)
               textLabel.BackgroundTransparency = 1
               textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
               textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
               textLabel.TextStrokeTransparency = 0
               textLabel.TextSize = 14
               textLabel.Font = Enum.Font.GothamBold
               textLabel.Text = "0%"
               textLabel.Parent = billboard
               
               billboard.Parent = game.CoreGui
               
               _G.GeneratorESPData.Highlights[generator] = highlight
               _G.GeneratorESPData.Billboards[generator] = billboard
           end

           local function scanForGenerators()
               local mapFolder = game.Workspace:FindFirstChild("Map")
               if mapFolder then
                   local ingameFolder = mapFolder:FindFirstChild("Ingame")
                   if ingameFolder then
                       local mapSubFolder = ingameFolder:FindFirstChild("Map")
                       if mapSubFolder then
                           for _, generator in pairs(mapSubFolder:GetDescendants()) do
                               if generator:IsA("Model") and generator.Name == "Generator" then
                                   createGeneratorESP(generator)
                               end
                           end
                       end
                   end
               end
           end

           local function handleDescendantAdded(descendant)
               if descendant:IsA("Model") and descendant.Name == "Generator" then
                   local parent = descendant.Parent
                   if parent and parent.Name == "Map" then
                       local grandParent = parent.Parent
                       if grandParent and grandParent.Name == "Ingame" then
                           local greatGrandParent = grandParent.Parent
                           if greatGrandParent and greatGrandParent.Name == "Map" and greatGrandParent.Parent == game.Workspace then
                               createGeneratorESP(descendant)
                           end
                       end
                   end
               end
           end

           local function handleDescendantRemoving(descendant)
               if _G.GeneratorESPData.Highlights[descendant] then
                   _G.GeneratorESPData.Highlights[descendant]:Destroy()
                   _G.GeneratorESPData.Highlights[descendant] = nil
               end
               if _G.GeneratorESPData.Billboards[descendant] then
                   _G.GeneratorESPData.Billboards[descendant]:Destroy()
                   _G.GeneratorESPData.Billboards[descendant] = nil
               end
           end

           -- Соединение для отслеживания изменения прогресса
           local function monitorProgressChanges()
               for generator, _ in pairs(_G.GeneratorESPData.Highlights) do
                   local progressValue = generator:FindFirstChild("Progress")
                   if progressValue and progressValue:IsA("NumberValue") then
                       if not _G.GeneratorESPData.Connections[generator] then
                           _G.GeneratorESPData.Connections[generator] = progressValue:GetPropertyChangedSignal("Value"):Connect(function()
                               updateGeneratorESP()
                           end)
                       end
                   end
               end
           end

           scanForGenerators()
           monitorProgressChanges()

           local descendantAddedConn = game.Workspace.DescendantAdded:Connect(function(descendant)
               handleDescendantAdded(descendant)
               task.wait(0.1) -- Ждем немного перед мониторингом прогресса
               monitorProgressChanges()
           end)

           local descendantRemovingConn = game.Workspace.DescendantRemoving:Connect(handleDescendantRemoving)

           _G.GeneratorESPData.MainConnections = {
               descendantAdded = descendantAddedConn,
               descendantRemoving = descendantRemovingConn
           }

           _G.GeneratorESPData.UpdateLoop = game:GetService("RunService").Heartbeat:Connect(function()
               updateGeneratorESP()
           end)

       else
           -- Отключаем ESP
           if _G.GeneratorESPData then
               if _G.GeneratorESPData.UpdateLoop then
                   _G.GeneratorESPData.UpdateLoop:Disconnect()
               end

               if _G.GeneratorESPData.MainConnections then
                   _G.GeneratorESPData.MainConnections.descendantAdded:Disconnect()
                   _G.GeneratorESPData.MainConnections.descendantRemoving:Disconnect()
               end

               -- Отключаем соединения прогресса
               for generator, connection in pairs(_G.GeneratorESPData.Connections) do
                   connection:Disconnect()
               end

               -- Удаляем подсветки и билборды
               for generator, highlight in pairs(_G.GeneratorESPData.Highlights) do
                   highlight:Destroy()
               end
               for generator, billboard in pairs(_G.GeneratorESPData.Billboards) do
                   billboard:Destroy()
               end

               _G.GeneratorESPData = nil
           end
       end
   end,
})
local Button = MainTab:CreateButton({
   Name = "Fulbright",
   Callback = function()
       local Lighting = game:GetService("Lighting")
       
       -- Сохраняем оригинальные настройки
       if not _G.OriginalLightingSettings then
           _G.OriginalLightingSettings = {
               Ambient = Lighting.Ambient,
               Brightness = Lighting.Brightness,
               ColorShift_Bottom = Lighting.ColorShift_Bottom,
               ColorShift_Top = Lighting.ColorShift_Top,
               EnvironmentDiffuseScale = Lighting.EnvironmentDiffuseScale,
               EnvironmentSpecularScale = Lighting.EnvironmentSpecularScale,
               GlobalShadows = Lighting.GlobalShadows,
               OutdoorAmbient = Lighting.OutdoorAmbient,
               ShadowSoftness = Lighting.ShadowSoftness
           }
       end
       
       -- Устанавливаем Fulbright настройки
       Lighting.Ambient = Color3.fromRGB(255, 255, 255)
       Lighting.Brightness = 2
       Lighting.ColorShift_Bottom = Color3.fromRGB(0, 0, 0)
       Lighting.ColorShift_Top = Color3.fromRGB(0, 0, 0)
       Lighting.EnvironmentDiffuseScale = 0
       Lighting.EnvironmentSpecularScale = 0
       Lighting.GlobalShadows = false
       Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
       Lighting.ShadowSoftness = 0
       
       -- Отключаем все источники света
       for _, light in pairs(Lighting:GetChildren()) do
           if light:IsA("Light") then
               light.Enabled = false
           end
       end
   end,
})
local Toggle = EspTab:CreateToggle({
   Name = "C00lkid's minions esp",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       if Value then
           if not _G.MinionESPData then
               _G.MinionESPData = {
                   Highlights = {},
                   Connections = {}
               }
           end

           local function isMinion(model)
               return model:IsA("Model") and model.Name == "PizzaDeliveryRig" and 
                      model.Parent and model.Parent.Name == "Ingame" and 
                      model.Parent.Parent and model.Parent.Parent.Name == "Map" and 
                      model.Parent.Parent.Parent == game.Workspace
           end

           local function updateMinionESP()
               for minion, highlight in pairs(_G.MinionESPData.Highlights) do
                   if minion and minion.Parent then
                       highlight.Adornee = minion
                       highlight.Enabled = true
                   else
                       highlight.Enabled = false
                   end
               end
           end

           local function createMinionESP(minion)
               if not isMinion(minion) then return end
               
               local highlight = Instance.new("Highlight")
               highlight.Name = minion.Name .. "_MinionESP"
               highlight.FillColor = Color3.fromRGB(0, 0, 255)
               highlight.FillTransparency = 0.6
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
               highlight.OutlineTransparency = 0.2
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Parent = game.CoreGui
               
               _G.MinionESPData.Highlights[minion] = highlight
           end

           local function scanForMinions()
               local mapFolder = game.Workspace:FindFirstChild("Map")
               if mapFolder then
                   local ingameFolder = mapFolder:FindFirstChild("Ingame")
                   if ingameFolder then
                       local minion = ingameFolder:FindFirstChild("PizzaDeliveryRig")
                       if minion then
                           createMinionESP(minion)
                       end
                   end
               end
           end

           scanForMinions()

           local function handleDescendantAdded(descendant)
               if descendant:IsA("Model") and descendant.Name == "PizzaDeliveryRig" then
                   local parent = descendant.Parent
                   if parent and parent.Name == "Ingame" then
                       local grandParent = parent.Parent
                       if grandParent and grandParent.Name == "Map" and grandParent.Parent == game.Workspace then
                           createMinionESP(descendant)
                       end
                   end
               end
           end

           local function handleDescendantRemoving(descendant)
               if _G.MinionESPData.Highlights[descendant] then
                   _G.MinionESPData.Highlights[descendant]:Destroy()
                   _G.MinionESPData.Highlights[descendant] = nil
               end
           end

           local descendantAddedConn = game.Workspace.DescendantAdded:Connect(handleDescendantAdded)
           local descendantRemovingConn = game.Workspace.DescendantRemoving:Connect(handleDescendantRemoving)

           _G.MinionESPData.MainConnections = {
               descendantAdded = descendantAddedConn,
               descendantRemoving = descendantRemovingConn
           }

           _G.MinionESPData.UpdateLoop = game:GetService("RunService").Heartbeat:Connect(function()
               updateMinionESP()
           end)

       else
           if _G.MinionESPData then
               if _G.MinionESPData.UpdateLoop then
                   _G.MinionESPData.UpdateLoop:Disconnect()
               end

               if _G.MinionESPData.MainConnections then
                   _G.MinionESPData.MainConnections.descendantAdded:Disconnect()
                   _G.MinionESPData.MainConnections.descendantRemoving:Disconnect()
               end

               for minion, highlight in pairs(_G.MinionESPData.Highlights) do
                   highlight:Destroy()
               end

               _G.MinionESPData = nil
           end
       end
   end,
})
local AutoGenerator = {
    Enabled = false,
    Cooldown = 2.5,
    Loop = nil
}

-- Объявляем функции ДО тоггла
local function ForceCompletePuzzle()
    local success, FlowGameManager = pcall(function()
        return require(game.ReplicatedStorage.Modules.Misc.FlowGameManager)
    end)
    
    if not success then
        return false
    end
    
    if FlowGameManager.activeGame and not FlowGameManager.activeGame.gameEnded then
        FlowGameManager.activeGame:EndGame(true)
        return true
    end
    
    return false
end

local function FindAndActivateGenerator()
    local IngameMapFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Ingame")
    local SubMapFolder = IngameMapFolder and IngameMapFolder:FindFirstChild("Map")
    
    if not SubMapFolder then return false end
    
    for _, generator in ipairs(SubMapFolder:GetChildren()) do
        if generator.Name == "Generator" then
            local progress = generator:FindFirstChild("Progress")
            if progress and progress:IsA("NumberValue") and progress.Value < 100 then
                local success = pcall(function()
                    generator.Remotes.RE:FireServer()
                end)
                
                if success then
                    print("✅ Generator activated, waiting for puzzle...")
                    
                    local maxWaitTime = 10
                    local startTime = tick()
                    
                    while tick() - startTime < maxWaitTime do
                        task.wait(0.1)
                        
                        if ForceCompletePuzzle() then
                            print("✅ Puzzle completed automatically!")
                            return true
                        end
                    end
                    
                    print("❌ Puzzle didn't appear in time")
                    return false
                end
            end
        end
    end
    
    return false
end

local function StartAutoGenerator()
    if AutoGenerator.Loop then
        AutoGenerator.Loop:Disconnect()
        AutoGenerator.Loop = nil
    end
    
    AutoGenerator.Loop = game:GetService("RunService").Heartbeat:Connect(function(deltaTime)
        if not AutoGenerator.Enabled then return end
        
        if not AutoGenerator.LastCheck then
            AutoGenerator.LastCheck = tick()
        end
        
        if tick() - AutoGenerator.LastCheck >= AutoGenerator.Cooldown then
            AutoGenerator.LastCheck = tick()
            
            local success = FindAndActivateGenerator()
            
            if not success then
                print("❌ No available generators found")
            end
        end
    end)
end

local function StopAutoGenerator()
    if AutoGenerator.Loop then
        AutoGenerator.Loop:Disconnect()
        AutoGenerator.Loop = nil
    end
    AutoGenerator.LastCheck = nil
    print("❌ Auto Generator disabled")
end

-- Теперь создаем UI элементы ПОСЛЕ объявления функций
local Slider = GeneratorTab:CreateSlider({
   Name = "Auto Generator time",
   Range = {2.5, 5},
   Increment = 0.1,
   Suffix = "sec",
   CurrentValue = 2.5,
   Flag = "AutoGenTime",
   Callback = function(Value)
       AutoGenerator.Cooldown = Value
   end,
})

local Toggle = GeneratorTab:CreateToggle({
   Name = "Auto Generator",
   CurrentValue = false,
   Flag = "AutoGenToggle",
   Callback = function(Value)
       AutoGenerator.Enabled = Value
       
       if Value then
           StartAutoGenerator()
       else
           StopAutoGenerator()
       end
   end,
})

local Button = GeneratorTab:CreateButton({
   Name = "Complete Current Puzzle",
   Callback = function()
       if ForceCompletePuzzle() then
           print("✅ Current puzzle completed!")
       else
           print("❌ No active puzzle found")
       end
   end,
})
local Aimbot = {
    Enabled = false,
    Connection = nil,
    Active = false,
    Cooldown = 3,
    Prediction = 0.5
}

local function FindPlasmaBeamButton()
    local localPlayer = game.Players.LocalPlayer
    if not localPlayer then return nil end
    
    local playerGui = localPlayer:FindFirstChild("PlayerGui")
    if not playerGui then return nil end
    
    local mainUI = playerGui:FindFirstChild("MainUI")
    if mainUI then
        local abilityContainer = mainUI:FindFirstChild("AbilityContainer")
        if abilityContainer then
            return abilityContainer:FindFirstChild("PlasmaBeam")
        end
    end
    
    return nil
end

local function GetNearestKiller()
    local killersFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers")
    if not killersFolder then return nil end
    
    local camera = workspace.CurrentCamera
    if not camera then return nil end
    
    local nearestKiller = nil
    local nearestDistance = math.huge
    
    for _, killer in ipairs(killersFolder:GetChildren()) do
        if killer:IsA("Model") then
            local killerHRP = killer:FindFirstChild("HumanoidRootPart")
            if killerHRP then
                local distance = (camera.CFrame.Position - killerHRP.Position).Magnitude
                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestKiller = killer
                end
            end
        end
    end
    
    return nearestKiller
end

local function AimAtKiller()
    local killer = GetNearestKiller()
    if not killer then return false end
    
    local camera = workspace.CurrentCamera
    if not camera then return false end
    
    local killerHRP = killer:FindFirstChild("HumanoidRootPart")
    if not killerHRP then return false end
    
    local currentCFrame = camera.CFrame
    
    -- Простое предсказание движения
    local predictedPosition = killerHRP.Position + killerHRP.Velocity * Aimbot.Prediction
    
    local targetCFrame = CFrame.lookAt(currentCFrame.Position, predictedPosition)
    camera.CFrame = targetCFrame
    
    return true
end

local function SetupPlasmaBeamAimbot()
    if not Aimbot.Enabled then return end
    
    local plasmaBeamButton = FindPlasmaBeamButton()
    if not plasmaBeamButton then
        task.delay(3, SetupPlasmaBeamAimbot)
        return
    end
    
    if plasmaBeamButton:IsA("TextButton") or plasmaBeamButton:IsA("ImageButton") then
        plasmaBeamButton.MouseButton1Click:Connect(function()
            if Aimbot.Enabled and not Aimbot.Active then
                Aimbot.Active = true
                
                if Aimbot.Connection then
                    Aimbot.Connection:Disconnect()
                end
                
                Aimbot.Connection = game:GetService("RunService").Heartbeat:Connect(function()
                    if not Aimbot.Active or not Aimbot.Enabled then return end
                    AimAtKiller()
                end)
                
                task.delay(Aimbot.Cooldown, function()
                    Aimbot.Active = false
                    if Aimbot.Connection then
                        Aimbot.Connection:Disconnect()
                        Aimbot.Connection = nil
                    end
                end)
            end
        end)
    end
end

local Toggle = AimbotTab:CreateToggle({
   Name = "PlasmaBeam Aimbot",
   CurrentValue = false,
   Flag = "PlasmaBeamAimbot",
   Callback = function(Value)
       Aimbot.Enabled = Value
       
       if Value then
           SetupPlasmaBeamAimbot()
       else
           if Aimbot.Connection then
               Aimbot.Connection:Disconnect()
               Aimbot.Connection = nil
           end
           Aimbot.Active = false
       end
   end,
})

local Slider = AimbotTab:CreateSlider({
   Name = "Prediction",
   Range = {0.0, 1.0},
   Increment = 0.1,
   Suffix = "sec",
   CurrentValue = 0.5,
   Flag = "AimbotPrediction",
   Callback = function(Value)
       Aimbot.Prediction = Value
   end,
})

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
    task.wait(3)
    if Aimbot.Enabled then
        SetupPlasmaBeamAimbot()
    end
end)

local ZombieESP = {
    Enabled = false,
    Highlights = {},
    Connections = {}
}

local Toggle = EspTab:CreateToggle({
   Name = "1x4 Zombies Esp",
   CurrentValue = false,
   Flag = "ZombieESP",
   Callback = function(Value)
       ZombieESP.Enabled = Value
       
       if Value then
           -- Включаем ESP
           local function CreateZombieESP(zombie)
               if not zombie:IsA("Model") then return end
               if ZombieESP.Highlights[zombie] then return end
               
               local highlight = Instance.new("Highlight")
               highlight.Name = "ZombieESP"
               highlight.FillColor = Color3.fromRGB(0, 100, 255) -- Синий цвет
               highlight.FillTransparency = 0.7
               highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- Белый контур
               highlight.OutlineTransparency = 0.2
               highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               highlight.Adornee = zombie
               highlight.Parent = game.CoreGui
               
               ZombieESP.Highlights[zombie] = highlight
               
               -- Отслеживаем удаление зомби
               local connection
               connection = zombie.AncestryChanged:Connect(function(_, parent)
                   if not parent then
                       if highlight then
                           highlight:Destroy()
                       end
                       ZombieESP.Highlights[zombie] = nil
                       connection:Disconnect()
                   end
               end)
           end
           
           -- Ищем существующих зомби
           local function ScanForZombies()
               local mapFolder = workspace:FindFirstChild("Map")
               if not mapFolder then return end
               
               local ingameFolder = mapFolder:FindFirstChild("Ingame")
               if not ingameFolder then return end
               
               local zombieFolder = ingameFolder:FindFirstChild("1x1x1x1Zombie")
               if not zombieFolder then return end
               
               for _, zombie in ipairs(zombieFolder:GetDescendants()) do
                   if zombie:IsA("Model") and zombie:FindFirstChild("Humanoid") then
                       CreateZombieESP(zombie)
                   end
               end
           end
           
           -- Отслеживаем новых зомби
           local function MonitorZombieFolder()
               local mapFolder = workspace:FindFirstChild("Map")
               if not mapFolder then return end
               
               local ingameFolder = mapFolder:FindFirstChild("Ingame")
               if not ingameFolder then return end
               
               local zombieFolder = ingameFolder:FindFirstChild("1x1x1x1Zombie")
               if not zombieFolder then return end
               
               ZombieESP.Connections.descendantAdded = zombieFolder.DescendantAdded:Connect(function(descendant)
                   if descendant:IsA("Model") and descendant:FindFirstChild("Humanoid") then
                       task.wait(0.1) -- Ждем полной загрузки модели
                       CreateZombieESP(descendant)
                   end
               end)
               
               ZombieESP.Connections.descendantRemoving = zombieFolder.DescendantRemoving:Connect(function(descendant)
                   if ZombieESP.Highlights[descendant] then
                       ZombieESP.Highlights[descendant]:Destroy()
                       ZombieESP.Highlights[descendant] = nil
                   end
               end)
           end
           
           -- Оптимизированное обновление
           ZombieESP.Connections.updateLoop = game:GetService("RunService").Stepped:Connect(function()
               if not ZombieESP.Enabled then return end
               
               for zombie, highlight in pairs(ZombieESP.Highlights) do
                   if zombie and zombie.Parent then
                       highlight.Enabled = true
                   else
                       highlight.Enabled = false
                   end
               end
           end)
           
           -- Запускаем сканирование
           ScanForZombies()
           MonitorZombieFolder()
           
       else
           -- Выключаем ESP
           for _, connection in pairs(ZombieESP.Connections) do
               connection:Disconnect()
           end
           ZombieESP.Connections = {}
           
           for _, highlight in pairs(ZombieESP.Highlights) do
               highlight:Destroy()
           end
           ZombieESP.Highlights = {}
       end
   end,
})


if not KavoUI then
    local KavoSuccess, KavoError = pcall(function()
        KavoUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    end)
    if not KavoSuccess then return end
end

local Window = KavoUI.CreateLib("Forsaken Cheat","DarkTheme")

local Settings = {
    Stamina = {Enabled = false, Value = 100},
    Speed = {Enabled = false, Value = 16},
    ESP = {Players = false, Killers = true, Generators = true, Items = false},
    AutoRepair = {Enabled = false, Speed = 5, Instant = false}
}

local function ManageStamina()
    while Settings.Stamina.Enabled do
        task.wait(0.5)
        local char = game.Players.LocalPlayer.Character
        if char and char:FindFirstChild("Stamina") then
            char.Stamina.Value = Settings.Stamina.Value
        end
    end
end

local function UpdateSpeed()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Settings.Speed.Enabled and Settings.Speed.Value or 16
end

local MainTab = Window:NewTab("Main")
local MainSection = MainTab:NewSection("Character")

MainSection:NewToggle("Infinite Stamina", "", function(state)
    Settings.Stamina.Enabled = state
    ManageStamina()
end)

MainSection:NewSlider("Speed", "", 50, 16, function(value)
    Settings.Speed.Value = value
    UpdateSpeed()
end)

MainSection:NewToggle("Enable Speed", "", function(state)
    Settings.Speed.Enabled = state
    UpdateSpeed()
end)

local ESPTab = Window:NewTab("ESP")
local ESPSection = ESPTab:NewSection("Settings")

ESPSection:NewToggle("Players", "", function(state)
    Settings.ESP.Players = state
end)

ESPSection:NewToggle("Killers", "", function(state)
    Settings.ESP.Killers = state
end)

local AutoTab = Window:NewTab("Automation")
local AutoSection = AutoTab:NewSection("Generators")

AutoSection:NewToggle("Auto-Repair", "", function(state)
    Settings.AutoRepair.Enabled = state
end)

AutoSection:NewSlider("Repair Speed", "", 20, 3, function(value)
    Settings.AutoRepair.Speed = value
end)

AutoSection:NewToggle("Instant Repair", "", function(state)
    Settings.AutoRepair.Instant = state
end)

game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "Loader",
    Text = "Ready",
    Duration = 3
})



if game.PlaceId == 18687417158 then

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "forsaken hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "forsaken hub!",
   LoadingSubtitle = "by lody aka bombacla_tt09",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "forsakennotthebest"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Forsaken", nil) -- Title, Image
local MainSection = Tab:CreateSection("Main forsaken")

Rayfield:Notify({
   Title = "hm? Oh nice it's not a good one but enjoy! ",
   Content = "not the best cuz I'm new! ",
   Duration = 2,
   Image = 4483362458,
})

local Button = MainTab:CreateButton({
   Name = "nol hub really good",
   Callback = function()
   getfenv().ADittoKey="NOL_FRERKEY"---Put in key
loadstring(game:HttpGet("https://raw.githubusercontent.com/Syndromehsh/NOL/refs/heads/main/Nolsaken"))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "back stab for two time",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/skibidi399/Auto-backstab-two-time/refs/heads/main/Auto%20backstab%20v2"))()
   end,
})

local Button = Tab:CreateButton({
   Name = "auto block",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/skibidi399/Auto-block-script/refs/heads/main/FINAL%20AUTO%20BLOCK"))()
   end,
})


local sur = workspace.Players.Survivors
local kil = workspace.Players.Killers
local spe = workspace.Players.Spectating
local ing = workspace.Map.Ingame

print("WORKING!")

local function survivoresp(char)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) -- Adjust size
billboard.StudsOffset = Vector3.new(0, 1.25, 0) -- Position above head
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "HP: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth -- Your displayed text
textLabel.TextColor3 = Color3.fromRGB(255, 100, 28)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(4, 0, 1, 0) -- Adjust size
charnamebill.StudsOffset = Vector3.new(0, 2, 0) -- Position above head
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(255, 100, 28)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(255, 100, 28)
highlight.FillColor= Color3.fromRGB(255, 100, 28)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "HP: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function killeresp(char)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) -- Adjust size
billboard.StudsOffset = Vector3.new(0, 1.25, 0) -- Position above head
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "HP: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth -- Your displayed text
textLabel.TextColor3 = Color3.fromRGB(204, 0, 0)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(4, 0, 1, 0) -- Adjust size
charnamebill.StudsOffset = Vector3.new(0, 2, 0) -- Position above head
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(204, 0, 0)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(204, 0, 0)
highlight.FillColor= Color3.fromRGB(204, 0, 0)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "HP: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function specesp(char) --useless
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) -- Adjust size
billboard.StudsOffset = Vector3.new(0, 1.25, 0) -- Position above head
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "HP: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth -- Your displayed text
textLabel.TextColor3 = Color3.fromRGB(117, 117, 117)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(4, 0, 1, 0) -- Adjust size
charnamebill.StudsOffset = Vector3.new(0, 2, 0) -- Position above head
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(117, 117, 117)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(117, 117, 117)
highlight.FillColor= Color3.fromRGB(117, 117, 117)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "HP: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function genesp(p)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) -- Adjust size
billboard.StudsOffset = Vector3.new(0, 1.25, 0) -- Position above head
billboard.Adornee = p.Main
billboard.Parent = p.Main
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = ""
textLabel.TextColor3 = Color3.fromRGB(255, 206, 28)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local gennamebill = Instance.new("BillboardGui")
gennamebill.Size = UDim2.new(4, 0, 1, 0) -- Adjust size
gennamebill.StudsOffset = Vector3.new(0, 2, 0) -- Position above head
gennamebill.Adornee = p.Main
gennamebill.Parent = p.Main
gennamebill.AlwaysOnTop = true
local gennametext = Instance.new("TextLabel")
gennametext.Size = UDim2.new(1, 0, 1, 0)
gennametext.Position = UDim2.new(0, 1, 0, 1)
gennametext.BackgroundTransparency = 1
gennametext.TextScaled = true
gennametext.Text = p.Name
gennametext.TextColor3 = Color3.fromRGB(255, 206, 28)
gennametext.Font = Enum.Font.Arcade
gennametext.Parent = gennamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(255, 206, 28)
highlight.FillColor= Color3.fromRGB(255, 206, 28)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = p


local temp = game:GetService("RunService").Heartbeat:Connect(function()
if p:FindFirstChild("Progress").Value >= 99 then
	gennametext.Text = ""
	highlight:Destroy()
	textLabel.Text = ""
	else
	gennametext.Text = "Generator"
	textLabel.Text = "Progress: "..p.Progress.Value.."%"
end
end)

if p:FindFirstChild("Progress").Value >= 99 then
	temp:Disconnect()
end

p.Destroying:Connect(function()
		temp:Disconnect()
end)

return textLabel

end

local function itemesp(p)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) -- Adjust size
billboard.StudsOffset = Vector3.new(0, 1.25, 0) -- Position above head
billboard.Adornee = p:FindFirstChild("ItemRoot")
billboard.Parent = p:FindFirstChild("ItemRoot")
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = p.Name
textLabel.TextColor3 = Color3.fromRGB(32, 54, 153)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(32, 54, 153)
highlight.FillColor= Color3.fromRGB(32, 54, 153)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = p


return textLabel

end

sur.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		survivoresp(v)
	end
end)

for _,v in pairs(sur:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		survivoresp(v)
	end
end

kil.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid")  then
	repeat wait() until v:FindFirstChild("Humanoid")
		killeresp(v)
	end
end)

for _,v in pairs(kil:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		killeresp(v)
	end
end

spe.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		specesp(v)
	end
end)

for _,v in pairs(spe:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		specesp(v)
	end
end

ing.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Main")  and v.Name == "Generator" then
		repeat wait() until v.Name == "Generator"
		genesp(v)
	end
end)

for _,v in pairs(ing:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Main") and v.Name == "Generator" then
	repeat wait() until v.Name == "Generator"
		genesp(v)
	end
end

ing.DescendantAdded:Connect(function(v)
	if v:IsA("Tool") then
	repeat wait() until v:IsA("Tool")
		itemesp(v)
	end
end)

for _,v in pairs(ing:GetDescendants()) do
	if v:IsA("Tool") then
	repeat wait() until v:IsA("Tool")
		itemesp(v)
	end
end


-- SCRIPTED BY FORLEAKEN
-- MADE TO BE USED IN FORSAKEN!!!
-- PLEASE CREDIT ME IF YOU USE THIS

local player : Player = game.Players.LocalPlayer
local assets = game:GetObjects("rbxassetid://116416156015735")[1]
local scaryGUI : ScreenGui = assets.EvilScaryJumpscare
scaryGUI.DisplayOrder = 99999999
local fakeDamage = 0
local currentScary
local scaryDistance = 17.5
function jumpscare(scary : Part)
	local jumpscareGUI = scaryGUI:Clone()
	jumpscareGUI.Parent = player.PlayerGui
	pcall(function()
		jumpscareGUI.Parent = game.CoreGui
	end)
	task.delay(3, function()
		if jumpscareGUI.Parent then
			jumpscareGUI:Destroy()
		end
	end)
	scary.Scream:Play()
end
function moveScary(scary : Part, part : Part)
	if player.Character and player.Character.PrimaryPart and (player.Character.PrimaryPart.Position - scary.Position).Magnitude < scaryDistance then
		scary.CFrame = CFrame.new(player.Character.PrimaryPart.Position)
	else
		scary.CFrame = CFrame.new(scary.Position + (scaryDistance*(part.Position-scary.Position).Unit), part.Position)
	end
	scary:FindFirstChild("Move"):Play()
	if scary:GetAttribute("db") == false and player.Character and player.Character.PrimaryPart and player.Character:FindFirstChildOfClass("Humanoid") and (player.Character.PrimaryPart.Position-scary.Position).Magnitude < 10 then
		scary:SetAttribute("db", true)
		task.delay(5, function()
			scary:SetAttribute("db", false)
		end)
		local hum = player.Character:FindFirstChildOfClass("Humanoid")
		fakeDamage += 100
		hum:SetAttribute("FakeDamage", 100+(hum:GetAttribute("FakeDamage") or 0))
		if hum.Health-fakeDamage <= 0 then
			hum.Health = 0
		end
		jumpscare(scary)
	end
end
player.CharacterAdded:Connect(function(char)
	if currentScary then
		currentScary:Destroy()
		currentScary = nil
	end
	fakeDamage = 0
	task.wait(5)
	if char.Parent.Name == "Spectating" or not workspace.Map.Ingame:FindFirstChild("Map") then
		warn("NOSCARY", char.Parent.Name, workspace.Map.Ingame:FindFirstChild("Map"))
		return
	end
	local hum = player.Character:FindFirstChildOfClass("Humanoid")
	hum.AttributeChanged:Connect(function(attribute)
		if attribute == "FakeDamage" and hum:GetAttribute("FakeDamage") == nil then
			hum:SetAttribute("FakeDamage", fakeDamage)
		end
	end)
	hum.HealthChanged:Connect(function(health)
		if health-fakeDamage <= 0 then
			hum.Health = 0
		end
	end)
	local msg = Instance.new("Message", workspace)
	msg.Text = "EVIL SCARY IS HERE"
	game:GetService("Debris"):AddItem(msg, 3)
	local spawns : Folder = char.Parent.Name == "Survivors" and workspace.Map.Ingame.Map.SpawnPoints.Killers or workspace.Map.Ingame.Map.SpawnPoints.Survivors
	local selectedspawn : Part = spawns:GetChildren()[math.random(1, #spawns:GetChildren())]
	currentScary = assets.EvilScary:Clone()
	local ourScary = currentScary
	ourScary.Parent = workspace
	ourScary.CFrame = selectedspawn.CFrame
	
	task.spawn(function()
		while task.wait() and char.Parent do
			ourScary.Hand.Mesh.Offset = Vector3.new(0, 0, 1)
			ourScary.Hand2.Mesh.Offset = Vector3.new(0, 0, 1)
			task.wait(0.1)
			ourScary.Hand.Mesh.Offset = Vector3.new(0, 0, 0)
			ourScary.Hand2.Mesh.Offset = Vector3.new(0, 0, 0)
			task.wait(0.1)
		end
	end)
	while task.wait() and char.Parent do
		for i = 1, 10 do
			moveScary(ourScary, char.PrimaryPart)
			task.wait(2)
		end
		ourScary.Lunge:Play()
		task.wait(2)
		for i = 1, 5 do
			moveScary(ourScary, char.PrimaryPart)
			task.wait(0.5)
		end
	end
end)


-- Forsaken Auto-Repair Script
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local enabled = false
local delay = 3

local function repair()
    while enabled do task.wait()
        for _,v in pairs(workspace:GetDescendants()) do
            if not enabled then break end
            if v:FindFirstChild("RepairProgress") and v.RepairProgress.Value < 1 then
                root.CFrame = v.CFrame * CFrame.new(0,2,0)
                for i=1,3 do
                    game:GetService("ReplicatedStorage").Events.RepairGenerator:FireServer(v)
                    task.wait(0.3)
                end
                task.wait(delay)
            end
        end
    end
end

-- Simple GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
local btn = Instance.new("TextButton")
btn.Size = UDim2.new(0,200,0,40)
btn.Position = UDim2.new(0.5,-100,0,10)
btn.Text = "Auto-Rep




-- Criando ScreenGui
local player = game.Players.LocalPlayer
local ForsakenGuiS = Instance.new("ScreenGui")
ForsakenGuiS.Name = "ForsakenGuiS"
ForsakenGuiS.Parent = player:WaitForChild("PlayerGui")
ForsakenGuiS.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ForsakenGuiS.ResetOnSpawn = false

local ForsakenGuiS = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Background = Instance.new("ImageLabel")
local EspButton = Instance.new("TextButton")
local PlayerName = Instance.new("TextBox")
local SaveCord = Instance.new("TextButton")
local TPButton = Instance.new("TextButton")
local TPLButton = Instance.new("TextButton")
local TPprButton = Instance.new("TextButton")
local TpCord = Instance.new("TextButton")
local NoNm = Instance.new("TextLabel")
local V = Instance.new("TextLabel")
local WalkTp = Instance.new("TextButton")
local SpeedWalk = Instance.new("TextBox")
local Extra = Instance.new("TextButton")
local ExtraFrame = Instance.new("Frame")
local DexExplorer = Instance.new("TextButton")
local InfiniteYield = Instance.new("TextButton")
local Cred = Instance.new("Frame")
local Ide = Instance.new("TextLabel")
local Scri = Instance.new("TextLabel")
local Ui = Instance.new("TextLabel")
local Discord = Instance.new("TextLabel")
local Discord2 = Instance.new("TextLabel")
local Open = Instance.new("TextButton")
local Opencred = Instance.new("TextButton")

--Properties:

ForsakenGuiS.Name = "ForsakenGuiS"
ForsakenGuiS.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ForsakenGuiS.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ForsakenGuiS
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.0817307681, 0, 0.205240175, 0)
Frame.Size = UDim2.new(0, 449, 0, 421)

Background.Name = "Background"
Background.Parent = Frame
Background.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Background.BackgroundTransparency = 1.000
Background.BorderColor3 = Color3.fromRGB(0, 0, 0)
Background.BorderSizePixel = 0
Background.Position = UDim2.new(-0.00222717156, 0, -0.0519049652, 0)
Background.Size = UDim2.new(0, 449, 0, 447)
Background.Image = "rbxassetid://100757417711857"

EspButton.Name = "EspButton"
EspButton.Parent = Frame
EspButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EspButton.BackgroundTransparency = 1.000
EspButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
EspButton.BorderSizePixel = 0
EspButton.Position = UDim2.new(0.0314818397, 0, 0.0285035633, 0)
EspButton.Size = UDim2.new(0, 110, 0, 27)
EspButton.Font = Enum.Font.SourceSans
EspButton.Text = "Esp"
EspButton.TextColor3 = Color3.fromRGB(255, 0, 0)
EspButton.TextScaled = true
EspButton.TextSize = 14.000
EspButton.TextWrapped = true

PlayerName.Name = "PlayerName"
PlayerName.Parent = Frame
PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.BackgroundTransparency = 1.000
PlayerName.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerName.BorderSizePixel = 0
PlayerName.Position = UDim2.new(0.294288069, 0, 0.106888361, 0)
PlayerName.Size = UDim2.new(0, 120, 0, 27)
PlayerName.Font = Enum.Font.SourceSans
PlayerName.Text = "Nome Do Jogador"
PlayerName.TextColor3 = Color3.fromRGB(255, 0, 0)
PlayerName.TextSize = 14.000

SaveCord.Name = "SaveCord"
SaveCord.Parent = Frame
SaveCord.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SaveCord.BackgroundTransparency = 1.000
SaveCord.BorderColor3 = Color3.fromRGB(0, 0, 0)
SaveCord.BorderSizePixel = 0
SaveCord.Position = UDim2.new(0.0314818397, 0, 0.204275534, 0)
SaveCord.Size = UDim2.new(0, 110, 0, 27)
SaveCord.Font = Enum.Font.SourceSans
SaveCord.Text = "Salvar Cordenadas"
SaveCord.TextColor3 = Color3.fromRGB(255, 0, 0)
SaveCord.TextScaled = true
SaveCord.TextSize = 14.000
SaveCord.TextWrapped = true

TPButton.Name = "TPButton"
TPButton.Parent = Frame
TPButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TPButton.BackgroundTransparency = 1.000
TPButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TPButton.BorderSizePixel = 0
TPButton.Position = UDim2.new(0.30987829, 0, 0.204275534, 0)
TPButton.Size = UDim2.new(0, 110, 0, 27)
TPButton.Font = Enum.Font.SourceSans
TPButton.Text = "Tp para jogador"
TPButton.TextColor3 = Color3.fromRGB(255, 0, 0)
TPButton.TextScaled = true
TPButton.TextSize = 14.000
TPButton.TextWrapped = true

TPLButton.Name = "TPLButton"
TPLButton.Parent = Frame
TPLButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TPLButton.BackgroundTransparency = 1.000
TPLButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TPLButton.BorderSizePixel = 0
TPLButton.Position = UDim2.new(0.0492992103, 0, 0.118764848, 0)
TPLButton.Size = UDim2.new(0, 110, 0, 27)
TPLButton.Font = Enum.Font.SourceSans
TPLButton.Text = "Tp Lugar Alto"
TPLButton.TextColor3 = Color3.fromRGB(255, 0, 0)
TPLButton.TextScaled = true
TPLButton.TextSize = 14.000
TPLButton.TextWrapped = true

TPprButton.Name = "TPprButton"
TPprButton.Parent = Frame
TPprButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TPprButton.BackgroundTransparency = 1.000
TPprButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TPprButton.BorderSizePixel = 0
TPprButton.Position = UDim2.new(0.292060912, 0, 0.0285035633, 0)
TPprButton.Size = UDim2.new(0, 110, 0, 27)
TPprButton.Font = Enum.Font.SourceSans
TPprButton.Text = "Tp Jogador Mais Proximo"
TPprButton.TextColor3 = Color3.fromRGB(255, 0, 0)
TPprButton.TextScaled = true
TPprButton.TextSize = 14.000
TPprButton.TextWrapped = true

TpCord.Name = "TpCord"
TpCord.Parent = Frame
TpCord.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TpCord.BackgroundTransparency = 1.000
TpCord.BorderColor3 = Color3.fromRGB(0, 0, 0)
TpCord.BorderSizePixel = 0
TpCord.Position = UDim2.new(0.0314818397, 0, 0.294536829, 0)
TpCord.Size = UDim2.new(0, 110, 0, 27)
TpCord.Font = Enum.Font.SourceSans
TpCord.Text = "Teleportar Pra Cordenada"
TpCord.TextColor3 = Color3.fromRGB(255, 0, 0)
TpCord.TextScaled = true
TpCord.TextSize = 14.000
TpCord.TextWrapped = true

NoNm.Name = "NoNm"
NoNm.Parent = Frame
NoNm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NoNm.BackgroundTransparency = 1.000
NoNm.BorderColor3 = Color3.fromRGB(0, 0, 0)
NoNm.BorderSizePixel = 0
NoNm.Position = UDim2.new(0.27624619, 0, -0.112284467, 0)
NoNm.Size = UDim2.new(0, 175, 0, 32)
NoNm.Font = Enum.Font.Unknown
NoNm.Text = "Script Forsaken"
NoNm.TextColor3 = Color3.fromRGB(0, 0, 0)
NoNm.TextScaled = true
NoNm.TextSize = 14.000
NoNm.TextWrapped = true

V.Name = "V"
V.Parent = Frame
V.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
V.BackgroundTransparency = 1.000
V.BorderColor3 = Color3.fromRGB(0, 0, 0)
V.BorderSizePixel = 0
V.Position = UDim2.new(0.0311804004, 0, 0.938242257, 0)
V.Size = UDim2.new(0, 217, 0, 19)
V.Font = Enum.Font.Unknown
V.Text = " V1 Alpha (Early Access)"
V.TextColor3 = Color3.fromRGB(255, 255, 255)
V.TextScaled = true
V.TextSize = 14.000
V.TextWrapped = true

WalkTp.Name = "WalkTp"
WalkTp.Parent = Frame
WalkTp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WalkTp.BackgroundTransparency = 1.000
WalkTp.BorderColor3 = Color3.fromRGB(0, 0, 0)
WalkTp.BorderSizePixel = 0
WalkTp.Position = UDim2.new(0.30987829, 0, 0.294536829, 0)
WalkTp.Size = UDim2.new(0, 110, 0, 27)
WalkTp.Font = Enum.Font.SourceSans
WalkTp.Text = "Andar Com Tp"
WalkTp.TextColor3 = Color3.fromRGB(255, 0, 0)
WalkTp.TextScaled = true
WalkTp.TextSize = 14.000
WalkTp.TextWrapped = true

SpeedWalk.Name = "SpeedWalk"
SpeedWalk.Parent = Frame
SpeedWalk.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SpeedWalk.BackgroundTransparency = 1.000
SpeedWalk.BorderColor3 = Color3.fromRGB(0, 0, 0)
SpeedWalk.BorderSizePixel = 0
SpeedWalk.Position = UDim2.new(0.294288069, 0, 0.358669847, 0)
SpeedWalk.Size = UDim2.new(0, 120, 0, 24)
SpeedWalk.Font = Enum.Font.SourceSans
SpeedWalk.Text = "Velocidade"
SpeedWalk.TextColor3 = Color3.fromRGB(255, 0, 0)
SpeedWalk.TextSize = 14.000

Extra.Name = "Extra"
Extra.Parent = Frame
Extra.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Extra.BackgroundTransparency = 1.000
Extra.BorderColor3 = Color3.fromRGB(0, 0, 0)
Extra.BorderSizePixel = 0
Extra.Position = UDim2.new(0.65063554, 0, 0.919239879, 0)
Extra.Size = UDim2.new(0, 110, 0, 27)
Extra.Font = Enum.Font.SourceSans
Extra.Text = "Teleportar Pra Cordenada"
Extra.TextColor3 = Color3.fromRGB(255, 0, 0)
Extra.TextScaled = true
Extra.TextSize = 14.000
Extra.TextWrapped = true

ExtraFrame.Name = "ExtraFrame"
ExtraFrame.Parent = Frame
ExtraFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ExtraFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ExtraFrame.BorderSizePixel = 0
ExtraFrame.Position = UDim2.new(0.997772813, 0, -0.0522565693, 0)
ExtraFrame.Size = UDim2.new(0, 100, 0, 447)

DexExplorer.Name = "DexExplorer"
DexExplorer.Parent = ExtraFrame
DexExplorer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DexExplorer.BackgroundTransparency = 1.000
DexExplorer.BorderColor3 = Color3.fromRGB(0, 0, 0)
DexExplorer.BorderSizePixel = 0
DexExplorer.Position = UDim2.new(0.0799999982, 0, 0.0492170006, 0)
DexExplorer.Size = UDim2.new(0, 82, 0, 50)
DexExplorer.Font = Enum.Font.Unknown
DexExplorer.Text = "Dex"
DexExplorer.TextColor3 = Color3.fromRGB(255, 255, 255)
DexExplorer.TextScaled = true
DexExplorer.TextSize = 14.000
DexExplorer.TextWrapped = true

InfiniteYield.Name = "InfiniteYield"
InfiniteYield.Parent = ExtraFrame
InfiniteYield.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InfiniteYield.BackgroundTransparency = 1.000
InfiniteYield.BorderColor3 = Color3.fromRGB(0, 0, 0)
InfiniteYield.BorderSizePixel = 0
InfiniteYield.Position = UDim2.new(0.0799999982, 0, 0.190156594, 0)
InfiniteYield.Size = UDim2.new(0, 82, 0, 50)
InfiniteYield.Font = Enum.Font.Unknown
InfiniteYield.Text = "Infinite Yield"
InfiniteYield.TextColor3 = Color3.fromRGB(255, 255, 255)
InfiniteYield.TextScaled = true
InfiniteYield.TextSize = 14.000
InfiniteYield.TextWrapped = true

Cred.Name = "Cred"
Cred.Parent = ForsakenGuiS
Cred.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Cred.BackgroundTransparency = 0.400
Cred.BorderColor3 = Color3.fromRGB(0, 0, 0)
Cred.BorderSizePixel = 0
Cred.Position = UDim2.new(0.629006386, 0, 0.222707421, 0)
Cred.Size = UDim2.new(0, 449, 0, 421)
Cred.Visible = false

Ide.Name = "Ide"
Ide.Parent = Cred
Ide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Ide.BackgroundTransparency = 1.000
Ide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Ide.Size = UDim2.new(0, 232, 0, 50)
Ide.Font = Enum.Font.SourceSans
Ide.Text = "Ideia : Tubers83hacker"
Ide.TextColor3 = Color3.fromRGB(182, 182, 182)
Ide.TextScaled = true
Ide.TextSize = 14.000
Ide.TextWrapped = true

Scri.Name = "Scri"
Scri.Parent = Cred
Scri.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Scri.BackgroundTransparency = 1.000
Scri.BorderColor3 = Color3.fromRGB(0, 0, 0)
Scri.Position = UDim2.new(0, 0, 0.118764848, 0)
Scri.Size = UDim2.new(0, 232, 0, 50)
Scri.Font = Enum.Font.SourceSans
Scri.Text = "Scripter : Chat Gpt Esp Tps Cordenadas"
Scri.TextColor3 = Color3.fromRGB(182, 182, 182)
Scri.TextScaled = true
Scri.TextSize = 14.000
Scri.TextWrapped = true

Ui.Name = "Ui"
Ui.Parent = Cred
Ui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Ui.BackgroundTransparency = 1.000
Ui.BorderColor3 = Color3.fromRGB(0, 0, 0)
Ui.Position = UDim2.new(0, 0, 0.266033262, 0)
Ui.Size = UDim2.new(0, 232, 0, 48)
Ui.Font = Enum.Font.SourceSans
Ui.Text = "Ui : ???"
Ui.TextColor3 = Color3.fromRGB(182, 182, 182)
Ui.TextScaled = true
Ui.TextSize = 14.000
Ui.TextWrapped = true

Discord.Name = "Discord"
Discord.Parent = Cred
Discord.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Discord.BackgroundTransparency = 1.000
Discord.BorderColor3 = Color3.fromRGB(0, 0, 0)
Discord.Position = UDim2.new(0, 0, 0.926365793, 0)
Discord.Size = UDim2.new(0, 176, 0, 31)
Discord.Font = Enum.Font.SourceSans
Discord.Text = "Discord  Tubers : flowers_1_0  "
Discord.TextColor3 = Color3.fromRGB(182, 182, 182)
Discord.TextScaled = true
Discord.TextSize = 14.000
Discord.TextWrapped = true

Discord2.Name = "Discord2"
Discord2.Parent = Cred
Discord2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Discord2.BackgroundTransparency = 1.000
Discord2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Discord2.Position = UDim2.new(0.420935422, 0, 0.926365793, 0)
Discord2.Size = UDim2.new(0, 176, 0, 31)
Discord2.Font = Enum.Font.SourceSans
Discord2.Text = "Discord  ?? : vl4dky"
Discord2.TextColor3 = Color3.fromRGB(182, 182, 182)
Discord2.TextScaled = true
Discord2.TextSize = 14.000
Discord2.TextWrapped = true

Open.Name = "Open"
Open.Parent = ForsakenGuiS
Open.BackgroundColor3 = Color3.fromRGB(186, 4, 4)
Open.BorderColor3 = Color3.fromRGB(0, 0, 0)
Open.BorderSizePixel = 0
Open.Position = UDim2.new(0.169070512, 0, 0.921397388, 0)
Open.Size = UDim2.new(0, 133, 0, 36)
Open.Font = Enum.Font.Unknown
Open.Text = "#$!??$!&%"
Open.TextColor3 = Color3.fromRGB(0, 0, 0)
Open.TextScaled = true
Open.TextSize = 14.000
Open.TextWrapped = true

Opencred.Name = "Opencred"
Opencred.Parent = ForsakenGuiS
Opencred.BackgroundColor3 = Color3.fromRGB(186, 4, 4)
Opencred.BorderColor3 = Color3.fromRGB(0, 0, 0)
Opencred.BorderSizePixel = 0
Opencred.Position = UDim2.new(0.743589699, 0, 0.921397388, 0)
Opencred.Size = UDim2.new(0, 133, 0, 36)
Opencred.Font = Enum.Font.Unknown
Opencred.Text = "Creditos"
Opencred.TextColor3 = Color3.fromRGB(0, 0, 0)
Opencred.TextScaled = true
Opencred.TextSize = 14.000
Opencred.TextWrapped = true

-- Scripts:

local function MYRCHIR_fake_script() -- EspButton.EspScript 
	local script = Instance.new('LocalScript', EspButton)

	-- LocalScript dentro de ForsakenGuiS.Frame.EspButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	
	-- Quando o botão for clicado, ativa o ESP
	button.MouseButton1Click:Connect(function()
		print("[ESP] Ativando...")
	
		-- Evita ativar duas vezes
		if _G.ESPAtivo then
			warn("[ESP] Já está ativo!")
			return
		end
		_G.ESPAtivo = true
	
		-- ====== INÍCIO DO SCRIPT DE ESP ======
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local localPlayer = Players.LocalPlayer
	
		-- Configurações
		local NAME_TEXT_SIZE = 14
		local BILLBOARD_OFFSET = Vector3.new(0, 2.5, 0)
		local OUTLINE_COLOR = Color3.fromRGB(0, 255, 0)
	
		local function createBillboard(character, player)
			local head = character:FindFirstChild("Head") or character:FindFirstChild("HumanoidRootPart")
			if not head then return end
	
			local billboard = Instance.new("BillboardGui")
			billboard.Adornee = head
			billboard.AlwaysOnTop = true
			billboard.Size = UDim2.new(0, 120, 0, 30)
			billboard.StudsOffset = BILLBOARD_OFFSET
			billboard.Parent = game.CoreGui
	
			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, 0, 1, 0)
			label.BackgroundTransparency = 1
			label.Font = Enum.Font.SourceSansBold
			label.TextSize = NAME_TEXT_SIZE
			label.TextStrokeTransparency = 0.4
			label.TextColor3 = Color3.new(1,1,1)
			label.Text = player.Name
			label.Parent = billboard
	
			return billboard, label
		end
	
		local function createHighlight(character)
			local highlight = Instance.new("Highlight")
			highlight.Adornee = character
			highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
			highlight.FillTransparency = 0.8
			highlight.OutlineTransparency = 0.2
			highlight.OutlineColor = OUTLINE_COLOR
			highlight.Parent = character
			return highlight
		end
	
		local function setupESP(player)
			if player == localPlayer then return end
	
			local function onCharacter(character)
				if not character then return end
	
				local highlight = createHighlight(character)
				local billboard, label = createBillboard(character, player)
	
				RunService.Heartbeat:Connect(function()
					if not character.Parent then
						if highlight then highlight:Destroy() end
						if billboard then billboard:Destroy() end
						return
					end
	
					local root = character:FindFirstChild("HumanoidRootPart")
					local myRoot = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
					if root and myRoot and label then
						local dist = (root.Position - myRoot.Position).Magnitude
						label.Text = string.format("%s (%.0fm)", player.Name, dist)
					end
				end)
			end
	
			if player.Character then
				onCharacter(player.Character)
			end
			player.CharacterAdded:Connect(onCharacter)
		end
	
		for _, plr in ipairs(Players:GetPlayers()) do
			setupESP(plr)
		end
	
		Players.PlayerAdded:Connect(setupESP)
	
		print("[ESP] Ativo para todos os outros jogadores")
		-- ====== FIM DO SCRIPT DE ESP ======
	end)
	
end
coroutine.wrap(MYRCHIR_fake_script)()
local function GJIBZ_fake_script() -- SaveCord.Save 
	local script = Instance.new('LocalScript', SaveCord)

	-- LocalScript dentro de ForsakenGuiS.Frame.SaveCord
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	
	-- Variável global (compartilhada entre scripts)
	_G.SavedCFrame = nil
	
	button.MouseButton1Click:Connect(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local root = character:FindFirstChild("HumanoidRootPart")
		if not root then return end
	
		-- Destroi a coordenada anterior (substitui)
		if _G.SavedCFrame then
			print("[SaveCord] Substituindo coordenada anterior.")
		end
	
		_G.SavedCFrame = root.CFrame
		print(string.format("[SaveCord] Coordenada salva em: X=%.2f, Y=%.2f, Z=%.2f", root.Position.X, root.Position.Y, root.Position.Z))
	end)
	
end
coroutine.wrap(GJIBZ_fake_script)()
local function FHDCSZD_fake_script() -- TPButton.TpP 
	local script = Instance.new('LocalScript', TPButton)

	-- LocalScript dentro de ForsakenGuiS.Frame.TPButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	local Players = game:GetService("Players")
	
	-- A TextBox com o nome do jogador
	local playerNameBox = button.Parent:WaitForChild("PlayerName")
	
	button.MouseButton1Click:Connect(function()
		local targetName = playerNameBox.Text
		if targetName == "" then
			warn("[TPButton] Digite o nome de um jogador!")
			return
		end
	
		-- Tenta encontrar o jogador pelo nome digitado (case-insensitive)
		local targetPlayer = nil
		for _, plr in pairs(Players:GetPlayers()) do
			if string.lower(plr.Name) == string.lower(targetName) then
				targetPlayer = plr
				break
			end
		end
	
		-- Se o jogador não existir, sai
		if not targetPlayer then
			warn("[TPButton] O jogador '" .. targetName .. "' não está no servidor!")
			return
		end
	
		-- Pega o personagem e teleporta
		local character = player.Character or player.CharacterAdded:Wait()
		local root = character:FindFirstChild("HumanoidRootPart")
	
		local targetChar = targetPlayer.Character
		if targetChar and targetChar:FindFirstChild("HumanoidRootPart") then
			local targetRoot = targetChar.HumanoidRootPart
			root.CFrame = targetRoot.CFrame + Vector3.new(0, 3, 0) -- teleporta acima do player
			print("[TPButton] Teleportado até:", targetPlayer.Name)
		else
			warn("[TPButton] O jogador existe, mas ainda não carregou o personagem!")
		end
	end)
	
end
coroutine.wrap(FHDCSZD_fake_script)()
local function AEFR_fake_script() -- TPLButton.Tp 
	local script = Instance.new('LocalScript', TPLButton)

	-- LocalScript dentro de ForsakenGuiS.Frame.TPLButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	
	button.MouseButton1Click:Connect(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local root = character:FindFirstChild("HumanoidRootPart")
		if not root then return end
	
		-- Cria a plataforma (somente pro jogador local)
		local part = Instance.new("Part")
		part.Size = Vector3.new(6, 1, 6)
		part.Anchored = true
		part.CanCollide = true
		part.Material = Enum.Material.Neon
		part.Color = Color3.fromRGB(255, 0, 0) -- vermelho pra destaque
		part.Transparency = 0.2
		part.CFrame = CFrame.new(root.Position + Vector3.new(0, 50, 0)) -- cria 50 studs acima
		part.Parent = workspace
	
		-- Faz ela ser visível só pra você
		local highlight = Instance.new("Highlight")
		highlight.Adornee = part
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.FillTransparency = 0.8
		highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
		highlight.Parent = part
	
		-- Move o jogador pra cima da part
		root.CFrame = part.CFrame + Vector3.new(0, 3, 0)
	
		print("[TPLButton] Teleportado para o alto!")
	
		-- Espera 4 segundos e remove a part
		task.delay(4, function()
			if part then
				part:Destroy()
				print("[TPLButton] Plataforma removida.")
			end
		end)
	end)
	
end
coroutine.wrap(AEFR_fake_script)()
local function FYQPLW_fake_script() -- TPprButton.TpPlayer 
	local script = Instance.new('LocalScript', TPprButton)

	-- LocalScript dentro de ForsakenGuiS.Frame.TPprButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	local Players = game:GetService("Players")
	
	button.MouseButton1Click:Connect(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local root = character:FindFirstChild("HumanoidRootPart")
		if not root then return end
	
		local closestPlayer = nil
		local closestDistance = math.huge
	
		for _, otherPlayer in pairs(Players:GetPlayers()) do
			if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
				local otherRoot = otherPlayer.Character.HumanoidRootPart
				local dist = (otherRoot.Position - root.Position).Magnitude
				if dist < closestDistance then
					closestDistance = dist
					closestPlayer = otherPlayer
				end
			end
		end
	
		if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local targetRoot = closestPlayer.Character.HumanoidRootPart
			local direction = (root.Position - targetRoot.Position).Unit
			local newPos = targetRoot.Position + direction * 3 -- 3 studs de distância pra não colidir
			root.CFrame = CFrame.new(newPos)
			print("[TPprButton] Teleportado perto de:", closestPlayer.Name)
		else
			warn("[TPprButton] Nenhum jogador próximo encontrado!")
		end
	end)
	
end
coroutine.wrap(FYQPLW_fake_script)()
local function BMAYAP_fake_script() -- TpCord.TpC 
	local script = Instance.new('LocalScript', TpCord)

	-- LocalScript dentro de ForsakenGuiS.Frame.TpCord
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	
	button.MouseButton1Click:Connect(function()
		if not _G.SavedCFrame then
			warn("[TpCord] Nenhuma coordenada salva! Use o SaveCord primeiro.")
			return
		end
	
		local character = player.Character or player.CharacterAdded:Wait()
		local root = character:FindFirstChild("HumanoidRootPart")
		if not root then return end
	
		root.CFrame = _G.SavedCFrame + Vector3.new(0, 3, 0) -- levemente acima da posição salva
		print("[TpCord] Teleportado para coordenada salva.")
	end)
	
end
coroutine.wrap(BMAYAP_fake_script)()
local function DGPM_fake_script() -- WalkTp.WalkTp 
	local script = Instance.new('LocalScript', WalkTp)

	print("Hello world!")
	-- LocalScript dentro do botão WalkTP
	
	local player = game.Players.LocalPlayer
	local button = script.Parent
	local frame = button.Parent
	local speedBox = frame:WaitForChild("SpeedWalk")
	
	local walking = false
	
	button.MouseButton1Click:Connect(function()
		walking = not walking
		if walking then
			button.Text = "WalkTP [ON]"
		else
			button.Text = "WalkTP [OFF]"
		end
	end)
	
	task.spawn(function()
		while true do
			task.wait(0.1)
			if walking then
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				local root = character:FindFirstChild("HumanoidRootPart")
	
				if humanoid and root then
					local moveDir = humanoid.MoveDirection
					if moveDir.Magnitude > 0 then
						local speed = tonumber(speedBox.Text) or 5
						root.CFrame = root.CFrame + moveDir * speed
					end
				end
			end
		end
	end)
	
end
coroutine.wrap(DGPM_fake_script)()
local function OLDQ_fake_script() -- Extra.OpenExtra 
	local script = Instance.new('LocalScript', Extra)

	local button = script.Parent
	local frame = button.Parent:WaitForChild("ExtraFrame")
	
	-- Começa fechado (opcional)
	frame.Visible = false
	
	button.MouseButton1Click:Connect(function()
		frame.Visible = not frame.Visible
	end)
	
end
coroutine.wrap(OLDQ_fake_script)()
local function XUDGLBO_fake_script() -- DexExplorer.DexOpen 
	local script = Instance.new('LocalScript', DexExplorer)

	-- LocalScript dentro do botão DexExplorer
	
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		local url = "https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"
	
		-- Tenta carregar o Dex diretamente
		local success, result = pcall(function()
			loadstring(game:HttpGet(url))()
		end)
	
		if success then
			print("[DexExplorer] Dex carregado com sucesso!")
		else
			warn("[DexExplorer] Falha ao carregar Dex:", result)
		end
	end)
	
end
coroutine.wrap(XUDGLBO_fake_script)()
local function MZVOCK_fake_script() -- InfiniteYield.OpenYield 
	local script = Instance.new('LocalScript', InfiniteYield)

	-- LocalScript dentro do botão InfiniteYield
	
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		local url = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"
	
		local success, result = pcall(function()
			loadstring(game:HttpGet(url))()
		end)
	
		if success then
			print("[InfiniteYield] Carregado com sucesso!")
		else
			warn("[InfiniteYield] Falha ao carregar:", result)
		end
	end)
	
end
coroutine.wrap(MZVOCK_fake_script)()
local function CQSTGZ_fake_script() -- Open.OpenScript 
	local script = Instance.new('LocalScript', Open)

	local button = script.Parent
	local frame = button.Parent:WaitForChild("Frame")
	
	-- Começa fechado (opcional)
	frame.Visible = false
	
	button.MouseButton1Click:Connect(function()
		frame.Visible = not frame.Visible
	end)
	
end
coroutine.wrap(CQSTGZ_fake_script)()
local function EETBY_fake_script() -- Opencred.OpenC 
	local script = Instance.new('LocalScript', Opencred)

	local button = script.Parent
	local frame = button.Parent:WaitForChild("Cred")
	
	-- Começa fechado (opcional)
	frame.Visible = false
	
	button.MouseButton1Click:Connect(function()
		frame.Visible = not frame.Visible
	end)
	
end
coroutine.wrap(EETBY_fake_script)()


--// Forsaken Hub by: s1lentcities //--

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Forsaken Hub by: s1lentcities",
    LoadingTitle = "Forsaken Hub",
    LoadingSubtitle = "Reach + Auto Block + Auto Gen + ESP",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ForsakenTesting",
        FileName = "TestingConfig"
    }
})

--// ==========================
--// Reach Controls Tab
--// ==========================

local ReachTab = Window:CreateTab("Reach Controls", 4483362458)
ReachTab:CreateSection("Reach Script Controls")

getgenv().RV = 1000
local ReachEnabled = false

ReachTab:CreateToggle({
    Name = "Reach!",
    CurrentValue = false,
    Flag = "ReachToggle",
    Callback = function(Value)
        ReachEnabled = Value
        if ReachEnabled then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/broimnothim/gg/refs/heads/main/gg'))()
        else
            getgenv().RV = 1
        end
    end,
})

ReachTab:CreateSlider({
    Name = "Adjust Reach",
    Range = {1,120},
    Increment = 1,
    Suffix = " studs",
    CurrentValue = 1,
    Flag = "ReachSlider",
    Callback = function(Value)
        getgenv().RV = Value
    end,
})

--// ==========================
--// Auto Block Tab
--// ==========================

local AutoBlockTab = Window:CreateTab("Auto Block", 4483362458)
AutoBlockTab:CreateSection("Animation + Sound Detection + Combat")

local lp = game.Players.LocalPlayer

-- function to create range spheres
local function makeRangePart(name, color)
    local part = Instance.new("Part")
    part.Name = name
    part.Shape = Enum.PartType.Ball
    part.Material = Enum.Material.Neon
    part.Color = color
    part.Anchored = false
    part.CanCollide = false
    part.Transparency = 0.5
    part.Parent = workspace

    local weld = Instance.new("WeldConstraint")
    weld.Part0 = part
    weld.Part1 = lp.Character:WaitForChild("HumanoidRootPart")
    weld.Parent = part

    return part
end

-- Range visuals
local AnimRangePart = makeRangePart("AnimRange", Color3.fromRGB(0,255,0))
local SoundRangePart = makeRangePart("SoundRange", Color3.fromRGB(255,0,0))
AnimRangePart.Size = Vector3.new(30,30,30)
SoundRangePart.Size = Vector3.new(30,30,30)

--==============================
-- Animation Auto Block
--==============================
local AnimBlockEnabled = false
local AnimDetectionRange = 15
local BlockAnimations = {"Slash","Attack","HeavyAttack"}

local function shouldBlockAnim(track, enemyPos)
    for _,trigger in ipairs(BlockAnimations) do
        if tostring(track.AnimationId):find(trigger) or track.Name:lower():find(trigger:lower()) then
            if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                local myPos = lp.Character.HumanoidRootPart.Position
                if (myPos - enemyPos).Magnitude <= AnimDetectionRange then
                    return true
                end
            end
        end
    end
    return false
end

local function hookAnimations()
    local humanoid = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    humanoid.AnimationPlayed:Connect(function(track)
        if AnimBlockEnabled and track and track.Parent then
            local char = track.Parent
            if char:FindFirstChild("HumanoidRootPart") and shouldBlockAnim(track, char.HumanoidRootPart.Position) then
                print("⚔️ Blocking (animation):", track.AnimationId)
                -- block input here
            end
        end
    end)
end

AutoBlockTab:CreateToggle({
    Name = "Animation Auto Block",
    CurrentValue = false,
    Callback = function(v)
        AnimBlockEnabled = v
        if v then
            hookAnimations()
            Rayfield:Notify({Title="Animation Auto Block", Content="Enabled ✅", Duration=3})
        else
            Rayfield:Notify({Title="Animation Auto Block", Content="Disabled ❌", Duration=3})
        end
    end
})

AutoBlockTab:CreateSlider({
    Name = "Animation Detection Range",
    Range = {10, 30},
    Increment = 1,
    CurrentValue = AnimDetectionRange,
    Callback = function(v)
        AnimDetectionRange = v
        AnimRangePart.Size = Vector3.new(v*2, v*2, v*2)
    end
})

--==============================
-- Sound Auto Block
--==============================
local SoundBlockEnabled = false
local SoundDetectionRange = 15
local BlockSounds = {"slash","behead","stab","swing"}

local function shouldBlockSound(sound, enemyPos)
    for _,trigger in ipairs(BlockSounds) do
        if sound.Name:lower():find(trigger) then
            if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                local myPos = lp.Character.HumanoidRootPart.Position
                if (myPos - enemyPos).Magnitude <= SoundDetectionRange then
                    return true
                end
            end
        end
    end
    return false
end

local function detectSounds()
    while SoundBlockEnabled do
        for _,snd in ipairs(workspace:GetDescendants()) do
            if snd:IsA("Sound") and snd.IsPlaying then
                local parent = snd.Parent
                if parent and parent:IsA("Model") and parent:FindFirstChild("HumanoidRootPart") then
                    if shouldBlockSound(snd, parent.HumanoidRootPart.Position) then
                        print("🎵 Blocking (sound):", snd.Name)
                        -- block input here
                    end
                end
            end
        end
        task.wait(0.2)
    end
end

AutoBlockTab:CreateToggle({
    Name = "Sound Auto Block",
    CurrentValue = false,
    Callback = function(v)
        SoundBlockEnabled = v
        if v then
            task.spawn(detectSounds)
            Rayfield:Notify({Title="Sound Auto Block", Content="Enabled ✅", Duration=3})
        else
            Rayfield:Notify({Title="Sound Auto Block", Content="Disabled ❌", Duration=3})
        end
    end
})

AutoBlockTab:CreateSlider({
    Name = "Sound Detection Range",
    Range = {10, 30},
    Increment = 1,
    CurrentValue = SoundDetectionRange,
    Callback = function(v)
        SoundDetectionRange = v
        SoundRangePart.Size = Vector3.new(v*2, v*2, v*2)
    end
})

--==============================
-- Transparency Control
--==============================
AutoBlockTab:CreateSlider({
    Name = "Range Visual Transparency",
    Range = {0,100},
    Increment = 1,
    CurrentValue = 50,
    Suffix = "%",
    Callback = function(v)
        local t = v/100
        AnimRangePart.Transparency = t
        SoundRangePart.Transparency = t
    end
})

--==============================
-- Auto Punch
--==============================
local AutoPunchEnabled = false
local PunchDelay = 0.3

local function autoPunchLoop()
    while AutoPunchEnabled do
        local tool = lp.Character and lp.Character:FindFirstChildOfClass("Tool")
        if tool then
            pcall(function() tool:Activate() end)
        end
        task.wait(PunchDelay)
    end
end

AutoBlockTab:CreateToggle({
    Name = "Auto Punch",
    CurrentValue = false,
    Callback = function(v)
        AutoPunchEnabled = v
        if v then task.spawn(autoPunchLoop) end
    end
})

AutoBlockTab:CreateSlider({
    Name = "Punch Delay",
    Range = {0.1, 1},
    Increment = 0.1,
    Suffix = " sec",
    CurrentValue = PunchDelay,
    Callback = function(v)
        PunchDelay = v
    end
})

--==============================
-- Aimbot
--==============================
local AimbotEnabled = false
local AimbotRange = 50
local AimAtSurvivors = false

local function getClosestTarget()
    local char = lp.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return nil end
    local myPos = char.HumanoidRootPart.Position

    local candidates = {}
    if AimAtSurvivors and workspace:FindFirstChild("Survivors") then
        candidates = workspace.Survivors:GetChildren()
    elseif workspace:FindFirstChild("Killers") then
        candidates = workspace.Killers:GetChildren()
    end

    local closest, dist = nil, AimbotRange
    for _, c in ipairs(candidates) do
        if c:FindFirstChild("HumanoidRootPart") then
            local d = (myPos - c.HumanoidRootPart.Position).Magnitude
            if d < dist then
                dist = d
                closest = c
            end
        end
    end
    return closest
end

local function aimbotLoop()
    local cam = workspace.CurrentCamera
    while AimbotEnabled do
        local target = getClosestTarget()
        if target and target:FindFirstChild("HumanoidRootPart") then
            cam.CFrame = CFrame.new(cam.CFrame.Position, target.HumanoidRootPart.Position)
        end
        task.wait()
    end
end

AutoBlockTab:CreateToggle({
    Name = "Aimbot",
    CurrentValue = false,
    Callback = function(v)
        AimbotEnabled = v
        if v then task.spawn(aimbotLoop) end
    end
})

AutoBlockTab:CreateSlider({
    Name = "Aimbot Range",
    Range = {10, 150},
    Increment = 5,
    Suffix = " studs",
    CurrentValue = AimbotRange,
    Callback = function(v)



-- ThanhNeBro Copyright : yarhm v1.19
if not game:IsLoaded() then
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Script loading",
		Text = "Waiting for the game to finish loading!",
		Duration = 5
	})
	game.Loaded:Wait()
end
		-- Instances:
local Converted = {
	["_ThanhNeBro"] = Instance.new("ScreenGui");
	["_Open"] = Instance.new("TextButton");
	["_UICorner"] = Instance.new("UICorner");
	["_InitOpen"] = Instance.new("LocalScript");
	["_OnClick"] = Instance.new("LocalScript");
	["_Resizer"] = Instance.new("LocalScript");
	["_UIPadding"] = Instance.new("UIPadding");
	["_DropdownFrameSample"] = Instance.new("Frame");
	["_UICorner1"] = Instance.new("UICorner");
	["_UIGradient"] = Instance.new("UIGradient");
	["_UIStroke"] = Instance.new("UIStroke");
	["_UIGradient1"] = Instance.new("UIGradient");
	["_ScrollingFrame"] = Instance.new("ScrollingFrame");
	["_UIListLayout"] = Instance.new("UIListLayout");
	["_Sample"] = Instance.new("TextButton");
	["_UIPadding1"] = Instance.new("UIPadding");
	["_UICorner2"] = Instance.new("UICorner");
	["_UIPadding2"] = Instance.new("UIPadding");
	["_ListButton"] = Instance.new("TextButton");
	["_UICorner3"] = Instance.new("UICorner");
	["_FUNCTIONS"] = Instance.new("ModuleScript");
	["_Notifications"] = Instance.new("Frame");
	["_UIListLayout1"] = Instance.new("UIListLayout");
	["_UIPadding3"] = Instance.new("UIPadding");
	["_Placeholder"] = Instance.new("Frame");
	["_UICorner4"] = Instance.new("UICorner");
	["_TextLabel"] = Instance.new("TextLabel");
	["_TextBoxPlaceholder"] = Instance.new("Frame");
	["_UIListLayout2"] = Instance.new("UIListLayout");
	["_TextButton"] = Instance.new("TextButton");
	["_UICorner5"] = Instance.new("UICorner");
	["_UIPadding4"] = Instance.new("UIPadding");
	["_TextBox"] = Instance.new("TextBox");
	["_UICorner6"] = Instance.new("UICorner");
	["_FloatingButton"] = Instance.new("TextButton");
	["_UIPadding5"] = Instance.new("UIPadding");
	["_UICorner7"] = Instance.new("UICorner");
	["_Keybinding"] = Instance.new("LocalScript");
	["_UIStroke1"] = Instance.new("UIStroke");
	["_Invisible"] = Instance.new("LocalScript");
	["_Lock"] = Instance.new("TextLabel");
	["_UIScale"] = Instance.new("UIScale");
	["_FloatingButtons"] = Instance.new("Frame");
	["_AddCustomModule"] = Instance.new("Frame");
	["_UICorner8"] = Instance.new("UICorner");
	["_UIStroke2"] = Instance.new("UIStroke");
	["_UIGradient2"] = Instance.new("UIGradient");
	["_UIGradient3"] = Instance.new("UIGradient");
	["_UIScale1"] = Instance.new("UIScale");
	["_TextLabel1"] = Instance.new("TextLabel");
	["_TextBox1"] = Instance.new("TextBox");
	["_UICorner9"] = Instance.new("UICorner");
	["_UIPadding6"] = Instance.new("UIPadding");
	["_TextLabel2"] = Instance.new("TextLabel");
	["_Add"] = Instance.new("TextButton");
	["_UICorner10"] = Instance.new("UICorner");
	["_UIPadding7"] = Instance.new("UIPadding");
	["_UIStroke3"] = Instance.new("UIStroke");
	["_LocalScript"] = Instance.new("LocalScript");
	["_Cancel"] = Instance.new("TextButton");
	["_UICorner11"] = Instance.new("UICorner");
	["_UIPadding8"] = Instance.new("UIPadding");
	["_UIStroke4"] = Instance.new("UIStroke");
	["_LocalScript1"] = Instance.new("LocalScript");
	["_themedColor"] = Instance.new("StringValue");
	["_Flee the Facility"] = Instance.new("LocalScript");
	["_Universal"] = Instance.new("LocalScript");
	["_DraggableObject"] = Instance.new("ModuleScript");
	["_Menu"] = Instance.new("Frame");
	["_UICorner12"] = Instance.new("UICorner");
	["_UIScale2"] = Instance.new("UIScale");
	["_UIStroke5"] = Instance.new("UIStroke");
	["_UIGradient4"] = Instance.new("UIGradient");
	["_Animator"] = Instance.new("LocalScript");
	["_List"] = Instance.new("Frame");
	["_UICorner13"] = Instance.new("UICorner");
	["_AutoSetup"] = Instance.new("LocalScript");
	["_ScrollingFrame1"] = Instance.new("ScrollingFrame");
	["_UIListLayout3"] = Instance.new("UIListLayout");
	["_UIPadding9"] = Instance.new("UIPadding");
	["_UIPadding10"] = Instance.new("UIPadding");
	["_UIGradient5"] = Instance.new("UIGradient");
	["_UIStroke6"] = Instance.new("UIStroke");
	["_UIGradient6"] = Instance.new("UIGradient");
	["_AddCustomModule1"] = Instance.new("TextButton");
	["_UICorner14"] = Instance.new("UICorner");
	["_UIPadding11"] = Instance.new("UIPadding");
	["_UIStroke7"] = Instance.new("UIStroke");
	["_LocalScript2"] = Instance.new("LocalScript");
	["_themedColor1"] = Instance.new("StringValue");
	["_themedColor2"] = Instance.new("StringValue");
	["_HubCredits"] = Instance.new("TextLabel");
	["_HubDesc"] = Instance.new("TextLabel");
	["_HubName"] = Instance.new("TextLabel");
	["_CanvasGroup"] = Instance.new("CanvasGroup");
	["_UICorner15"] = Instance.new("UICorner");
	["_ImageLabel"] = Instance.new("ImageLabel");
	["_Opener"] = Instance.new("TextButton");
	["_TextLabel3"] = Instance.new("TextLabel");
	["_Area"] = Instance.new("Frame");
	["_Area1"] = Instance.new("ScrollingFrame");
	["_TextLabel4"] = Instance.new("TextLabel");
	["_TextLabel5"] = Instance.new("TextLabel");
	["_UIGradient7"] = Instance.new("UIGradient");
	["_CloseArea"] = Instance.new("TextButton");
	["_Frame"] = Instance.new("Frame");
	["_UICorner16"] = Instance.new("UICorner");
	["_CloseOpen"] = Instance.new("LocalScript");
	["_TextLabel6"] = Instance.new("TextLabel");
	["_UICorner17"] = Instance.new("UICorner");
	["_AllowForSpring"] = Instance.new("BindableEvent");
	["_themedColor3"] = Instance.new("StringValue");
	["_ClickAndHold"] = Instance.new("ModuleScript");
	["_Spring"] = Instance.new("ModuleScript");
	["_Toggle"] = Instance.new("Frame");
	["_TextLabel7"] = Instance.new("TextLabel");
	["_UIListLayout4"] = Instance.new("UIListLayout");
	["_Frame1"] = Instance.new("Frame");
	["_Frame2"] = Instance.new("Frame");
	["_UICorner18"] = Instance.new("UICorner");
	["_Toggler"] = Instance.new("TextButton");
	["_UICorner19"] = Instance.new("UICorner");
	["_ImageLabel1"] = Instance.new("ImageLabel");
	["_UIPadding12"] = Instance.new("UIPadding");
	["_Modules"] = Instance.new("Folder");
	["_NotificationSample"] = Instance.new("Frame");
	["_UICorner20"] = Instance.new("UICorner");
	["_UIStroke8"] = Instance.new("UIStroke");
	["_UIGradient8"] = Instance.new("UIGradient");
	["_ImageLabel2"] = Instance.new("ImageLabel");
	["_TextLabel8"] = Instance.new("TextLabel");
	["_UITextSizeConstraint"] = Instance.new("UITextSizeConstraint");
	["_Close"] = Instance.new("ImageButton");
	["_UICorner21"] = Instance.new("UICorner");
	["_UIStroke9"] = Instance.new("UIStroke");
	["_UIScale3"] = Instance.new("UIScale");
	["_themedColor4"] = Instance.new("StringValue");
	["_Dialog"] = Instance.new("Frame");
	["_UICorner22"] = Instance.new("UICorner");
	["_UIGradient9"] = Instance.new("UIGradient");
	["_UIPadding13"] = Instance.new("UIPadding");
	["_UIStroke10"] = Instance.new("UIStroke");
	["_UIGradient10"] = Instance.new("UIGradient");
	["_DialogTitle"] = Instance.new("TextLabel");
	["_UIListLayout5"] = Instance.new("UIListLayout");
	["_DialogDesc"] = Instance.new("TextLabel");
	["_UITextSizeConstraint1"] = Instance.new("UITextSizeConstraint");
	["_Options"] = Instance.new("Frame");
	["_UIListLayout6"] = Instance.new("UIListLayout");
	["_OptionPlaceholder"] = Instance.new("TextButton");
	["_UIPadding14"] = Instance.new("UIPadding");
	["_UICorner23"] = Instance.new("UICorner");
	["_UIStroke11"] = Instance.new("UIStroke");
	["_UIGradient11"] = Instance.new("UIGradient");
	["_themedColor5"] = Instance.new("StringValue");
	["_OnSelect"] = Instance.new("BindableEvent");
	["_UIScale4"] = Instance.new("UIScale");
	["_themedColor6"] = Instance.new("StringValue");
	["_Range"] = Instance.new("Frame");
	["_TextLabel9"] = Instance.new("TextLabel");
	["_UIListLayout7"] = Instance.new("UIListLayout");
	["_UIPadding15"] = Instance.new("UIPadding");
	["_Frame3"] = Instance.new("Frame");
	["_UIPadding16"] = Instance.new("UIPadding");
	["_UICorner24"] = Instance.new("UICorner");
	["_Frame4"] = Instance.new("Frame");
	["_UICorner25"] = Instance.new("UICorner");
	["_TextButton1"] = Instance.new("TextButton");
	["_UICorner26"] = Instance.new("UICorner");
	["_Init"] = Instance.new("LocalScript");
	["_Forsaken"] = Instance.new("LocalScript");
	["_Murder Mystery 2"] = Instance.new("LocalScript");
	["_ESPIndicator"] = Instance.new("ModuleScript");
	["_Bezier"] = Instance.new("ModuleScript");
	["_FloatingButtonSetting"] = Instance.new("Frame");
	["_ControlBarContainer"] = Instance.new("Frame");
	["_ControlBar"] = Instance.new("Frame");
	["_UIListLayout8"] = Instance.new("UIListLayout");
	["_Visibility"] = Instance.new("TextButton");
	["_UICorner27"] = Instance.new("UICorner");
	["_UIPadding17"] = Instance.new("UIPadding");
	["_Event"] = Instance.new("BindableEvent");
	["_LocalScript3"] = Instance.new("LocalScript");
	["_themedColor7"] = Instance.new("StringValue");
	["_Lock1"] = Instance.new("TextButton");
	["_UICorner28"] = Instance.new("UICorner");
	["_UIPadding18"] = Instance.new("UIPadding");
	["_Event1"] = Instance.new("BindableEvent");
	["_LocalScript4"] = Instance.new("LocalScript");
	["_themedColor8"] = Instance.new("StringValue");
	["_Exit"] = Instance.new("TextButton");
	["_UICorner29"] = Instance.new("UICorner");
	["_UIPadding19"] = Instance.new("UIPadding");
	["_UIAspectRatioConstraint"] = Instance.new("UIAspectRatioConstraint");
	["_LocalScript5"] = Instance.new("LocalScript");
	["_themedColor9"] = Instance.new("StringValue");
	["_UIListLayout9"] = Instance.new("UIListLayout");
	["_Tip"] = Instance.new("TextLabel");
	["_UIStroke12"] = Instance.new("UIStroke");
	["_UIScale5"] = Instance.new("UIScale");
	["_Theme"] = Instance.new("ModuleScript");
	["_PointSave"] = Instance.new("ModuleScript");
}
-- Properties:
Converted["_ThanhNeBro"].DisplayOrder = 3
Converted["_ThanhNeBro"].IgnoreGuiInset = true
Converted["_ThanhNeBro"].ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
Converted["_ThanhNeBro"].ResetOnSpawn = false
Converted["_ThanhNeBro"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_ThanhNeBro"].Name = "ThanhNeBro"
Converted["_ThanhNeBro"].Parent = game:GetService("CoreGui")
Converted["_Open"].Font = Enum.Font.Gotham
Converted["_Open"].Text = "Triple-click this region to open ThanhNeBro."
Converted["_Open"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Open"].TextScaled = true
Converted["_Open"].TextSize = 14
Converted["_Open"].TextTransparency = 1
Converted["_Open"].TextWrapped = true
Converted["_Open"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Open"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Open"].BackgroundTransparency = 1
Converted["_Open"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Open"].BorderSizePixel = 0
Converted["_Open"].Position = UDim2.new(0.499372631, 0, 0.06341701, 0)
Converted["_Open"].Selectable = false
Converted["_Open"].Size = UDim2.new(0, 493, 0, 50)
Converted["_Open"].Visible = false
Converted["_Open"].Name = "Open"
Converted["_Open"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner"].Parent = Converted["_Open"]
Converted["_UIPadding"].PaddingBottom = UDim.new(0, 10)
Converted["_UIPadding"].PaddingLeft = UDim.new(0, 20)
Converted["_UIPadding"].PaddingRight = UDim.new(0, 20)
Converted["_UIPadding"].PaddingTop = UDim.new(0, 10)
Converted["_UIPadding"].Parent = Converted["_Open"]
Converted["_DropdownFrameSample"].AnchorPoint = Vector2.new(0.5, 0)
Converted["_DropdownFrameSample"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DropdownFrameSample"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DropdownFrameSample"].BorderSizePixel = 0
Converted["_DropdownFrameSample"].Size = UDim2.new(0, 108, 0, 239)
Converted["_DropdownFrameSample"].Visible = false
Converted["_DropdownFrameSample"].Name = "DropdownFrameSample"
Converted["_DropdownFrameSample"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner1"].Parent = Converted["_DropdownFrameSample"]
Converted["_UIGradient"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(68.00000354647636, 68.00000354647636, 68.00000354647636))
}
Converted["_UIGradient"].Rotation = 68
Converted["_UIGradient"].Parent = Converted["_DropdownFrameSample"]
Converted["_UIStroke"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke"].Thickness = 2
Converted["_UIStroke"].Parent = Converted["_DropdownFrameSample"]
Converted["_UIGradient1"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(111.00000098347664, 111.00000098347664, 111.00000098347664)),
	ColorSequenceKeypoint.new(0.6401384472846985, Color3.fromRGB(114.23875719308853, 114.23875719308853, 114.23875719308853)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
Converted["_UIGradient1"].Rotation = -107
Converted["_UIGradient1"].Parent = Converted["_UIStroke"]
Converted["_ScrollingFrame"].AutomaticCanvasSize = Enum.AutomaticSize.XY
Converted["_ScrollingFrame"].CanvasSize = UDim2.new(0, 0, 0, 0)
Converted["_ScrollingFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].ScrollBarThickness = 0
Converted["_ScrollingFrame"].Active = true
Converted["_ScrollingFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ScrollingFrame"].BackgroundTransparency = 1
Converted["_ScrollingFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].BorderSizePixel = 0
Converted["_ScrollingFrame"].Size = UDim2.new(1, 0, 1, 0)
Converted["_ScrollingFrame"].Parent = Converted["_DropdownFrameSample"]
Converted["_UIListLayout"].Padding = UDim.new(0, 5)
Converted["_UIListLayout"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout"].Parent = Converted["_ScrollingFrame"]
Converted["_Sample"].Font = Enum.Font.Unknown
Converted["_Sample"].Text = "This can fit a lot of text, probably."
Converted["_Sample"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Sample"].TextScaled = true
Converted["_Sample"].TextSize = 14
Converted["_Sample"].TextWrapped = true
Converted["_Sample"].BackgroundColor3 = Color3.fromRGB(22.000000588595867, 22.000000588595867, 22.000000588595867)
Converted["_Sample"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Sample"].BorderSizePixel = 0
Converted["_Sample"].Size = UDim2.new(1, 0, 0, 35)
Converted["_Sample"].Visible = false
Converted["_Sample"].Name = "Sample"
Converted["_Sample"].Parent = Converted["_ScrollingFrame"]
Converted["_UIPadding1"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding1"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding1"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding1"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding1"].Parent = Converted["_Sample"]
Converted["_UICorner2"].Parent = Converted["_Sample"]
Converted["_UIPadding2"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding2"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding2"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding2"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding2"].Parent = Converted["_DropdownFrameSample"]
Converted["_ListButton"].Font = Enum.Font.Gotham
Converted["_ListButton"].Text = "Placeholder"
Converted["_ListButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ListButton"].TextSize = 14
Converted["_ListButton"].TextWrapped = true
Converted["_ListButton"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_ListButton"].BackgroundColor3 = Color3.fromRGB(49.00000087916851, 49.00000087916851, 49.00000087916851)
Converted["_ListButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ListButton"].BorderSizePixel = 0
Converted["_ListButton"].Position = UDim2.new(0.0450000018, 0, 0.112000003, 0)
Converted["_ListButton"].Size = UDim2.new(1, 0, 0, 50)
Converted["_ListButton"].Visible = false
Converted["_ListButton"].Name = "ListButton"
Converted["_ListButton"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner3"].Parent = Converted["_ListButton"]
Converted["_Notifications"].AnchorPoint = Vector2.new(1, 0.5)
Converted["_Notifications"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Notifications"].BackgroundTransparency = 1
Converted["_Notifications"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Notifications"].BorderSizePixel = 0
Converted["_Notifications"].Position = UDim2.new(0.99000001, 0, 0.5, 0)
Converted["_Notifications"].Size = UDim2.new(0, 242, 1, 0)
Converted["_Notifications"].Name = "Notifications"
Converted["_Notifications"].Parent = Converted["_ThanhNeBro"]
Converted["_UIListLayout1"].Padding = UDim.new(0, 10)
Converted["_UIListLayout1"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout1"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout1"].VerticalAlignment = Enum.VerticalAlignment.Bottom
Converted["_UIListLayout1"].Parent = Converted["_Notifications"]
Converted["_UIPadding3"].PaddingBottom = UDim.new(0, 10)
Converted["_UIPadding3"].PaddingLeft = UDim.new(0, 10)
Converted["_UIPadding3"].Parent = Converted["_Notifications"]
Converted["_Placeholder"].AnchorPoint = Vector2.new(0.5, 0)
Converted["_Placeholder"].BackgroundColor3 = Color3.fromRGB(31.000001952052116, 31.000001952052116, 31.000001952052116)
Converted["_Placeholder"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Placeholder"].BorderSizePixel = 0
Converted["_Placeholder"].Position = UDim2.new(0.0450000018, 0, 0.112000003, 0)
Converted["_Placeholder"].Visible = false
Converted["_Placeholder"].Name = "Placeholder"
Converted["_Placeholder"].Parent = Converted["_Notifications"]
Converted["_UICorner4"].Parent = Converted["_Placeholder"]
Converted["_TextLabel"].Font = Enum.Font.Gotham
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 14
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextLabel"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BackgroundTransparency = 1
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_TextLabel"].Size = UDim2.new(0.899999976, 0, 0.800000012, 0)
Converted["_TextLabel"].Parent = Converted["_Placeholder"]
Converted["_TextBoxPlaceholder"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBoxPlaceholder"].BackgroundTransparency = 1
Converted["_TextBoxPlaceholder"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBoxPlaceholder"].BorderSizePixel = 0
Converted["_TextBoxPlaceholder"].Size = UDim2.new(1, 0, 0, 50)
Converted["_TextBoxPlaceholder"].Visible = false
Converted["_TextBoxPlaceholder"].Name = "TextBoxPlaceholder"
Converted["_TextBoxPlaceholder"].Parent = Converted["_ThanhNeBro"]
Converted["_UIListLayout2"].Padding = UDim.new(0, 5)
Converted["_UIListLayout2"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout2"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout2"].Parent = Converted["_TextBoxPlaceholder"]
Converted["_TextButton"].Font = Enum.Font.Gotham
Converted["_TextButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextButton"].TextScaled = true
Converted["_TextButton"].TextSize = 14
Converted["_TextButton"].TextWrapped = true
Converted["_TextButton"].BackgroundColor3 = Color3.fromRGB(22.000000588595867, 22.000000588595867, 22.000000588595867)
Converted["_TextButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextButton"].BorderSizePixel = 0
Converted["_TextButton"].Position = UDim2.new(0.292333364, 0, 1.67999995, 0)
Converted["_TextButton"].Size = UDim2.new(0, 50, 0, 50)
Converted["_TextButton"].Parent = Converted["_TextBoxPlaceholder"]
Converted["_UICorner5"].Parent = Converted["_TextButton"]
Converted["_UIPadding4"].PaddingBottom = UDim.new(0, 5)
Converted["_UIPadding4"].PaddingLeft = UDim.new(0, 5)
Converted["_UIPadding4"].PaddingRight = UDim.new(0, 5)
Converted["_UIPadding4"].PaddingTop = UDim.new(0, 5)
Converted["_UIPadding4"].Parent = Converted["_TextButton"]
Converted["_TextBox"].Font = Enum.Font.Gotham
Converted["_TextBox"].PlaceholderText = "Placeholder"
Converted["_TextBox"].Text = ""
Converted["_TextBox"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox"].TextSize = 14
Converted["_TextBox"].TextWrapped = true
Converted["_TextBox"].BackgroundColor3 = Color3.fromRGB(22.000000588595867, 22.000000588595867, 22.000000588595867)
Converted["_TextBox"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox"].BorderSizePixel = 0
Converted["_TextBox"].Size = UDim2.new(0.800000012, 0, 0, 50)
Converted["_TextBox"].Parent = Converted["_TextBoxPlaceholder"]
Converted["_UICorner6"].Parent = Converted["_TextBox"]
Converted["_FloatingButton"].Font = Enum.Font.Unknown
Converted["_FloatingButton"].Text = "Shoot into murderer"
Converted["_FloatingButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FloatingButton"].TextScaled = true
Converted["_FloatingButton"].TextSize = 14
Converted["_FloatingButton"].TextWrapped = true
Converted["_FloatingButton"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_FloatingButton"].BackgroundColor3 = Color3.fromRGB(31.000000052154064, 31.000000052154064, 31.000000052154064)
Converted["_FloatingButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_FloatingButton"].BorderSizePixel = 0
Converted["_FloatingButton"].Position = UDim2.new(0, 125, 0, 40)
Converted["_FloatingButton"].Size = UDim2.new(0, 50, 0, 100)
Converted["_FloatingButton"].Visible = false
Converted["_FloatingButton"].Name = "FloatingButton"
Converted["_FloatingButton"].Parent = Converted["_ThanhNeBro"]
Converted["_UIPadding5"].PaddingBottom = UDim.new(0, 5)
Converted["_UIPadding5"].PaddingLeft = UDim.new(0, 5)
Converted["_UIPadding5"].PaddingRight = UDim.new(0, 5)
Converted["_UIPadding5"].PaddingTop = UDim.new(0, 5)
Converted["_UIPadding5"].Parent = Converted["_FloatingButton"]
Converted["_UICorner7"].Parent = Converted["_FloatingButton"]
Converted["_UIStroke1"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Converted["_UIStroke1"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke1"].Parent = Converted["_FloatingButton"]
Converted["_Lock"].Font = Enum.Font.Gotham
Converted["_Lock"].Text = "🔒"
Converted["_Lock"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Lock"].TextScaled = true
Converted["_Lock"].TextSize = 14
Converted["_Lock"].TextWrapped = true
Converted["_Lock"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Lock"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Lock"].BackgroundTransparency = 1
Converted["_Lock"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Lock"].BorderSizePixel = 0
Converted["_Lock"].Position = UDim2.new(1, -10, 1, -10)
Converted["_Lock"].Size = UDim2.new(0, 20, 0, 20)
Converted["_Lock"].ZIndex = 999999999
Converted["_Lock"].Name = "Lock"
Converted["_Lock"].Parent = Converted["_FloatingButton"]
Converted["_UIScale"].Scale = 1.0000000116860974e-07
Converted["_UIScale"].Parent = Converted["_Lock"]
Converted["_FloatingButtons"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_FloatingButtons"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FloatingButtons"].BackgroundTransparency = 1
Converted["_FloatingButtons"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_FloatingButtons"].BorderSizePixel = 0
Converted["_FloatingButtons"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_FloatingButtons"].Size = UDim2.new(1, 0, 1, 0)
Converted["_FloatingButtons"].ZIndex = 3
Converted["_FloatingButtons"].Name = "FloatingButtons"
Converted["_FloatingButtons"].Parent = Converted["_ThanhNeBro"]
Converted["_AddCustomModule"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_AddCustomModule"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AddCustomModule"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_AddCustomModule"].BorderSizePixel = 0
Converted["_AddCustomModule"].ClipsDescendants = true
Converted["_AddCustomModule"].Position = UDim2.new(0.5, 0, -0.5, 0)
Converted["_AddCustomModule"].Size = UDim2.new(0, 440, 0, 268)
Converted["_AddCustomModule"].ZIndex = 3
Converted["_AddCustomModule"].Name = "AddCustomModule"
Converted["_AddCustomModule"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner8"].Parent = Converted["_AddCustomModule"]
Converted["_UIStroke2"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke2"].Thickness = 2
Converted["_UIStroke2"].Parent = Converted["_AddCustomModule"]
Converted["_UIGradient2"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(53.00000064074993, 53.00000064074993, 53.00000064074993)),
	ColorSequenceKeypoint.new(0.15224914252758026, Color3.fromRGB(50.69031357765198, 50.69031357765198, 50.69031357765198)),
	ColorSequenceKeypoint.new(0.4723183512687683, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(0.7577854990959167, Color3.fromRGB(50.13314567506313, 50.13314567506313, 50.13314567506313)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155))
}
Converted["_UIGradient2"].Rotation = 62
Converted["_UIGradient2"].Parent = Converted["_UIStroke2"]
Converted["_UIGradient3"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(68.00000354647636, 68.00000354647636, 68.00000354647636))
}
Converted["_UIGradient3"].Rotation = 68
Converted["_UIGradient3"].Parent = Converted["_AddCustomModule"]
Converted["_UIScale1"].Parent = Converted["_AddCustomModule"]
Converted["_TextLabel1"].Font = Enum.Font.Gotham
Converted["_TextLabel1"].Text = "Add a module"
Converted["_TextLabel1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].TextScaled = true
Converted["_TextLabel1"].TextSize = 14
Converted["_TextLabel1"].TextWrapped = true
Converted["_TextLabel1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].BackgroundTransparency = 1
Converted["_TextLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel1"].BorderSizePixel = 0
Converted["_TextLabel1"].Position = UDim2.new(0.352256238, 0, 0.133915231, 0)
Converted["_TextLabel1"].Size = UDim2.new(0.619047642, 0, 0.125920027, 0)
Converted["_TextLabel1"].Parent = Converted["_AddCustomModule"]
Converted["_TextBox1"].ClearTextOnFocus = false
Converted["_TextBox1"].Font = Enum.Font.Gotham
Converted["_TextBox1"].PlaceholderText = "Custom module link"
Converted["_TextBox1"].Text = ""
Converted["_TextBox1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox1"].TextScaled = true
Converted["_TextBox1"].TextSize = 14
Converted["_TextBox1"].TextWrapped = true
Converted["_TextBox1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextBox1"].BackgroundColor3 = Color3.fromRGB(22.000000588595867, 22.000000588595867, 22.000000588595867)
Converted["_TextBox1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox1"].BorderSizePixel = 0
Converted["_TextBox1"].Position = UDim2.new(0.499648541, 0, 0.500059664, 0)
Converted["_TextBox1"].Size = UDim2.new(0.804988742, 0, 0.544776142, 0)
Converted["_TextBox1"].Parent = Converted["_AddCustomModule"]
Converted["_UICorner9"].Parent = Converted["_TextBox1"]
Converted["_UIPadding6"].PaddingBottom = UDim.new(0, 10)
Converted["_UIPadding6"].PaddingLeft = UDim.new(0, 10)
Converted["_UIPadding6"].PaddingRight = UDim.new(0, 10)
Converted["_UIPadding6"].PaddingTop = UDim.new(0, 10)
Converted["_UIPadding6"].Parent = Converted["_TextBox1"]
Converted["_TextLabel2"].Font = Enum.Font.GothamBold
Converted["_TextLabel2"].Text = "ONLY ADD MODULES YOU TRUST!"
Converted["_TextLabel2"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_TextLabel2"].TextScaled = true
Converted["_TextLabel2"].TextSize = 14
Converted["_TextLabel2"].TextWrapped = true
Converted["_TextLabel2"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel2"].BackgroundTransparency = 1
Converted["_TextLabel2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel2"].BorderSizePixel = 0
Converted["_TextLabel2"].Position = UDim2.new(0.499648541, 0, 0.833542168, 0)
Converted["_TextLabel2"].Size = UDim2.new(0.619047642, 0, 0.0550245307, 0)
Converted["_TextLabel2"].Parent = Converted["_AddCustomModule"]
Converted["_Add"].Font = Enum.Font.Gotham
Converted["_Add"].Text = "Add"
Converted["_Add"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Add"].TextScaled = true
Converted["_Add"].TextSize = 14
Converted["_Add"].TextWrapped = true
Converted["_Add"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Add"].BackgroundColor3 = Color3.fromRGB(50.00000461935997, 50.00000461935997, 50.00000461935997)
Converted["_Add"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Add"].BorderSizePixel = 0
Converted["_Add"].Position = UDim2.new(0.108492024, 0, 0.927298486, 0)
Converted["_Add"].Size = UDim2.new(0.163265288, 0, 0.0858208984, 0)
Converted["_Add"].Name = "Add"
Converted["_Add"].Parent = Converted["_AddCustomModule"]
Converted["_UICorner10"].Parent = Converted["_Add"]
Converted["_UIPadding7"].PaddingBottom = UDim.new(0, 5)
Converted["_UIPadding7"].PaddingLeft = UDim.new(0, 5)
Converted["_UIPadding7"].PaddingRight = UDim.new(0, 5)
Converted["_UIPadding7"].PaddingTop = UDim.new(0, 5)
Converted["_UIPadding7"].Parent = Converted["_Add"]
Converted["_UIStroke3"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Converted["_UIStroke3"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke3"].Parent = Converted["_Add"]
Converted["_Cancel"].Font = Enum.Font.Gotham
Converted["_Cancel"].Text = "Cancel"
Converted["_Cancel"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Cancel"].TextScaled = true
Converted["_Cancel"].TextSize = 14
Converted["_Cancel"].TextWrapped = true
Converted["_Cancel"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Cancel"].BackgroundColor3 = Color3.fromRGB(50.00000461935997, 50.00000461935997, 50.00000461935997)
Converted["_Cancel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Cancel"].BorderSizePixel = 0
Converted["_Cancel"].Position = UDim2.new(0.899875283, 0, 0.931029797, 0)
Converted["_Cancel"].Size = UDim2.new(0.163265288, 0, 0.0858208984, 0)
Converted["_Cancel"].Name = "Cancel"
Converted["_Cancel"].Parent = Converted["_AddCustomModule"]
Converted["_UICorner11"].Parent = Converted["_Cancel"]
Converted["_UIPadding8"].PaddingBottom = UDim.new(0, 5)
Converted["_UIPadding8"].PaddingLeft = UDim.new(0, 5)
Converted["_UIPadding8"].PaddingRight = UDim.new(0, 5)
Converted["_UIPadding8"].PaddingTop = UDim.new(0, 5)
Converted["_UIPadding8"].Parent = Converted["_Cancel"]
Converted["_UIStroke4"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Converted["_UIStroke4"].Color = Color3.fromRGB(255, 0, 0)
Converted["_UIStroke4"].Parent = Converted["_Cancel"]
Converted["_themedColor"].Value = "backgroundColorCSQ"
Converted["_themedColor"].Name = "themedColor"
Converted["_themedColor"].Parent = Converted["_AddCustomModule"]
Converted["_Menu"].AnchorPoint = Vector2.new(0.5, 0)
Converted["_Menu"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Menu"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Menu"].BorderSizePixel = 0
Converted["_Menu"].Position = UDim2.new(0.5, 0, 0.0500000007, 0)
Converted["_Menu"].Size = UDim2.new(0, 441, 0, 268)
Converted["_Menu"].Name = "Menu"
Converted["_Menu"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner12"].Parent = Converted["_Menu"]
Converted["_UIScale2"].Parent = Converted["_Menu"]
Converted["_UIStroke5"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke5"].Thickness = 2
Converted["_UIStroke5"].Parent = Converted["_Menu"]
Converted["_UIGradient4"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(53.00000064074993, 53.00000064074993, 53.00000064074993)),
	ColorSequenceKeypoint.new(0.15224914252758026, Color3.fromRGB(50.69031357765198, 50.69031357765198, 50.69031357765198)),
	ColorSequenceKeypoint.new(0.4723183512687683, Color3.fromRGB(255, 0, 4.000000236555934)),
	ColorSequenceKeypoint.new(0.7577854990959167, Color3.fromRGB(50.13314567506313, 50.13314567506313, 50.13314567506313)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155))
}
Converted["_UIGradient4"].Rotation = 180
Converted["_UIGradient4"].Parent = Converted["_UIStroke5"]
Converted["_List"].AnchorPoint = Vector2.new(0, 0.5)
Converted["_List"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_List"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_List"].BorderSizePixel = 0
Converted["_List"].Position = UDim2.new(0, 0, 0.606999993, 0)
Converted["_List"].Size = UDim2.new(0.315405339, 0, 0.785387993, 0)
Converted["_List"].Name = "List"
Converted["_List"].Parent = Converted["_Menu"]
Converted["_UICorner13"].Parent = Converted["_List"]
Converted["_ScrollingFrame1"].AutomaticCanvasSize = Enum.AutomaticSize.Y
Converted["_ScrollingFrame1"].CanvasSize = UDim2.new(0, 0, 0, 0)
Converted["_ScrollingFrame1"].ScrollBarThickness = 2
Converted["_ScrollingFrame1"].VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left
Converted["_ScrollingFrame1"].Active = true
Converted["_ScrollingFrame1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_ScrollingFrame1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ScrollingFrame1"].BackgroundTransparency = 1
Converted["_ScrollingFrame1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame1"].BorderSizePixel = 0
Converted["_ScrollingFrame1"].Position = UDim2.new(0.478333294, 0, 0.408619136, 0)
Converted["_ScrollingFrame1"].Size = UDim2.new(1, 0, 0.795258284, 0)
Converted["_ScrollingFrame1"].Parent = Converted["_List"]
Converted["_UIListLayout3"].Padding = UDim.new(0, 3)
Converted["_UIListLayout3"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout3"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout3"].Parent = Converted["_ScrollingFrame1"]
Converted["_UIPadding9"].PaddingLeft = UDim.new(0, 4)
Converted["_UIPadding9"].Parent = Converted["_ScrollingFrame1"]
Converted["_UIPadding10"].PaddingBottom = UDim.new(0, 10)
Converted["_UIPadding10"].PaddingLeft = UDim.new(0, 10)
Converted["_UIPadding10"].PaddingRight = UDim.new(0, 10)
Converted["_UIPadding10"].PaddingTop = UDim.new(0, 10)
Converted["_UIPadding10"].Parent = Converted["_List"]
Converted["_UIGradient5"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(68.00000354647636, 68.00000354647636, 68.00000354647636))
}
Converted["_UIGradient5"].Offset = Vector2.new(0, -0.5)
Converted["_UIGradient5"].Rotation = -133
Converted["_UIGradient5"].Parent = Converted["_List"]
Converted["_UIStroke6"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke6"].Thickness = 0
Converted["_UIStroke6"].Parent = Converted["_List"]
Converted["_UIGradient6"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(111.00000098347664, 111.00000098347664, 111.00000098347664)),
	ColorSequenceKeypoint.new(0.6401384472846985, Color3.fromRGB(114.23875719308853, 114.23875719308853, 114.23875719308853)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
Converted["_UIGradient6"].Rotation = -44
Converted["_UIGradient6"].Parent = Converted["_UIStroke6"]
Converted["_AddCustomModule1"].Font = Enum.Font.Gotham
Converted["_AddCustomModule1"].Text = "+"
Converted["_AddCustomModule1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AddCustomModule1"].TextScaled = true
Converted["_AddCustomModule1"].TextSize = 14
Converted["_AddCustomModule1"].TextWrapped = true
Converted["_AddCustomModule1"].AnchorPoint = Vector2.new(1, 1)
Converted["_AddCustomModule1"].BackgroundColor3 = Color3.fromRGB(50.00000461935997, 50.00000461935997, 50.00000461935997)
Converted["_AddCustomModule1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_AddCustomModule1"].BorderSizePixel = 0
Converted["_AddCustomModule1"].Position = UDim2.new(1, 0, 1, 0)
Converted["_AddCustomModule1"].Size = UDim2.new(0.215681866, 0, 0.142528668, 0)
Converted["_AddCustomModule1"].Name = "AddCustomModule"
Converted["_AddCustomModule1"].Parent = Converted["_List"]
Converted["_UICorner14"].Parent = Converted["_AddCustomModule1"]
Converted["_UIPadding11"].PaddingLeft = UDim.new(0, 1)
Converted["_UIPadding11"].Parent = Converted["_AddCustomModule1"]
Converted["_UIStroke7"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Converted["_UIStroke7"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke7"].Parent = Converted["_AddCustomModule1"]
Converted["_themedColor1"].Value = "primaryColor"
Converted["_themedColor1"].Name = "themedColor"
Converted["_themedColor1"].Parent = Converted["_AddCustomModule1"]
Converted["_themedColor2"].Value = "backgroundColorCSQ"
Converted["_themedColor2"].Name = "themedColor"
Converted["_themedColor2"].Parent = Converted["_List"]
Converted["_HubCredits"].Font = Enum.Font.GothamBold
Converted["_HubCredits"].Text = "made and open sourced by imperial"
Converted["_HubCredits"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubCredits"].TextScaled = true
Converted["_HubCredits"].TextSize = 14
Converted["_HubCredits"].TextTransparency = 0.699999988079071
Converted["_HubCredits"].TextWrapped = true
Converted["_HubCredits"].TextXAlignment = Enum.TextXAlignment.Right
Converted["_HubCredits"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_HubCredits"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubCredits"].BackgroundTransparency = 1
Converted["_HubCredits"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_HubCredits"].BorderSizePixel = 0
Converted["_HubCredits"].Position = UDim2.new(0.785926819, 0, 0.160157606, 0)
Converted["_HubCredits"].Size = UDim2.new(0.316320807, 0, 0.0585099049, 0)
Converted["_HubCredits"].Name = "HubCredits"
Converted["_HubCredits"].Parent = Converted["_Menu"]
Converted["_HubDesc"].Font = Enum.Font.GothamBold
Converted["_HubDesc"].Text = "yet another random hub menu"
Converted["_HubDesc"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubDesc"].TextSize = 14
Converted["_HubDesc"].TextWrapped = true
Converted["_HubDesc"].TextXAlignment = Enum.TextXAlignment.Right
Converted["_HubDesc"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_HubDesc"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubDesc"].BackgroundTransparency = 1
Converted["_HubDesc"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_HubDesc"].BorderSizePixel = 0
Converted["_HubDesc"].Position = UDim2.new(0.708829343, 0, 0.116141364, 0)
Converted["_HubDesc"].Size = UDim2.new(0.470515788, 0, 0.082417585, 0)
Converted["_HubDesc"].Name = "HubDesc"
Converted["_HubDesc"].Parent = Converted["_Menu"]
Converted["_HubName"].Font = Enum.Font.GothamBold
Converted["_HubName"].Text = "ThanhNeBro"
Converted["_HubName"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubName"].TextScaled = true
Converted["_HubName"].TextSize = 14
Converted["_HubName"].TextWrapped = true
Converted["_HubName"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_HubName"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_HubName"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HubName"].BackgroundTransparency = 1
Converted["_HubName"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_HubName"].BorderSizePixel = 0
Converted["_HubName"].Position = UDim2.new(0.186153606, 0, 0.112410031, 0)
Converted["_HubName"].Size = UDim2.new(0.259631485, 0, 0.0824175924, 0)
Converted["_HubName"].Name = "HubName"
Converted["_HubName"].Parent = Converted["_Menu"]
Converted["_CanvasGroup"].GroupTransparency = 1
Converted["_CanvasGroup"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_CanvasGroup"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_CanvasGroup"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_CanvasGroup"].BorderSizePixel = 0
Converted["_CanvasGroup"].Interactable = false
Converted["_CanvasGroup"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_CanvasGroup"].Size = UDim2.new(1, 0, 1, 0)
Converted["_CanvasGroup"].Visible = false
Converted["_CanvasGroup"].ZIndex = 999999998
Converted["_CanvasGroup"].Parent = Converted["_Menu"]
Converted["_UICorner15"].Parent = Converted["_CanvasGroup"]
Converted["_ImageLabel"].Image = "rbxassetid://17864987433"
-- Converted["_ImageLabel"].ImageContent = Content
Converted["_ImageLabel"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ImageLabel"].BorderSizePixel = 0
Converted["_ImageLabel"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_ImageLabel"].Size = UDim2.new(0, 50, 0, 50)
Converted["_ImageLabel"].Visible = false
Converted["_ImageLabel"].ZIndex = 3
Converted["_ImageLabel"].Parent = Converted["_CanvasGroup"]
Converted["_Opener"].Font = Enum.Font.SourceSans
Converted["_Opener"].Text = ""
Converted["_Opener"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Opener"].TextSize = 14
Converted["_Opener"].AutoButtonColor = false
Converted["_Opener"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Opener"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Opener"].BorderSizePixel = 0
Converted["_Opener"].Size = UDim2.new(1, 0, 1, 0)
Converted["_Opener"].Name = "Opener"
Converted["_Opener"].Parent = Converted["_CanvasGroup"]
Converted["_TextLabel3"].Font = Enum.Font.GothamBold
Converted["_TextLabel3"].Text = "Yet Another Random Hub Menu"
Converted["_TextLabel3"].TextColor3 = Color3.fromRGB(255, 69.00000348687172, 67.00000360608101)
Converted["_TextLabel3"].TextScaled = true
Converted["_TextLabel3"].TextSize = 14
Converted["_TextLabel3"].TextWrapped = true
Converted["_TextLabel3"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel3"].BackgroundTransparency = 1
Converted["_TextLabel3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel3"].BorderSizePixel = 0
Converted["_TextLabel3"].Position = UDim2.new(0.204081595, 0, 0.447761208, 0)
Converted["_TextLabel3"].Size = UDim2.new(0, 260, 0, 27)
Converted["_TextLabel3"].ZIndex = 3
Converted["_TextLabel3"].Parent = Converted["_CanvasGroup"]
Converted["_Area"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Area"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Area"].BackgroundTransparency = 1
Converted["_Area"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Area"].BorderSizePixel = 0
Converted["_Area"].ClipsDescendants = true
Converted["_Area"].Position = UDim2.new(0.659600496, 0, 0.60637325, 0)
Converted["_Area"].Size = UDim2.new(0.643815279, 0, 0.783582091, 0)
Converted["_Area"].Name = "Area"
Converted["_Area"].Parent = Converted["_Menu"]
Converted["_Area1"].AutomaticCanvasSize = Enum.AutomaticSize.Y
Converted["_Area1"].CanvasSize = UDim2.new(0, 0, 0, 0)
Converted["_Area1"].ScrollBarThickness = 0
Converted["_Area1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Area1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Area1"].BackgroundTransparency = 1
Converted["_Area1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Area1"].BorderSizePixel = 0
Converted["_Area1"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_Area1"].Selectable = false
Converted["_Area1"].Size = UDim2.new(1, 0, 1, 0)
Converted["_Area1"].Name = "Area"
Converted["_Area1"].Parent = Converted["_Area"]
Converted["_TextLabel4"].Font = Enum.Font.GothamBold
Converted["_TextLabel4"].Text = "hello 1.19"
Converted["_TextLabel4"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel4"].TextSize = 14
Converted["_TextLabel4"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel4"].BackgroundTransparency = 1
Converted["_TextLabel4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel4"].BorderSizePixel = 0
Converted["_TextLabel4"].Position = UDim2.new(0.4923051, 0, 0.46438089, 0)
Converted["_TextLabel4"].Size = UDim2.new(0, 200, 0, 50)
Converted["_TextLabel4"].Parent = Converted["_Area1"]
Converted["_TextLabel5"].Font = Enum.Font.GothamBold
Converted["_TextLabel5"].Text = "ThanhNeBro"
Converted["_TextLabel5"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel5"].TextScaled = true
Converted["_TextLabel5"].TextSize = 14
Converted["_TextLabel5"].TextWrapped = true
Converted["_TextLabel5"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel5"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel5"].BackgroundTransparency = 1
Converted["_TextLabel5"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel5"].BorderSizePixel = 0
Converted["_TextLabel5"].Position = UDim2.new(0.491272807, 0, 0.363785654, 0)
Converted["_TextLabel5"].Size = UDim2.new(0, 135, 0, 33)
Converted["_TextLabel5"].Parent = Converted["_Area1"]
Converted["_UIGradient7"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(68.00000354647636, 68.00000354647636, 68.00000354647636))
}
Converted["_UIGradient7"].Rotation = 68
Converted["_UIGradient7"].Parent = Converted["_Menu"]
Converted["_CloseArea"].Text = ""
Converted["_CloseArea"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_CloseArea"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_CloseArea"].BackgroundTransparency = 1
Converted["_CloseArea"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_CloseArea"].BorderSizePixel = 0
Converted["_CloseArea"].Position = UDim2.new(0.5, 0, 0.00295135868, 0)
Converted["_CloseArea"].Size = UDim2.new(0.326999992, 0, 0.184, 0)
Converted["_CloseArea"].Name = "CloseArea"
Converted["_CloseArea"].Parent = Converted["_Menu"]
Converted["_Frame"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Frame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Frame"].BackgroundTransparency = 0.6499999761581421
Converted["_Frame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame"].BorderSizePixel = 0
Converted["_Frame"].Position = UDim2.new(0.5, 0, 0.699999988, 0)
Converted["_Frame"].Size = UDim2.new(0.699999988, 0, 0.100000001, 0)
Converted["_Frame"].Parent = Converted["_CloseArea"]
Converted["_UICorner16"].CornerRadius = UDim.new(0, 9999)
Converted["_UICorner16"].Parent = Converted["_Frame"]
Converted["_TextLabel6"].Font = Enum.Font.Gotham
Converted["_TextLabel6"].Text = "Tap here to minimize."
Converted["_TextLabel6"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel6"].TextSize = 15
Converted["_TextLabel6"].TextWrapped = true
Converted["_TextLabel6"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel6"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel6"].BackgroundTransparency = 0.4000000059604645
Converted["_TextLabel6"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel6"].BorderSizePixel = 0
Converted["_TextLabel6"].Position = UDim2.new(0.5, 0, 0.680000007, 0)
Converted["_TextLabel6"].Size = UDim2.new(1.39999998, 0, 0.740999997, 0)
Converted["_TextLabel6"].Parent = Converted["_CloseArea"]
Converted["_UICorner17"].Parent = Converted["_TextLabel6"]
Converted["_AllowForSpring"].Name = "AllowForSpring"
Converted["_AllowForSpring"].Parent = Converted["_CloseArea"]
Converted["_themedColor3"].Value = "backgroundColorCSQ"
Converted["_themedColor3"].Name = "themedColor"
Converted["_themedColor3"].Parent = Converted["_Menu"]
Converted["_Toggle"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Toggle"].BackgroundTransparency = 1
Converted["_Toggle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Toggle"].BorderSizePixel = 0
Converted["_Toggle"].Size = UDim2.new(1, 0, 0, 35)
Converted["_Toggle"].Visible = false
Converted["_Toggle"].Name = "Toggle"
Converted["_Toggle"].Parent = Converted["_ThanhNeBro"]
Converted["_TextLabel7"].Font = Enum.Font.Unknown
Converted["_TextLabel7"].Text = "Loop walkspeed and FOV"
Converted["_TextLabel7"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel7"].TextScaled = true
Converted["_TextLabel7"].TextSize = 14
Converted["_TextLabel7"].TextWrapped = true
Converted["_TextLabel7"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextLabel7"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel7"].BackgroundTransparency = 1
Converted["_TextLabel7"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel7"].BorderSizePixel = 0
Converted["_TextLabel7"].Size = UDim2.new(0.699999988, 0, 1, 0)
Converted["_TextLabel7"].Parent = Converted["_Toggle"]
Converted["_UIListLayout4"].Padding = UDim.new(0, 25)
Converted["_UIListLayout4"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout4"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout4"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout4"].Parent = Converted["_Toggle"]
Converted["_Frame1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Frame1"].BackgroundTransparency = 1
Converted["_Frame1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame1"].BorderSizePixel = 0
Converted["_Frame1"].Size = UDim2.new(0.200000003, 0, 1, 0)
Converted["_Frame1"].Parent = Converted["_Toggle"]
Converted["_Frame2"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Frame2"].BackgroundColor3 = Color3.fromRGB(46.000001057982445, 46.000001057982445, 46.000001057982445)
Converted["_Frame2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame2"].BorderSizePixel = 0
Converted["_Frame2"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_Frame2"].Size = UDim2.new(0, 89, 1, 0)
Converted["_Frame2"].Parent = Converted["_Frame1"]
Converted["_UICorner18"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner18"].Parent = Converted["_Frame2"]
Converted["_Toggler"].Font = Enum.Font.SourceSans
Converted["_Toggler"].Text = ""
Converted["_Toggler"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Toggler"].TextSize = 14
Converted["_Toggler"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Toggler"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Toggler"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Toggler"].BorderSizePixel = 0
Converted["_Toggler"].Position = UDim2.new(0.300000012, 0, 0.5, 0)
Converted["_Toggler"].Size = UDim2.new(0.449438214, 0, 0.800000012, 0)
Converted["_Toggler"].Name = "Toggler"
Converted["_Toggler"].Parent = Converted["_Frame2"]
Converted["_UICorner19"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner19"].Parent = Converted["_Toggler"]
Converted["_ImageLabel1"].Image = "rbxassetid://10002373478"
Converted["_ImageLabel1"].ImageColor3 = Color3.fromRGB(255, 0, 4.000000236555934)
-- Converted["_ImageLabel1"].ImageContent = Content
Converted["_ImageLabel1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_ImageLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ImageLabel1"].BackgroundTransparency = 1
Converted["_ImageLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ImageLabel1"].BorderSizePixel = 0
Converted["_ImageLabel1"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_ImageLabel1"].Size = UDim2.new(0, 20, 0, 20)
Converted["_ImageLabel1"].Parent = Converted["_Toggler"]
Converted["_UIPadding12"].PaddingRight = UDim.new(0.0700000003, 0)
Converted["_UIPadding12"].Parent = Converted["_Toggle"]
Converted["_Modules"].Name = "Modules"
Converted["_Modules"].Parent = Converted["_ThanhNeBro"]
Converted["_NotificationSample"].AnchorPoint = Vector2.new(0.5, 0)
Converted["_NotificationSample"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NotificationSample"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_NotificationSample"].BorderSizePixel = 0
Converted["_NotificationSample"].ClipsDescendants = true
Converted["_NotificationSample"].Position = UDim2.new(0.5, 0, 0, 10)
Converted["_NotificationSample"].Size = UDim2.new(0, 400, 0, 50)
Converted["_NotificationSample"].Visible = false
Converted["_NotificationSample"].ZIndex = 5
Converted["_NotificationSample"].Name = "NotificationSample"
Converted["_NotificationSample"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner20"].CornerRadius = UDim.new(0, 10)
Converted["_UICorner20"].Parent = Converted["_NotificationSample"]
Converted["_UIStroke8"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke8"].Thickness = 1.600000023841858
Converted["_UIStroke8"].Parent = Converted["_NotificationSample"]
Converted["_UIGradient8"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(46.000001057982445, 46.000001057982445, 46.000001057982445)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(12.000000234693289, 12.000000234693289, 12.000000234693289))
}
Converted["_UIGradient8"].Parent = Converted["_NotificationSample"]
Converted["_ImageLabel2"].Image = "rbxassetid://11780939099"
-- Converted["_ImageLabel2"].ImageContent = Content
Converted["_ImageLabel2"].ScaleType = Enum.ScaleType.Fit
Converted["_ImageLabel2"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_ImageLabel2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ImageLabel2"].BackgroundTransparency = 1
Converted["_ImageLabel2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ImageLabel2"].BorderSizePixel = 0
Converted["_ImageLabel2"].Position = UDim2.new(0.100000001, 0, 0.5, 0)
Converted["_ImageLabel2"].Size = UDim2.new(0.0799999982, 0, 0.639999986, 0)
Converted["_ImageLabel2"].Parent = Converted["_NotificationSample"]
Converted["_TextLabel8"].Font = Enum.Font.Gotham
Converted["_TextLabel8"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel8"].TextScaled = true
Converted["_TextLabel8"].TextSize = 14
Converted["_TextLabel8"].TextWrapped = true
Converted["_TextLabel8"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextLabel8"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextLabel8"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel8"].BackgroundTransparency = 1
Converted["_TextLabel8"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel8"].BorderSizePixel = 0
Converted["_TextLabel8"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_TextLabel8"].Size = UDim2.new(0.600000024, 0, 0.600000024, 0)
Converted["_TextLabel8"].Parent = Converted["_NotificationSample"]
Converted["_UITextSizeConstraint"].MaxTextSize = 30
Converted["_UITextSizeConstraint"].Parent = Converted["_TextLabel8"]
Converted["_Close"].Image = "rbxassetid://10002373478"
-- Converted["_Close"].ImageContent = Content
Converted["_Close"].ScaleType = Enum.ScaleType.Fit
Converted["_Close"].Active = false
Converted["_Close"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Close"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Close"].BackgroundTransparency = 1
Converted["_Close"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Close"].BorderSizePixel = 0
Converted["_Close"].Position = UDim2.new(0.899999976, 0, 0.5, 0)
Converted["_Close"].Selectable = false
Converted["_Close"].Size = UDim2.new(0.0799999982, 0, 0.639999986, 0)
Converted["_Close"].Name = "Close"
Converted["_Close"].Parent = Converted["_NotificationSample"]
Converted["_UICorner21"].Parent = Converted["_Close"]
Converted["_UIStroke9"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke9"].Parent = Converted["_Close"]
Converted["_UIScale3"].Scale = 0.800000011920929
Converted["_UIScale3"].Parent = Converted["_NotificationSample"]
Converted["_themedColor4"].Value = "backgroundColorCSQ"
Converted["_themedColor4"].Name = "themedColor"
Converted["_themedColor4"].Parent = Converted["_NotificationSample"]
Converted["_Dialog"].AnchorPoint = Vector2.new(0.5, 1)
Converted["_Dialog"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Dialog"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Dialog"].BorderSizePixel = 0
Converted["_Dialog"].Position = UDim2.new(0.499000013, 0, 0.984000027, 0)
Converted["_Dialog"].Size = UDim2.new(0, 313, 0, 147)
Converted["_Dialog"].Visible = false
Converted["_Dialog"].ZIndex = 5
Converted["_Dialog"].Name = "Dialog"
Converted["_Dialog"].Parent = Converted["_ThanhNeBro"]
Converted["_UICorner22"].Parent = Converted["_Dialog"]
Converted["_UIGradient9"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(68.00000354647636, 68.00000354647636, 68.00000354647636))
}
Converted["_UIGradient9"].Rotation = -133
Converted["_UIGradient9"].Parent = Converted["_Dialog"]
Converted["_UIPadding13"].PaddingBottom = UDim.new(0, 15)
Converted["_UIPadding13"].PaddingLeft = UDim.new(0, 15)
Converted["_UIPadding13"].PaddingRight = UDim.new(0, 15)
Converted["_UIPadding13"].PaddingTop = UDim.new(0, 15)
Converted["_UIPadding13"].Parent = Converted["_Dialog"]
Converted["_UIStroke10"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke10"].Thickness = 2
Converted["_UIStroke10"].Parent = Converted["_Dialog"]
Converted["_UIGradient10"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(111.00000098347664, 111.00000098347664, 111.00000098347664)),
	ColorSequenceKeypoint.new(0.6401384472846985, Color3.fromRGB(114.23875719308853, 114.23875719308853, 114.23875719308853)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
Converted["_UIGradient10"].Rotation = -107
Converted["_UIGradient10"].Parent = Converted["_UIStroke10"]
Converted["_DialogTitle"].Font = Enum.Font.Unknown
Converted["_DialogTitle"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DialogTitle"].TextScaled = true
Converted["_DialogTitle"].TextSize = 14
Converted["_DialogTitle"].TextWrapped = true
Converted["_DialogTitle"].TextXAlignment = Enum.TextXAlignment.Right
Converted["_DialogTitle"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DialogTitle"].BackgroundTransparency = 1
Converted["_DialogTitle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DialogTitle"].BorderSizePixel = 0
Converted["_DialogTitle"].Size = UDim2.new(0.997416437, 0, 0.16459392, 0)
Converted["_DialogTitle"].Name = "DialogTitle"
Converted["_DialogTitle"].Parent = Converted["_Dialog"]
Converted["_UIListLayout5"].Padding = UDim.new(0, 3)
Converted["_UIListLayout5"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout5"].Parent = Converted["_Dialog"]
Converted["_DialogDesc"].Font = Enum.Font.Unknown
Converted["_DialogDesc"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DialogDesc"].TextScaled = true
Converted["_DialogDesc"].TextSize = 14
Converted["_DialogDesc"].TextWrapped = true
Converted["_DialogDesc"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_DialogDesc"].TextYAlignment = Enum.TextYAlignment.Top
Converted["_DialogDesc"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DialogDesc"].BackgroundTransparency = 1
Converted["_DialogDesc"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DialogDesc"].BorderSizePixel = 0
Converted["_DialogDesc"].Position = UDim2.new(0, 0, 0.187079012, 0)
Converted["_DialogDesc"].Size = UDim2.new(0.997416437, 0, 0.604575336, 0)
Converted["_DialogDesc"].Name = "DialogDesc"
Converted["_DialogDesc"].Parent = Converted["_Dialog"]
Converted["_UITextSizeConstraint1"].MaxTextSize = 20
Converted["_UITextSizeConstraint1"].MinTextSize = 5
Converted["_UITextSizeConstraint1"].Parent = Converted["_DialogDesc"]
Converted["_Options"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Options"].BackgroundTransparency = 1
Converted["_Options"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Options"].BorderSizePixel = 0
Converted["_Options"].Position = UDim2.new(0, 0, 0.82045126, 0)
Converted["_Options"].Size = UDim2.new(0.997436285, 0, 0.241758227, 0)
Converted["_Options"].Name = "Options"
Converted["_Options"].Parent = Converted["_Dialog"]
Converted["_UIListLayout6"].Padding = UDim.new(0, 10)
Converted["_UIListLayout6"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout6"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout6"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout6"].Parent = Converted["_Options"]
Converted["_OptionPlaceholder"].Font = Enum.Font.GothamBold
Converted["_OptionPlaceholder"].RichText = true
Converted["_OptionPlaceholder"].Text = "aaaaaaaaaaa"
Converted["_OptionPlaceholder"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_OptionPlaceholder"].TextScaled = true
Converted["_OptionPlaceholder"].TextSize = 100
Converted["_OptionPlaceholder"].TextWrapped = true
Converted["_OptionPlaceholder"].BackgroundColor3 = Color3.fromRGB(36.00000165402889, 36.00000165402889, 36.00000165402889)
Converted["_OptionPlaceholder"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_OptionPlaceholder"].BorderSizePixel = 0
Converted["_OptionPlaceholder"].Size = UDim2.new(0.532000005, -5, 1.00899994, 0)
Converted["_OptionPlaceholder"].Visible = false
Converted["_OptionPlaceholder"].Name = "OptionPlaceholder"
Converted["_OptionPlaceholder"].Parent = Converted["_Options"]
Converted["_UIPadding14"].PaddingBottom = UDim.new(0, 1)
Converted["_UIPadding14"].PaddingLeft = UDim.new(0, 15)
Converted["_UIPadding14"].PaddingRight = UDim.new(0, 15)
Converted["_UIPadding14"].PaddingTop = UDim.new(0, 1)
Converted["_UIPadding14"].Parent = Converted["_OptionPlaceholder"]
Converted["_UICorner23"].Parent = Converted["_OptionPlaceholder"]
Converted["_UIStroke11"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Converted["_UIStroke11"].Color = Color3.fromRGB(255, 255, 255)
Converted["_UIStroke11"].Thickness = 2
Converted["_UIStroke11"].Parent = Converted["_OptionPlaceholder"]
Converted["_UIGradient11"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(111.00000098347664, 111.00000098347664, 111.00000098347664)),
	ColorSequenceKeypoint.new(0.6401384472846985, Color3.fromRGB(114.23875719308853, 114.23875719308853, 114.23875719308853)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
Converted["_UIGradient11"].Rotation = -107
Converted["_UIGradient11"].Parent = Converted["_UIStroke11"]
Converted["_themedColor5"].Value = "primaryColor"
Converted["_themedColor5"].Name = "themedColor"
Converted["_themedColor5"].Parent = Converted["_OptionPlaceholder"]
Converted["_OnSelect"].Name = "OnSelect"
Converted["_OnSelect"].Parent = Converted["_Dialog"]
Converted["_UIScale4"].Parent = Converted["_Dialog"]
Converted["_themedColor6"].Value = "backgroundColorCSQ"
Converted["_themedColor6"].Name = "themedColor"
Converted["_themedColor6"].Parent = Converted["_Dialog"]
Converted["_Range"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Range"].BackgroundTransparency = 1
Converted["_Range"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Range"].BorderSizePixel = 0
Converted["_Range"].Size = UDim2.new(1, 0, 0, 35)
Converted["_Range"].Visible = false
Converted["_Range"].Name = "Range"
Converted["_Range"].Parent = Converted["_ThanhNeBro"]
Converted["_TextLabel9"].Font = Enum.Font.Unknown
Converted["_TextLabel9"].Text = "How many #### I give"
Converted["_TextLabel9"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel9"].TextScaled = true
Converted["_TextLabel9"].TextSize = 14
Converted["_TextLabel9"].TextWrapped = true
Converted["_TextLabel9"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextLabel9"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel9"].BackgroundTransparency = 1
Converted["_TextLabel9"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel9"].BorderSizePixel = 0
Converted["_TextLabel9"].Size = UDim2.new(0.699999988, 0, 1, 0)
Converted["_TextLabel9"].Parent = Converted["_Range"]
Converted["_UIListLayout7"].Padding = UDim.new(0, 15)
Converted["_UIListLayout7"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout7"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout7"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout7"].Parent = Converted["_Range"]
Converted["_UIPadding15"].PaddingLeft = UDim.new(0.0700000003, 0)
Converted["_UIPadding15"].PaddingRight = UDim.new(0.0700000003, 0)
Converted["_UIPadding15"].Parent = Converted["_Range"]
Converted["_Frame3"].BackgroundColor3 = Color3.fromRGB(31.000001952052116, 31.000001952052116, 31.000001952052116)
Converted["_Frame3"].BackgroundTransparency = 1
Converted["_Frame3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame3"].BorderSizePixel = 0
Converted["_Frame3"].Size = UDim2.new(0.400000006, 0, 1, 0)
Converted["_Frame3"].Parent = Converted["_Range"]
Converted["_UIPadding16"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding16"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding16"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding16"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding16"].Parent = Converted["_Frame3"]
Converted["_UICorner24"].Parent = Converted["_Frame3"]
Converted["_Frame4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Frame4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame4"].BorderSizePixel = 0
Converted["_Frame4"].Size = UDim2.new(1, 0, 0.200000003, 0)
Converted["_Frame4"].Parent = Converted["_Frame3"]
Converted["_UICorner25"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner25"].Parent = Converted["_Frame4"]
Converted["_TextButton1"].Font = Enum.Font.SourceSans
Converted["_TextButton1"].Text = ""
Converted["_TextButton1"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextButton1"].TextSize = 14
Converted["_TextButton1"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextButton1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextButton1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextButton1"].BorderSizePixel = 0
Converted["_TextButton1"].Position = UDim2.new(0, 0, 0.5, 0)
Converted["_TextButton1"].Size = UDim2.new(0, 20, 0, 20)
Converted["_TextButton1"].Parent = Converted["_Frame4"]
Converted["_UICorner26"].CornerRadius = UDim.new(1, 0)
Converted["_UICorner26"].Parent = Converted["_TextButton1"]
Converted["_FloatingButtonSetting"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_FloatingButtonSetting"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Converted["_FloatingButtonSetting"].BackgroundTransparency = 0.5
Converted["_FloatingButtonSetting"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_FloatingButtonSetting"].BorderSizePixel = 0
Converted["_FloatingButtonSetting"].Position = UDim2.new(0.5, 0, 0.5, 0)
Converted["_FloatingButtonSetting"].Size = UDim2.new(1, 0, 1, 0)
Converted["_FloatingButtonSetting"].Visible = false
Converted["_FloatingButtonSetting"].ZIndex = 10
Converted["_FloatingButtonSetting"].Name = "FloatingButtonSetting"
Converted["_FloatingButtonSetting"].Parent = Converted["_ThanhNeBro"]
Converted["_ControlBarContainer"].AnchorPoint = Vector2.new(0.5, 1)
Converted["_ControlBarContainer"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ControlBarContainer"].BackgroundTransparency = 1
Converted["_ControlBarContainer"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ControlBarContainer"].BorderSizePixel = 0
Converted["_ControlBarContainer"].Position = UDim2.new(0.5, 0, 1, -50)
Converted["_ControlBarContainer"].Size = UDim2.new(1, 0, 0, 40)
Converted["_ControlBarContainer"].Name = "ControlBarContainer"
Converted["_ControlBarContainer"].Parent = Converted["_FloatingButtonSetting"]
Converted["_ControlBar"].AnchorPoint = Vector2.new(0.5, 1)
Converted["_ControlBar"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ControlBar"].BackgroundTransparency = 1
Converted["_ControlBar"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ControlBar"].BorderSizePixel = 0
Converted["_ControlBar"].Position = UDim2.new(0.5, 0, 1, -30)
Converted["_ControlBar"].Size = UDim2.new(1, 0, 0, 40)
Converted["_ControlBar"].Name = "ControlBar"
Converted["_ControlBar"].Parent = Converted["_ControlBarContainer"]
Converted["_UIListLayout8"].Padding = UDim.new(0, 5)
Converted["_UIListLayout8"].FillDirection = Enum.FillDirection.Horizontal
Converted["_UIListLayout8"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout8"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout8"].Parent = Converted["_ControlBar"]
Converted["_Visibility"].Font = Enum.Font.Gotham
Converted["_Visibility"].Text = "Toggle visibility"
Converted["_Visibility"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Visibility"].TextScaled = true
Converted["_Visibility"].TextSize = 14
Converted["_Visibility"].TextWrapped = true
Converted["_Visibility"].BackgroundColor3 = Color3.fromRGB(46.000001057982445, 46.000001057982445, 46.000001057982445)
Converted["_Visibility"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Visibility"].BorderSizePixel = 0
Converted["_Visibility"].Size = UDim2.new(0, 200, 1, 0)
Converted["_Visibility"].Name = "Visibility"
Converted["_Visibility"].Parent = Converted["_ControlBar"]
Converted["_UICorner27"].CornerRadius = UDim.new(0, 16)
Converted["_UICorner27"].Parent = Converted["_Visibility"]
Converted["_UIPadding17"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding17"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding17"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding17"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding17"].Parent = Converted["_Visibility"]
Converted["_Event"].Parent = Converted["_Visibility"]
Converted["_themedColor7"].Value = "primaryColor"
Converted["_themedColor7"].Name = "themedColor"
Converted["_themedColor7"].Parent = Converted["_Visibility"]
Converted["_Lock1"].Font = Enum.Font.Gotham
Converted["_Lock1"].Text = "Toggle lock"
Converted["_Lock1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Lock1"].TextScaled = true
Converted["_Lock1"].TextSize = 14
Converted["_Lock1"].TextWrapped = true
Converted["_Lock1"].BackgroundColor3 = Color3.fromRGB(46.000001057982445, 46.000001057982445, 46.000001057982445)
Converted["_Lock1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Lock1"].BorderSizePixel = 0
Converted["_Lock1"].Size = UDim2.new(0, 200, 1, 0)
Converted["_Lock1"].Name = "Lock"
Converted["_Lock1"].Parent = Converted["_ControlBar"]
Converted["_UICorner28"].CornerRadius = UDim.new(0, 16)
Converted["_UICorner28"].Parent = Converted["_Lock1"]
Converted["_UIPadding18"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding18"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding18"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding18"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding18"].Parent = Converted["_Lock1"]
Converted["_Event1"].Parent = Converted["_Lock1"]
Converted["_themedColor8"].Value = "primaryColor"
Converted["_themedColor8"].Name = "themedColor"
Converted["_themedColor8"].Parent = Converted["_Lock1"]
Converted["_Exit"].Font = Enum.Font.GothamBold
Converted["_Exit"].Text = "X"
Converted["_Exit"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Exit"].TextScaled = true
Converted["_Exit"].TextSize = 14
Converted["_Exit"].TextWrapped = true
Converted["_Exit"].BackgroundColor3 = Color3.fromRGB(46.000001057982445, 0, 0)
Converted["_Exit"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Exit"].BorderSizePixel = 0
Converted["_Exit"].Size = UDim2.new(1, 0, 1, 0)
Converted["_Exit"].Name = "Exit"
Converted["_Exit"].Parent = Converted["_ControlBar"]
Converted["_UICorner29"].CornerRadius = UDim.new(0, 16)
Converted["_UICorner29"].Parent = Converted["_Exit"]
Converted["_UIPadding19"].PaddingBottom = UDim.new(0, 7)
Converted["_UIPadding19"].PaddingLeft = UDim.new(0, 7)
Converted["_UIPadding19"].PaddingRight = UDim.new(0, 7)
Converted["_UIPadding19"].PaddingTop = UDim.new(0, 7)
Converted["_UIPadding19"].Parent = Converted["_Exit"]
Converted["_UIAspectRatioConstraint"].Parent = Converted["_Exit"]
Converted["_themedColor9"].Value = "secondaryColor"
Converted["_themedColor9"].Name = "themedColor"
Converted["_themedColor9"].Parent = Converted["_Exit"]
Converted["_UIListLayout9"].Padding = UDim.new(0, 5)
Converted["_UIListLayout9"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout9"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout9"].Parent = Converted["_ControlBarContainer"]
Converted["_Tip"].Font = Enum.Font.GothamBold
Converted["_Tip"].Text = "Drag the button around to resize!"
Converted["_Tip"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Tip"].TextScaled = true
Converted["_Tip"].TextSize = 14
Converted["_Tip"].TextWrapped = true
Converted["_Tip"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Tip"].BackgroundTransparency = 1
Converted["_Tip"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Tip"].BorderSizePixel = 0
Converted["_Tip"].Size = UDim2.new(1, 0, 0, 10)
Converted["_Tip"].Name = "Tip"
Converted["_Tip"].Parent = Converted["_ControlBarContainer"]
Converted["_UIStroke12"].Parent = Converted["_Tip"]
Converted["_UIScale5"].Parent = Converted["_ControlBarContainer"]
-- Fake Module Scripts:
local fake_module_scripts = {}
do -- Fake Module: StarterGui.ThanhNeBro.FUNCTIONS
    local script = Instance.new("ModuleScript")
    script.Name = "FUNCTIONS"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local FUNCTIONSmodule = {}
		
		local ts = game:GetService("TweenService")
		local https = game:GetService("HttpService")
		
		
			
			
		function DraggableObjectf()
			local function a(b,c)local d=c.AbsoluteSize;local e=c.AbsolutePosition;local f=b.X.Scale*d.X+b.X.Offset;local g=b.Y.Scale*d.Y+b.Y.Offset;local h=math.clamp(f,0,d.X)local i=math.clamp(g,0,d.Y)local j=UDim2.new(b.X.Scale,h-b.X.Scale*d.X,b.Y.Scale,i-b.Y.Scale*d.Y)return j end;local k=UDim2.new;local l=game:GetService("UserInputService")local m=game:GetService("TweenService")local n={}n.__index=n;function n.new(o,p,q,r)local self={}self.Object=o;self.ToMove=p;self.Smooth=q;self.CallbackOnly=r;self.CanBeDragged=false;self.DragStarted=nil;self.DragEnded=nil;self.Dragged=nil;self.Dragging=false;self.LastPosition=nil;self.Velocity=Vector2.new(0,0)setmetatable(self,n)return self end;function n:Enable()self.CanBeDragged=true;local s=self.Object;local t=self.ToMove;local u=nil;local v=nil;local w=nil;local x=false;local function y(z)local A=z.Position-v;local B=UDim2.new(w.X.Scale,w.X.Offset+A.X,w.Y.Scale,w.Y.Offset+A.Y)if self.CallbackOnly then else B=a(B,self.Object:FindFirstAncestorWhichIsA("ScreenGui"))if(self.Smooth==nil or self.Smooth==true)and self.Smooth~=false then m:Create(t and t or s,TweenInfo.new(0.5,Enum.EasingStyle.Cubic,Enum.EasingDirection.Out),{Position=B}):Play()else local C=t and t or s;C.Position=B end end;return B end;self.InputBegan=s.InputBegan:Connect(function(z)if z.UserInputType==Enum.UserInputType.MouseButton1 or z.UserInputType==Enum.UserInputType.Touch then x=true;local D;D=z.Changed:Connect(function()if z.UserInputState==Enum.UserInputState.End and(self.Dragging or x)then self.Dragging=false;D:Disconnect()if self.DragEnded and not x then self.DragEnded(self.Velocity)end;x=false end end)end end)self.InputChanged=s.InputChanged:Connect(function(z)if z.UserInputType==Enum.UserInputType.MouseMovement or z.UserInputType==Enum.UserInputType.Touch then u=z end end)self.InputChanged2=l.InputChanged:Connect(function(z)if s.Parent==nil then self:Disable()return end;if x then x=false;if self.DragStarted then self.DragStarted()end;self.Dragging=true;v=z.Position;if t then w=t.Position else w=s.Position end;self.LastPosition=z.Position end;if z==u and self.Dragging then local B=y(z)self.Velocity=z.Position-self.LastPosition;self.LastPosition=z.Position;if self.Dragged then self.Dragged(B)end end end)end;function n:Disable()self.CanBeDragged=false;self.InputBegan:Disconnect()self.InputChanged:Disconnect()self.InputChanged2:Disconnect()if self.Dragging then self.Dragging=false;if self.DragEnded then self.DragEnded(self.Velocity)end end end;return n	
		end
		local DraggableObject = DraggableObjectf()
		
		function ClickAndHoldf()
			local a={}a.__index=a;local b=game:GetService("UserInputService")function a.new(c,d)local self=setmetatable({},a)self.textButton=c;self.holdTime=d or 0.5;self.holdTask=nil;self.initialPosition=nil;self.Holded=Instance.new("BindableEvent")local function e(f,g)return math.sqrt((g.X-f.X)^2+(g.Y-f.Y)^2)end;self.textButton.MouseButton1Down:Connect(function(h,i)self.initialPosition=Vector2.new(h,i)self.holdTask=task.spawn(function()task.wait(self.holdTime)if self.holdTask then self.Holded:Fire()end end)end)b.InputChanged:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseMovement or j.UserInputType==Enum.UserInputType.Touch then if self.holdTask and self.initialPosition then local k=j.Position;local l=e(self.initialPosition,k)if l>10 then coroutine.close(self.holdTask)self.holdTask=nil end end end end)b.InputEnded:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseButton1 or j.UserInputType==Enum.UserInputType.Touch then if self.holdTask then coroutine.close(self.holdTask)self.holdTask=nil end;self.initialPosition=nil end end)return self end;return a
		end
		local ClickAndHold = ClickAndHoldf()
		function PointSavef()
			local _=false local function d(...)if _ then print("[PointSave DEBUG]:",...)end end _G._FOLDERS=_G._FOLDERS or{} _G._FILES=_G._FILES or{} isfolder=isfolder or function(_)d("Checking if folder exists:",_) return _G._FOLDERS[_]~=nil end makefolder=makefolder or function(_)d("Creating folder:",_) _G._FOLDERS[_]={} return _G._FOLDERS[_]end isfile=isfile or function(_)d("Checking if file exists:",_) return _G._FILES[_]~=nil end writefile=writefile or function(a,_)d("Writing file:",a,"with content:",_) _G._FILES[a]=_ return _G._FILES[a]end readfile=readfile or function(_)d("Reading file:",_) return _G._FILES[_]end delfile=delfile or function(_)d("Deleting file:",_) _G._FILES[_]=nil end listfiles=listfiles or function(c)d("Listing files in folder:",c) local _=_G._FOLDERS[c] if _ then local a={} for b,_ in pairs(_G._FILES)do if b:sub(1,#c+1)==c.."/"then local _=b:sub(#c+2) d("Found file in folder:",_) table.insert(a,_)end end return a end d("Folder does not exist:",c) return{}end local b={} b.__index=b local c="PointSaveData" local function _()if not isfolder(c)then d("Base folder not found, creating:",c) makefolder(c)else d("Base folder already exists:",c)end end function b.new(a)d("Initializing new PointSave instance for namespace:",a) _() local _=setmetatable({},b) _.namespace=a _.folderPath=c.."/"..a if not isfolder(_.folderPath)then d("Namespace folder does not exist, creating:",_.folderPath) makefolder(_.folderPath)else d("Namespace folder already exists:",_.folderPath)end return _ end function b:set(b,a)local _=self.folderPath.."/"..b..".txt" d("Setting value for key:",b,"->",a) writefile(_,tostring(a))end function b:get(a)local _=self.folderPath.."/"..a..".txt" d("Getting value for key:",a) if isfile(_)then local _=readfile(_) d("Found value for key:",a,"->",_) return _ end d("Key not found:",a) return nil end function b:remove(a)local _=self.folderPath.."/"..a..".txt" d("Removing key:",a) if isfile(_)then delfile(_) d("Removed file for key:",a)else d("File for key does not exist:",a)end end function b:clear()d("Clearing all keys in namespace:",self.namespace) local _=listfiles(self.folderPath) for _,_ in ipairs(_)do local _=self.folderPath.."/".._ if isfile(_)then d("Deleting file:",_) delfile(_)end end end function b.deleteNamespace(a)local b=c.."/"..a d("Deleting namespace:",a) local _=listfiles(b) for _,_ in ipairs(_)do local _=b.."/".._ if isfile(_)then d("Deleting file from namespace:",_) delfile(_)end end _G._FOLDERS[b]=nil d("Deleted folder for namespace:",a)end function b.listNamespaces()d("Listing all namespaces") _() local b={} for a,_ in pairs(_G._FOLDERS)do if a:sub(1,#c+1)==c.."/"then local _=a:sub(#c+2) d("Found namespace:",_) table.insert(b,_)end end return b end return b
		end
		local PointSave = PointSavef()
		
		
		
		local ThanhNeBroPointSave = PointSave.new("ThanhNeBro")
		
		local States = {}
		local toggleStates = {}
		local AREA = script.Parent.Menu.Area.Area
		local AREACONTAINER = script.Parent.Menu.Area
		
		local AREAModuleSelected = nil
		
		local fBSF = script.Parent.FloatingButtonSetting
		
		local function calculateWidth(n)
			if n <= 3 then
				return 30
			else
				local base = 30
				local additional = math.floor((n - 3) / 3) * 30
				return base + additional
			end
		end
		local function udim2Serializer(value)
			if typeof(value) == "UDim2" then
				return string.format("%g,%g,%g,%g", value.X.Scale, value.X.Offset, value.Y.Scale, value.Y.Offset)
			elseif typeof(value) == "string" then
				local xScale, xOffset, yScale, yOffset = string.match(value, "([^,]+),([^,]+),([^,]+),([^,]+)")
				assert(xScale and xOffset and yScale and yOffset, "Invalid UDim2 string format")
				return UDim2.new(tonumber(xScale), tonumber(xOffset), tonumber(yScale), tonumber(yOffset))
			end
		end
		
		FUNCTIONSmodule.theme = {
			font = Enum.Font.Montserrat,
			textColor = Color3.fromRGB(255, 255, 255),
			accentColor = Color3.fromRGB(197, 0, 0),
			primaryColor = Color3.fromRGB(22, 22, 22),
			secondaryColor = Color3.fromRGB(12, 12, 12),
		
			backgroundColorCSQ = ColorSequence.new(Color3.fromRGB(36, 36, 36), Color3.fromRGB(68, 68, 68)),	
			strokeColorCSQ = ColorSequence.new{
				ColorSequenceKeypoint.new(0, Color3.fromRGB(53.00000064074993, 53.00000064074993, 53.00000064074993)),
				ColorSequenceKeypoint.new(0.15224914252758026, Color3.fromRGB(50.69031357765198, 50.69031357765198, 50.69031357765198)),
				ColorSequenceKeypoint.new(0.4723183512687683, Color3.fromRGB(255, 0, 4.000000236555934)),
				ColorSequenceKeypoint.new(0.7577854990959167, Color3.fromRGB(50.13314567506313, 50.13314567506313, 50.13314567506313)),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155))
			},
		}
		
		function FUNCTIONSmodule.getTheme()
			if getgenv then
				return getgenv().ThanhNeBro_THEME or FUNCTIONSmodule.theme
			else
				return FUNCTIONSmodule.theme
			end
		end
		function FUNCTIONSmodule.setTheme(t)
			FUNCTIONSmodule.theme = t
			if getgenv then getgenv().ThanhNeBro_THEME = t end
		end
		
		local floatingButtonObjects = {}
		local floatingButtonInvisibility = {}
		local floatingButtonDraggers = {}
		local floatingButtonKeybinds = {}
		local floatingButtonConnections = {}
		
		local fBSFResizeDragger = nil
		getgenv().fBSFButton = nil
		getgenv().fBSFRealButton = nil
		getgenv().fBSF_ButtonDragger = nil
		
		local selected = Instance.new("ObjectValue")
		
		selected.Parent = script.Parent
		selected.Name = "Selected"
		
		local icons = {
			info = "rbxassetid://11780939099",
			x = "rbxassetid://10002373478",
			cross = "rbxassetid://10002373478",
			check = "rbxassetid://11604833061"
		}
		
		
		incomingNotif = false
		
		function FUNCTIONSmodule.to_base64(data)
			local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
			return ((data:gsub('.', function(x) 
				local r,b='',x:byte()
				for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
				return r;
			end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
				if (#x < 6) then return '' end
				local c=0
				for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
				return b:sub(c+1,c+1)
			end)..({ '', '==', '=' })[#data%3+1])
		end
		
		function FUNCTIONSmodule.from_base64(data)
			local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
			data = string.gsub(data, '[^'..b..'=]', '')
			return (data:gsub('.', function(x)
				if (x == '=') then return '' end
				local r,f='',(b:find(x)-1)
				for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
				return r;
			end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
				if (#x ~= 8) then return '' end
				local c=0
				for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
				return string.char(c)
			end))
		end
		
		function FUNCTIONSmodule.notification(s, color, icon)
			incomingNotif = true
			task.spawn(function()
				s = tostring(s)
				local notif = script.Parent.NotificationSample:Clone()
				notif.Parent = script.Parent
				notif.Position = UDim2.fromScale(0.5, -0.1)
				notif.UIScale.Scale = 0.5
				notif.Visible = true
				notif.Name = s
		
				if color and typeof(icon) == "Color3" then
					notif.UIStroke.Color = color
					notif.ImageLabel.ImageColor3 = color
				end
		
				if icon then
					if icons[icon] then notif.ImageLabel.Image = icons[icon] else
						if tonumber(icon) then
							notif.ImageLabel.Image = "rbxassetid://" .. tonumber(icon)
						else
							notif.ImageLabel.Image = icon
						end
					end
				end
		
				notif.TextLabel.MaxVisibleGraphemes = 0
				notif.TextLabel.Text = s
				notif:SetAttribute("close", false)
				ts:Create(notif, TweenInfo.new(0.7, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Position = UDim2.new(0.5, 0, 0, 10)
				}):Play()
		
				ts:Create(notif.UIScale, TweenInfo.new(0.8, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Scale = 0.8
				}):Play()
		
				ts:Create(notif.TextLabel, TweenInfo.new(0.7, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					MaxVisibleGraphemes = #s
				}):Play()
		
				notif.Close.MouseButton1Click:Connect(function()
					notif:SetAttribute("close", true)
				end)
		
				task.wait()
				incomingNotif = false
				local lastclock = os.clock()
				repeat task.wait() until os.clock()-lastclock > 5 or incomingNotif or notif:GetAttribute("close")
		
				local finish = ts:Create(notif, TweenInfo.new(0.3, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Position = UDim2.fromScale(0.5, -0.1)
				})
				finish:Play()
				finish.Completed:Connect(function()
					notif:Destroy()
				end)
			end)
		end
		
		local lockMode = false
		function FUNCTIONSmodule.lockModeSet(s)
			lockMode = s
		end
		
		function FUNCTIONSmodule.closeFinetuneFB()
			for _, b in ipairs(script.Parent.FloatingButtons:GetChildren()) do
				if b:FindFirstChildWhichIsA("UIScale") then
					local buttonScale = b:FindFirstChildWhichIsA("UIScale")
					ts:Create(buttonScale, TweenInfo.new(0.3), {
						Scale = 1
					}):Play()
				end
			end
		
			local buttonScale = getgenv().fBSFButton:FindFirstChildWhichIsA("UIScale") or Instance.new("UIScale", getgenv().fBSFButton)
			ts:Create(buttonScale, TweenInfo.new(0.3), {
				Scale = 0
			}):Play()
			ts:Create(fBSF, TweenInfo.new(0.3), {
				BackgroundTransparency = 1
			}):Play()
			local done = ts:Create(fBSF.ControlBarContainer.UIScale, TweenInfo.new(0.3), {
				Scale = 0
			})
			done:Play()
			done.Completed:Wait()
			for _, b in ipairs(script.Parent.FloatingButtons:GetChildren()) do
				if b:FindFirstChildWhichIsA("UIScale") then
					b:FindFirstChildWhichIsA("UIScale"):Destroy()
				end
			end
			getgenv().fBSFButton:Destroy()
			fBSF.Visible = false
		
			getgenv().fBSFButton = nil
			getgenv().fBSFRealButton = nil
			getgenv().fBSF_ButtonDragger = nil
		end
		
		function FUNCTIONSmodule.finetuneFloatingButton(button: TextButton, dragger)
			getgenv().fBSFRealButton = button
			for _, b in ipairs(script.Parent.FloatingButtons:GetChildren()) do
				if b:IsA("TextButton") then
					local buttonScale = Instance.new("UIScale", b)
					ts:Create(buttonScale, TweenInfo.new(0.3), {
						Scale = 0
					}):Play()
				end
			end
		
			local finetuningButton = button:Clone()
			getgenv().fBSFButton = finetuningButton
			finetuningButton.Parent = fBSF
			finetuningButton.Name = "fBSFButton"
			finetuningButton.AnchorPoint = Vector2.new(0, 0)
			finetuningButton.Position = UDim2.fromOffset(button.AbsolutePosition.X, button.AbsolutePosition.Y + game:GetService("GuiService"):GetGuiInset().Y)
		
			fBSFResizeDragger = DraggableObject.new(finetuningButton, nil, nil, true)
		
			getgenv().fBSF_ButtonDragger = dragger
			local startingSize = finetuningButton.Size
			fBSFResizeDragger.DragStarted = function()
				startingSize = finetuningButton.Size
			end
			fBSFResizeDragger.Dragged = function(pos)
				local newSize =  UDim2.fromOffset(math.clamp(startingSize.X.Offset + pos.X.Offset, 30, 500), math.clamp(startingSize.Y.Offset + pos.Y.Offset, 10, 350))
				ts:Create(finetuningButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
					Size = newSize
				}):Play()
				button.Size = newSize
				ThanhNeBroPointSave:set(string.gsub(button.Name, "_", ""), udim2Serializer(button.Position) .. "|" .. udim2Serializer(button.Size) .. "|" .. tostring(button.Visible) .. "|" .. tostring(dragger.CanBeDragged))
			end
			fBSFResizeDragger:Enable()
		
			fBSF.ControlBarContainer.UIScale.Scale = 0
			fBSF.BackgroundTransparency = 1
			fBSF.Visible = true
			ts:Create(fBSF, TweenInfo.new(0.3), {
				BackgroundTransparency = 0.5
			}):Play()
			ts:Create(fBSF.ControlBarContainer.UIScale, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
				Scale = 1
			}):Play()
			ts:Create(finetuningButton, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				AnchorPoint = Vector2.new(0.5, 0.5),
				Position = UDim2.fromScale(0.5, 0.5)
			}):Play()
		
			if finetuningButton.BackgroundTransparency == 1 then
				finetuningButton.Lock.TextTransparency = 0
				ts:Create(finetuningButton, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					BackgroundTransparency = 0.5,
					TextTransparency = 0.5
				}):Play()
				ts:Create(finetuningButton.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					Transparency = 0.5
				}):Play()
			end
		
			
		end
		
		function FUNCTIONSmodule.ftToggleLock()
			if getgenv().fBSF_ButtonDragger.CanBeDragged then
				getgenv().fBSF_ButtonDragger:Disable()
				getgenv().fBSFRealButton.Lock.UIScale.Scale = 1
				ts:Create(getgenv().fBSFButton.Lock.UIScale, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
					Scale = 1
				}):Play()
			else
				getgenv().fBSF_ButtonDragger:Enable()
				getgenv().fBSFRealButton.Lock.UIScale.Scale = 0
				ts:Create(getgenv().fBSFButton.Lock.UIScale, TweenInfo.new(0.3), {
					Scale = 0
				}):Play()
			end
			ThanhNeBroPointSave:set(string.gsub(getgenv().fBSFRealButton.Name, "_", ""), udim2Serializer(getgenv().fBSFRealButton.Position) .. "|" .. udim2Serializer(getgenv().fBSFRealButton.Size) .. "|" .. tostring(getgenv().fBSFRealButton.Visible) .. "|" .. tostring(getgenv().fBSF_ButtonDragger.CanBeDragged))
		end
		
		function FUNCTIONSmodule.ftToggleVisibility()
			if getgenv().fBSFButton.BackgroundTransparency == 0 then
				getgenv().fBSFRealButton.BackgroundTransparency = 1
				getgenv().fBSFRealButton.TextTransparency = 1
				getgenv().fBSFRealButton.UIStroke.Transparency = 1
				getgenv().fBSFRealButton.Lock.TextTransparency = 1
		
				ts:Create(getgenv().fBSFButton, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					BackgroundTransparency = 0.5,
					TextTransparency = 0.5
				}):Play()
				ts:Create(getgenv().fBSFButton.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					Transparency = 0.5
				}):Play()
			else
				getgenv().fBSFRealButton.BackgroundTransparency = 0
				getgenv().fBSFRealButton.TextTransparency = 0
				getgenv().fBSFRealButton.UIStroke.Transparency = 0
				getgenv().fBSFRealButton.Lock.TextTransparency = 0
		
				ts:Create(getgenv().fBSFButton, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					BackgroundTransparency = 0,
					TextTransparency = 0
				}):Play()
				ts:Create(getgenv().fBSFButton.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
					Transparency = 0
				}):Play()
			end
			ThanhNeBroPointSave:set(string.gsub(getgenv().fBSFRealButton.Name, "_", ""), udim2Serializer(getgenv().fBSFRealButton.Position) .. "|" .. udim2Serializer(getgenv().fBSFRealButton.Size) .. "|" .. tostring(getgenv().fBSFRealButton.Visible) .. "|" .. tostring(getgenv().fBSF_ButtonDragger.CanBeDragged))
		end
		
		function FUNCTIONSmodule.createFloatingButton(item,button,buttonname,fromload)
			if not getgenv().ThanhNeBro.FloatingButtons:FindFirstChild(string.gsub(buttonname, "_", "")) then
				
				
				if not fromload then
					ThanhNeBroPointSave:set(string.gsub(buttonname, "_", ""), udim2Serializer(UDim2.fromOffset(125, 90)) .. "|" .. udim2Serializer(UDim2.fromOffset(200,50)) .. "|true|true")
				end
		
				local newFloatingButton = getgenv().ThanhNeBro.FloatingButton:Clone()
				newFloatingButton.Parent = getgenv().ThanhNeBro.FloatingButtons
				
				newFloatingButton.Name = string.gsub(buttonname, "_", "")
				newFloatingButton.Text = string.gsub(buttonname, "_", " ")
				
				newFloatingButton.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
				local themedColor = Instance.new("StringValue", newFloatingButton)
				themedColor.Name = "themedColor"
				themedColor.Value = "primaryColor"
				newFloatingButton.Visible = true
		
				table.insert(floatingButtonObjects, newFloatingButton)
				local floatingButtonObjectSelf = floatingButtonObjects[#floatingButtonObjects]
		
				newFloatingButton.MouseButton1Click:Connect(function()
					if typeof(item["Args"][2]) == "function" then
						item["Args"][2](button)
					else
						item["Args"][2][buttonname](button)
					end
				end)
				
				local shouldBeDraggable = true
				if not fromload then
					newFloatingButton.Position = UDim2.fromOffset(-125, 90)
				elseif ThanhNeBroPointSave:get(string.gsub(buttonname, "_", "")) then
					local data = ThanhNeBroPointSave:get(string.gsub(buttonname, "_", "")):split("|")
					newFloatingButton.Position = udim2Serializer(data[1])
					ts:Create(newFloatingButton, TweenInfo.new(2, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
						Size = udim2Serializer(data[2])
					}):Play()
					newFloatingButton.Visible = (data[3] == "true")
					if data[4] == "false" then
						newFloatingButton.Lock.UIScale.Scale = 1
						shouldBeDraggable = false
					end
				end
		
				task.spawn(function()
					if not fromload then
						ts:Create(newFloatingButton, TweenInfo.new(2, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
							Size = UDim2.fromOffset(200, 50)
						}):Play()
						ts:Create(newFloatingButton, TweenInfo.new(0.7, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
							Position = UDim2.fromOffset(125, 90)
						}):Play()
					end
				end)
		
				floatingButtonDraggers[string.gsub(buttonname, "_", "")] = DraggableObject.new(newFloatingButton)
				if shouldBeDraggable then
					floatingButtonDraggers[string.gsub(buttonname, "_", "")]:Enable()
				end
				floatingButtonDraggers[string.gsub(buttonname, "_", "")].Dragged = function(newPos)
					ThanhNeBroPointSave:set(string.gsub(buttonname, "_", ""), udim2Serializer(newPos) .. "|" .. udim2Serializer(newFloatingButton.Size) .. "|" .. tostring(newFloatingButton.Visible) .. "|" .. tostring(floatingButtonDraggers[string.gsub(buttonname, "_", "")].CanBeDragged))
				end
		
				local holder = ClickAndHold.new(newFloatingButton)
				holder.Holded.Event:Connect(function()
					if floatingButtonDraggers[string.gsub(buttonname, "_", "")].Dragging then return end
					FUNCTIONSmodule.finetuneFloatingButton(floatingButtonObjectSelf, floatingButtonDraggers[string.gsub(buttonname, "_", "")])
				end)
		
				local UserInputService = game:GetService("UserInputService")
				newFloatingButton.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton2 then
						FUNCTIONSmodule.notification("Press a key to bind " .. string.gsub(buttonname, "_", "") .. " to...")
						local keytobind
						local result
						repeat
							result = UserInputService.InputBegan:Wait()
							if result.UserInputType == Enum.UserInputType.Keyboard then keytobind = result.KeyCode end
						until keytobind
		
						FUNCTIONSmodule.notification(string.gsub(buttonname, "_", "") .. " binded to key " .. result.KeyCode.Name .. "!")
						task.wait(0.1) floatingButtonKeybinds[string.gsub(buttonname, "_", "")] = keytobind	
					end
				end)
		
				local uis = game:GetService("UserInputService")
				if uis.KeyboardEnabled and uis.MouseEnabled then
					floatingButtonConnections[string.gsub(buttonname, "_", "")] = uis.InputBegan:Connect(function(inp, processed)
						if processed then return end
						if inp.KeyCode == floatingButtonKeybinds[string.gsub(buttonname, "_", "")] then
							if typeof(item["Args"][2]) == "function" then
								item["Args"][2](button)
							else
								item["Args"][2][buttonname](button)
							end
						end
					end)
				end
		
			else
				floatingButtonKeybinds[string.gsub(buttonname, "_", "")] = nil
				if floatingButtonConnections[string.gsub(buttonname, "_", "")] then
					floatingButtonConnections[string.gsub(buttonname, "_", "")]:Disconnect()
				end
				ThanhNeBroPointSave:remove(string.gsub(buttonname, "_", ""))
				task.spawn(function()
					local buttontodestroy = getgenv().ThanhNeBro.FloatingButtons:FindFirstChild(string.gsub(buttonname, "_", ""))
					local btdtween = ts:Create(buttontodestroy, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
						Size = UDim2.new(0,0,0,0)
					})
					btdtween:Play()
					btdtween.Completed:Wait()
					buttontodestroy:Destroy()
				end)
			end
		end
		
		function FUNCTIONSmodule.loadFloatingButtons()
			repeat task.wait() until getgenv().Modules
			for _, module in ipairs(getgenv().Modules) do
				for _, item in ipairs(module) do
					if item["Type"] == "Button" then
						local key = string.gsub(item["Args"][1], "_", "")
						local saved = ThanhNeBroPointSave:get(key)
						if saved then
							FUNCTIONSmodule.createFloatingButton(item, Instance.new("TextButton"), item["Args"][1], true)
						end
					end
				end
			end
		end
		function FUNCTIONSmodule.loader(module)
			--local unloadtween = ts:Create(AREA, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
			--	Position = UDim2.fromScale(1.55, 0.606)
			--})
		
			--unloadtween:Play()
			--unloadtween.Completed:Wait()
		
		
			local AREAframes = {}
			for _, i in ipairs(AREA:GetChildren()) do if i:IsA("Frame") then table.insert(AREAframes, i) end end
			if #AREAframes > 5 then
				ts:Create(AREA, TweenInfo.new(0.1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), { CanvasPosition = Vector2.zero }):Play()
				for i=1, math.min(7, #AREAframes) do
					task.wait(0.01)
					ts:Create(AREAframes[i]:GetChildren()[1], TweenInfo.new(0.2, Enum.EasingStyle.Cubic, Enum.EasingDirection.In), {
						Position = UDim2.fromScale(2, 0)
					}):Play()
				end
				task.wait(0.2)
			end
		
			AREA:ClearAllChildren()
			
			
			local listlayout = Instance.new("UIListLayout")
			listlayout.Parent = AREA
			listlayout.Padding = UDim.new(0, 60)
			listlayout.FillDirection = Enum.FillDirection.Vertical
			listlayout.SortOrder = Enum.SortOrder.LayoutOrder
			listlayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			
			
			for _, item in ipairs(module) do
				local frameHolder = Instance.new("Frame")
				frameHolder.Name = "Holder"
				frameHolder.BackgroundTransparency = 1
				frameHolder.Size = UDim2.new(1,0,0,0)
				frameHolder.AutomaticSize = Enum.AutomaticSize.XY
				frameHolder.Parent = AREA
		
				if item["Type"] == "Text" then
		
					local text = Instance.new("TextLabel")
					text.Parent = frameHolder
		
					text.BackgroundTransparency = 1
					text.Text = item["Args"][1]
					text.TextScaled = true
					text.TextColor3 = FUNCTIONSmodule.getTheme().textColor
					text.Font = Enum.Font.GothamBold
					text.Size = UDim2.new(1,0,0,20)
					text.TextXAlignment = item["Args"][2] == "center" and Enum.TextXAlignment.Center or Enum.TextXAlignment.Left
					text.RichText = true
		
		
				elseif item["Type"] == "Button" then
		
					local button = Instance.new("TextButton")
					button.Parent = frameHolder
		
					button.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
					button.Text = item["Args"][1]
					button.TextScaled = true
					button.TextColor3 = FUNCTIONSmodule.getTheme().textColor
					button.Font = Enum.Font.GothamBold
					button.Size = UDim2.new(1,0,0,25)
		
					local padding = Instance.new("UIPadding")
					padding.Parent = button
		
					padding.PaddingTop = UDim.new(0, 5)
					padding.PaddingBottom = UDim.new(0, 5)
		
		
					Instance.new("UICorner", button)
		
					local hold = false
		
					button.MouseButton1Click:Connect(function()
						item["Args"][2](button)
					end)
					
					local cah = ClickAndHold.new(button, 0.5)
					cah.Holded.Event:Connect(function()
						FUNCTIONSmodule.createFloatingButton(item, button, item["Args"][1])
					end)
		
					
				elseif item["Type"] == "ButtonGrid" then
		
		
		
		
					local frame = Instance.new("Frame")
					frame.Parent = frameHolder
					frame.Size = UDim2.new(1, 0, 0, 0)
					frame.AutomaticSize = Enum.AutomaticSize.Y
					frame.BackgroundTransparency = 1
		
		
					local gridlayout = Instance.new("UIGridLayout")
					gridlayout.Parent = frame
					gridlayout.CellSize = UDim2.new((1 / item["Args"][1]) - 0.03, 0, 0, 30) -- remove 0.03 because if not it would wrap on its own lol
		
					--print("------")
					--print(item["Args"][2])
					--print(States)
					for buttonname, args in item["Args"][2] do
						local button = Instance.new("TextButton")
						button.Parent = frame
		
						--print(args)
						button.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
						if States[buttonname .. module.Name] then
							button.BackgroundColor3 = FUNCTIONSmodule.getTheme().accentColor
						end
						button.Text = string.gsub(buttonname, "_", " ")
						button.TextScaled = true
						button.TextColor3 = FUNCTIONSmodule.getTheme().textColor
						button.Font = Enum.Font.GothamBold
		
						local padding = Instance.new("UIPadding")
						padding.Parent = button
		
						padding.PaddingTop = UDim.new(0, 5)
						padding.PaddingBottom = UDim.new(0, 5)
		
						Instance.new("UICorner", button)
		
						button.MouseButton1Click:Connect(function()
							if item["Toggleable"] then
								item["Args"][2][buttonname](button)
								--print(States[buttonname .. module.Name])
								if States[buttonname .. module.Name] then
									ts:Create(button, TweenInfo.new(0.3), {
										BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
									}):Play()
									States[buttonname .. module.Name] = false
								else
									ts:Create(button, TweenInfo.new(0.3), {
										BackgroundColor3 = FUNCTIONSmodule.getTheme().accentColor
									}):Play()
									States[buttonname .. module.Name] = true
								end
							else
								item["Args"][2][buttonname](button)
							end
						end)
		
						local cah = ClickAndHold.new(button, 0.5)
						cah.Holded.Event:Connect(function()
							FUNCTIONSmodule.createFloatingButton(item, button, buttonname)
						end)
					end
		
		
				elseif item["Type"] == "Input" then
					local cloneinput = getgenv().ThanhNeBro.TextBoxPlaceholder:Clone()
					cloneinput.Parent = frameHolder
					cloneinput.Visible = true
					
					cloneinput.TextBox.PlaceholderText = item["Args"][1]
					cloneinput.TextButton.Text = item["Args"][2]
					
					cloneinput.TextBox.TextColor3 = FUNCTIONSmodule.getTheme().textColor
					cloneinput.TextButton.TextColor3 = FUNCTIONSmodule.getTheme().textColor
					
					cloneinput.TextBox.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
					cloneinput.TextButton.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
		
		
					cloneinput.TextButton.MouseButton1Click:Connect(function()
						item["Args"][3](cloneinput.TextButton, cloneinput.TextBox.Text)
					end)
				elseif item["Type"] == "Toggle" then
					local clonetoggle = getgenv().ThanhNeBro.Toggle:Clone()
					clonetoggle.Parent = frameHolder
					clonetoggle.Visible = true
		
					clonetoggle.TextLabel.Text = item["Args"][1]
					clonetoggle.TextLabel.TextColor3 = FUNCTIONSmodule.getTheme().textColor
		
					local clonetoggletoggler = clonetoggle.Frame.Frame.Toggler
					
					clonetoggletoggler.ImageLabel.ImageColor3 = FUNCTIONSmodule.getTheme().accentColor
					clonetoggletoggler.Parent.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
					if toggleStates[item["Args"][1] .. module.Name] then
						clonetoggletoggler.Position = UDim2.fromScale(0.7, 0.5)
						clonetoggletoggler.ImageLabel.Image = "rbxassetid://5959696880"
					end
		
					clonetoggletoggler.MouseButton1Click:Connect(function()
						if toggleStates[item["Args"][1] .. module.Name] then
							toggleStates[item["Args"][1] .. module.Name] = false
							ts:Create(clonetoggletoggler, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
								Position = UDim2.fromScale(0.3, 0.5)
							}):Play()
							clonetoggletoggler.ImageLabel.Image = "rbxassetid://10002373478"
						else
							toggleStates[item["Args"][1] .. module.Name] = true
							ts:Create(clonetoggletoggler, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
								Position = UDim2.fromScale(0.7, 0.5)
							}):Play()
							clonetoggletoggler.ImageLabel.Image = "rbxassetid://5959696880"
						end
						item["Args"][2](clonetoggletoggler, toggleStates[item["Args"][1] .. module.Name])
					end)
				elseif item["Type"] == "Dropdown" then	
					local clonedropdown = getgenv().ThanhNeBro.Dropdown:Clone()
					local dropdownFrame = getgenv().ThanhNeBro.DropdownFrameSample
					clonedropdown.Parent = frameHolder
					clonedropdown.Visible = true
		
					clonedropdown.TextLabel.Text = item["Args"][1]
					clonedropdown.Frame.MouseButton1Click:Connect(function()
						for _, v in ipairs(dropdownFrame.ScrollingFrame:GetChildren()) do if v:IsA("TextButton") and v.Name ~= "Sample" then v:Destroy() end end
						dropdownFrame.Position = UDim2.fromOffset(20, 80)
						dropdownFrame.Size = UDim2.new(0,108,0,0)
						dropdownFrame.Visible = true
						ts:Create(dropdownFrame, TweenInfo.new(0.6, Enum.EasingStyle.Circular, Enum.EasingDirection.Out), {
							Size = UDim2.fromOffset(108, 239)
						}):Play()
		
						local items
						if typeof(item["Args"][2]) == "function" then
							items = item["Args"][2]()
						else
							items = item["Args"][2]
						end
		
						for _, v in ipairs(items) do
							local clonedropdownbutton = dropdownFrame.ScrollingFrame.Sample:Clone()
							clonedropdownbutton.Parent = dropdownFrame.ScrollingFrame
							clonedropdownbutton.Name = v
							clonedropdownbutton.Visible = true
							clonedropdownbutton.Text = v
							clonedropdownbutton.MouseButton1Click:Connect(function()
								--dropdownFrame.Visible = false
								clonedropdown.Frame.Text = v
								item["Args"][3](clonedropdown.Frame, v)
								local after = ts:Create(dropdownFrame, TweenInfo.new(0.1, Enum.EasingStyle.Circular, Enum.EasingDirection.Out), {
									Size = UDim2.fromOffset(108, 0)
								})
								after:Play()
								after.Completed:Once(function()
									dropdownFrame.Visible = false
								end)
							end)
						end
					end)
				end
		
		
			end
			
			--if AREACONTAINER:FindFirstChildWhichIsA("UIListLayout") then
			--	AREACONTAINER:FindFirstChildWhichIsA("UIListLayout"):Destroy()
			--end -- idk where this instance coming from sorry
			AREACONTAINER.Area.Position = UDim2.fromScale(0.5, 1.2)
			ts:Create(AREACONTAINER.Area, TweenInfo.new(0.6, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
				Position = UDim2.fromScale(0.5, 0.5)
			}):Play()
			
			ts:Create(listlayout, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
				Padding = UDim.new(0, 10)
			}):Play()
		end
		
		
		
		function FUNCTIONSmodule.refreshlist()
		
			for _, v in ipairs(script.Parent.Menu.List.ScrollingFrame:GetChildren()) do
				if v:IsA("TextButton") then
					v:Destroy()
				end
			end
		
			local dense = {}
			for _, module in pairs(getgenv().Modules) do
				if module then
					table.insert(dense, module)
				end
			end
			
			if not AREAModuleSelected then
				AREAModuleSelected = dense[1]
			end
			
		
			for i, module in ipairs(dense) do
				local success, err = pcall(function()
		
					local listbutton = getgenv().ThanhNeBro.ListButton:Clone()
					listbutton.Parent           = script.Parent.Menu.List.ScrollingFrame
					listbutton.Name             = module.Name
					listbutton.Text             = module.Name
					listbutton.BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor
					listbutton.Visible          = true
					
					local themedColor = Instance.new("StringValue", listbutton)
					themedColor.Name = "themedColor"
					themedColor.Value = "primaryColor"
		
					listbutton.MouseButton1Click:Connect(function()
		
						if selected.Value then
							ts:Create(selected.Value, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
								BackgroundColor3 = FUNCTIONSmodule.getTheme().primaryColor,
								TextColor3       = FUNCTIONSmodule.getTheme().textColor,
							}):Play()
						end
		
						selected.Value = listbutton
						AREAModuleSelected = module
						ts:Create(selected.Value, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
							BackgroundColor3 = Color3.fromRGB(255,255,255),
							TextColor3       = Color3.fromRGB(0,0,0),
						}):Play()
		
						FUNCTIONSmodule.loader(module)
					end)
		
					listbutton.MouseButton1Down:Connect(function()
						ts:Create(listbutton, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
							Size = UDim2.new(1, -10, 0, 40)
						}):Play()
					end)
		
					listbutton.MouseButton1Up:Connect(function()
						ts:Create(listbutton, TweenInfo.new(1.2, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
							Size = UDim2.new(1, 0, 0, 50),
						}):Play()
					end)
		
					listbutton.MouseLeave:Connect(function()
						ts:Create(listbutton, TweenInfo.new(1.2, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
							Size = UDim2.new(1, 0, 0, 50),
						}):Play()
					end)
				end)
		
				if not success then
					warn(("[ThanhNeBro] Error loading module %q: %s"):format(module.Name, err))
				end
			end
		end
		
		function FUNCTIONSmodule.refresharea()
			FUNCTIONSmodule.loader(AREAModuleSelected)
		end
		
		function FUNCTIONSmodule.dialog(title, description, buttons)
			local dialog = script.Parent.Dialog
			dialog.DialogTitle.Text = title
			dialog.DialogDesc.Text = description
		
			for _,v in ipairs(dialog.Options:GetChildren()) do
				if v:IsA("TextButton") and v.Name ~= "OptionPlaceholder" then v:Destroy() end
			end
			for _, button in buttons do
				local newButton = dialog.Options.OptionPlaceholder:Clone()
		
				newButton.Visible = true
				newButton.Name = button
				newButton.Text = button
				newButton.Parent = dialog.Options
				newButton.MouseButton1Click:Connect(function()
					newButton.Parent.Parent.OnSelect:Fire(newButton.Name)
				end)
			end
		
			ts:Create(dialog, TweenInfo.new(1.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),{
				Size = UDim2.fromOffset(313, 147)
			}):Play()
		
			ts:Create(dialog.UIScale, TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out),{
				Scale = 1
			}):Play()
		end
		
		function FUNCTIONSmodule.closedialog()
			local dialog = script.Parent.Dialog
			ts:Create(dialog, TweenInfo.new(1.1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),{
				Size = UDim2.fromOffset(0, 147)
			}):Play()
		
			ts:Create(dialog.UIScale, TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out),{
				Scale = 0
			}):Play()
		end
		
		function FUNCTIONSmodule.waitfordialog()
			return script.Parent.Dialog.OnSelect.Event:Wait()
		end
		
		
		getgenv().ThanhNeBroFUNCTIONS = FUNCTIONSmodule
		return FUNCTIONSmodule
		
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.DraggableObject
    local script = Instance.new("ModuleScript")
    script.Name = "DraggableObject"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local function a(b,c)local d=c.AbsoluteSize;local e=c.AbsolutePosition;local f=b.X.Scale*d.X+b.X.Offset;local g=b.Y.Scale*d.Y+b.Y.Offset;local h=math.clamp(f,0,d.X)local i=math.clamp(g,0,d.Y)local j=UDim2.new(b.X.Scale,h-b.X.Scale*d.X,b.Y.Scale,i-b.Y.Scale*d.Y)return j end;local k=UDim2.new;local l=game:GetService("UserInputService")local m=game:GetService("TweenService")local n={}n.__index=n;function n.new(o,p,q,r)local self={}self.Object=o;self.ToMove=p;self.Smooth=q;self.CallbackOnly=r;self.DragStarted=nil;self.DragEnded=nil;self.Dragged=nil;self.Dragging=false;self.LastPosition=nil;self.Velocity=Vector2.new(0,0)setmetatable(self,n)return self end;function n:Enable()local s=self.Object;local t=self.ToMove;local u=nil;local v=nil;local w=nil;local x=false;local function y(z)local A=z.Position-v;local B=UDim2.new(w.X.Scale,w.X.Offset+A.X,w.Y.Scale,w.Y.Offset+A.Y)if self.CallbackOnly then else B=a(B,self.Object:FindFirstAncestorWhichIsA("ScreenGui"))if(self.Smooth==nil or self.Smooth==true)and self.Smooth~=false then m:Create(t and t or s,TweenInfo.new(0.5,Enum.EasingStyle.Cubic,Enum.EasingDirection.Out),{Position=B}):Play()else local C=t and t or s;C.Position=B end end;return B end;self.InputBegan=s.InputBegan:Connect(function(z)if z.UserInputType==Enum.UserInputType.MouseButton1 or z.UserInputType==Enum.UserInputType.Touch then x=true;local D;D=z.Changed:Connect(function()if z.UserInputState==Enum.UserInputState.End and(self.Dragging or x)then self.Dragging=false;D:Disconnect()if self.DragEnded and not x then self.DragEnded(self.Velocity)end;x=false end end)end end)self.InputChanged=s.InputChanged:Connect(function(z)if z.UserInputType==Enum.UserInputType.MouseMovement or z.UserInputType==Enum.UserInputType.Touch then u=z end end)self.InputChanged2=l.InputChanged:Connect(function(z)if s.Parent==nil then self:Disable()return end;if x then x=false;if self.DragStarted then self.DragStarted()end;self.Dragging=true;v=z.Position;if t then w=t.Position else w=s.Position end;self.LastPosition=z.Position end;if z==u and self.Dragging then local B=y(z)self.Velocity=z.Position-self.LastPosition;self.LastPosition=z.Position;if self.Dragged then self.Dragged(B)end end end)end;function n:Disable()self.InputBegan:Disconnect()self.InputChanged:Disconnect()self.InputChanged2:Disconnect()if self.Dragging then self.Dragging=false;if self.DragEnded then self.DragEnded(self.Velocity)end end end;return n
		
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.ClickAndHold
    local script = Instance.new("ModuleScript")
    script.Name = "ClickAndHold"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local a={}a.__index=a;local b=game:GetService("UserInputService")function a.new(c,d)local self=setmetatable({},a)self.textButton=c;self.holdTime=d or 0.5;self.holdTask=nil;self.initialPosition=nil;self.Holded=Instance.new("BindableEvent")local function e(f,g)return math.sqrt((g.X-f.X)^2+(g.Y-f.Y)^2)end;self.textButton.MouseButton1Down:Connect(function(h,i)self.initialPosition=Vector2.new(h,i)self.holdTask=task.spawn(function()task.wait(self.holdTime)if self.holdTask then self.Holded:Fire()end end)end)b.InputChanged:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseMovement or j.UserInputType==Enum.UserInputType.Touch then if self.holdTask and self.initialPosition then local k=j.Position;local l=e(self.initialPosition,k)if l>10 then coroutine.close(self.holdTask)self.holdTask=nil end end end end)b.InputEnded:Connect(function(j)if j.UserInputType==Enum.UserInputType.MouseButton1 or j.UserInputType==Enum.UserInputType.Touch then if self.holdTask then coroutine.close(self.holdTask)self.holdTask=nil end;self.initialPosition=nil end end)return self end;return a
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.Spring
    local script = Instance.new("ModuleScript")
    script.Name = "Spring"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local a=game:GetService("RunService")local b={}function OverDamping(c,d,e,f,g,h)local i=d*d-4*e/c;local j=-1/2;local k=d+math.sqrt(i)local l=d-math.sqrt(i)local m,n=j*k,j*l;local o,p=(n*f-g)/(n-m),(m*f-g)/(m-n)local q=h/e;return{Offset=function(r)return o*math.exp(m*r)+p*math.exp(n*r)+q end,Velocity=function(r)return o*m*math.exp(m*r)+p*n*math.exp(n*r)end,Acceleration=function(r)return o*m*m*math.exp(m*r)+p*n*n*math.exp(n*r)end}end;function CriticalDamping(c,d,e,f,g,h)local s=-d/2;local o,p=f,g-s*f;local q=h/e;return{Offset=function(r)return math.exp(s*r)*(o+p*r)+q end,Velocity=function(r)return math.exp(s*r)*(p*s*r+o*s+p)end,Acceleration=function(r)return s*math.exp(s*r)*(p*s*r+o*s+2*p)end}end;function UnderDamping(c,d,e,f,g,h)local i=d*d-4*e/c;local s=-d/2;local t=math.sqrt(-i)local o,p=f,(g-s*f)/t;local q=h/e;return{Offset=function(r)return math.exp(s*r)*(o*math.cos(t*r)+p*math.sin(t*r))+q end,Velocity=function(r)return-math.exp(s*r)*((o*t-p*s)*math.sin(t*r)+(-p*t-o*s)*math.cos(t*r))end,Acceleration=function(r)return-math.exp(s*r)*((p*t*t+2*o*s*t-p*s*s)*math.sin(t*r)+(o*t*t-2*p*s*t-o*s*s)*math.cos(t*r))end}end;function b.F(u)local f,g,h=u.InitialOffset,u.InitialVelocity,u.ExternalForce;local c,d,e=u.Mass,u.Damping,u.Constant;local i=d*d-4*e/c;if i>0 then return OverDamping(c,d,e,f,g,h)elseif i==0 then return CriticalDamping(c,d,e,f,g,h)else return UnderDamping(c,d,e,f,g,h)end end;local v=b;local w=math.sqrt;local x=math.pi;local y={OFFSET="Offset",VELOCITY="Velocity",ACCELERATION="Acceleration",GOAL="Goal",FREQUENCY="Frequency"}local z=[[.]]local A=[[.]]local u={}local B={}B.__index=function(self,C)local D={[y.OFFSET]=function()local r=tick()-self.StartTick;local E=self.F;local F=E.Offset(r)return F end,[y.VELOCITY]=function()local r=tick()-self.StartTick;local E=self.F;local G=E.Velocity(r)return G end,[y.ACCELERATION]=function()local r=tick()-self.StartTick;local E=self.F;local H=E.Acceleration(r)return H end,[y.GOAL]=function()local I=self.ExternalForce;local J=self.Constant;return I/J end,[y.FREQUENCY]=function()local K=self.Damping;local L=self.Constant;local M=self.Mass;return w(-K*K+4*L/M)/(2*x)end}local N=rawget(self,C)if N~=nil then return N end;local O=D[C]if O~=nil then return O()end;return B[C]end;B.__tostring=function(self)local r=tick()-self.StartTick;local E=self.F;local P=self.AdvancedObjectStringEnabled;local Q;if P==false then Q=string.format(z,E.Offset(r),E.Velocity(r),E.Acceleration(r))elseif P==true then Q=string.format(A,self.Mass,self.Damping,self.Constant,self.Goal,self.Frequency,self.InitialOffset,self.InitialVelocity,self.ExternalForce,self.StartTick,E.Offset(r),E.Velocity(r),E.Acceleration(r))end;return Q end;function u.new(M,K,L,f,g,R)assert(M>0,"Mass for spring system cannot be less than or equal to 0")assert(L>0,"Spring constant for spring system cannot be less than or equal to 0")f=f or 0;g=g or 0;R=R or 0;local S=R*L;local T={Mass=M,Damping=K,Constant=L,InitialOffset=f-R,InitialVelocity=g,ExternalForce=S,AdvancedObjectStringEnabled=false,StartTick=0}setmetatable(T,B)T:Reset()return T end;function u.fromFrequency(M,K,U,f,g,R)assert(M>0,"Mass for spring system cannot be less than or equal to 0")assert(U>0,"Spring frequency for spring system cannot be less than or equal to 0")local L=0.25*M*(4*x*x*U*U+K*K)f=f or 0;g=g or 0;R=R or 0;local S=R*L;local T={Mass=M,Damping=K,Constant=L,InitialOffset=f-R,InitialVelocity=g,ExternalForce=S,AdvancedObjectStringEnabled=false,StartTick=0}setmetatable(T,B)T:Reset()return T end;function B:Reset()self.F=v.F(self)self.StartTick=tick()end;function B:SetExternalForce(V)self.ExternalForce=V;self.InitialOffset=self.Offset-V/self.Constant;self.InitialVelocity=self.Velocity;self:Reset()end;function B:SetGoal(R)self.ExternalForce=R*self.Constant;self.InitialOffset=self.Offset-R;self.InitialVelocity=self.Velocity;self:Reset()end;function B:SetFrequency(U)self.Constant=0.25*self.Mass*(4*x*x*U*U+self.Damping*self.Damping)self.InitialOffset=self.Offset;self.InitialVelocity=self.Velocity;self:Reset()end;function B:SnapToCriticalDamping()self.Damping=2*w(self.Constant/self.Mass)self.InitialOffset=self.Offset;self.InitialVelocity=self.Velocity;self:Reset()end;function B:SetOffset(F,W)self.InitialOffset=F-self.Goal;self.InitialVelocity=W and 0 or self.Velocity;self:Reset()end;function B:AddOffset(F)self.InitialOffset=self.Offset+F;self.InitialVelocity=self.Velocity;self:Reset()end;function B:SetVelocity(G)self.InitialOffset=self.Offset;self.InitialVelocity=G;self:Reset()end;function B:AddVelocity(G)self.InitialOffset=self.Offset;self.InitialVelocity=self.Velocity+G;self:Reset()end;function B:Print()local X=tostring(self)print(X)end;return u
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.ESPIndicator
    local script = Instance.new("ModuleScript")
    script.Name = "ESPIndicator"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local e={} e.__index=e local a=game:GetService("RunService") local _=game:GetService("Players") local b=game:GetService("HttpService") local l=game:GetService("TweenService") e.Groups={} e.TargetIndex={} e.Defaults={AccentColor=Color3.new(1,1,0),HighlightFillTransparency=0.7,HighlightOutlineTransparency=0,HighlightDepthMode=Enum.HighlightDepthMode.AlwaysOnTop,ArrowShow=false,ArrowEdgePadding=50,ArrowMinDistance=0,ArrowSize=UDim2.new(0,30,0,30),ArrowImage="rbxassetid://97136202386756",ArrowShowDistanceText=true,ArrowDistanceFont=Enum.Font.Montserrat,ArrowDistanceTextSize=18,ShowLabel=false,LabelText="Target",LabelMaxDistance=99999,LabelOffset=Vector3.new(0,2,0),Parent=game:GetService("CoreGui")} function e.new(b)local c=setmetatable({},e) c.Settings={} for a,_ in pairs(e.Defaults)do c.Settings[a]=(b and b[a]~=nil)and b[a]or _ end local _=c.Settings.Parent or _.LocalPlayer:WaitForChild("PlayerGui") c.ScreenGui=Instance.new("ScreenGui") c.ScreenGui.Name="ESPIndicators" c.ScreenGui.IgnoreGuiInset=true c.ScreenGui.ResetOnSpawn=false c.ScreenGui.Parent=_ c.ArrowTemplate=Instance.new("ImageLabel") c.ArrowTemplate.Name="ArrowTemplate" c.ArrowTemplate.Size=c.Settings.ArrowSize c.ArrowTemplate.AnchorPoint=Vector2.new(0.5,0.5) c.ArrowTemplate.BackgroundTransparency=1 c.ArrowTemplate.Image=c.Settings.ArrowImage c.ArrowTemplate.ImageColor3=c.Settings.AccentColor c.ArrowTemplate.Visible=false c.ArrowTemplate.Parent=c.ScreenGui c.Scaler=Instance.new("UIScale") c.Scaler.Name="Scaler" c.Scaler.Scale=0 c.Scaler.Parent=c.ArrowTemplate c.Indicators={} c._updateConn=a.RenderStepped:Connect(function()c:_update()end) c._cleanupConn=a.Heartbeat:Connect(function()c:_cleanupOrphanedArrows() c:_cleanupOrphanedHighlights() c:_cleanupOrphanedLabels()end) return c end function e:AddGroup(_)local a=e.Groups[_] if not a then a={enabled=true,properties={},targets={}} e.Groups[_]=a end return a end function e:GetGroup(_)return e.Groups[_]end function e:RemoveGroup(b)local _=e.Groups[b] if not _ then return false end for _,_ in ipairs(_.targets)do local c=e.TargetIndex[_] if c then for _,a in ipairs(c)do if a==b then table.remove(c,_) break end end if#c==0 then e.TargetIndex[_]=nil end end if not e.TargetIndex[_]then self:Remove(_)end end e.Groups[b]=nil return true end function e:ClearAllGroups()for a,_ in pairs(e.Groups)do self:RemoveGroup(a)end end function e:ToggleGroup(_,a)local b=e.Groups[_] if not b then return end b.enabled=(a~=nil)and a or not b.enabled for _,_ in ipairs(b.targets)do local _=self.Indicators[_] if _ then if _.Highlight then _.Highlight.Enabled=b.enabled end if _.Arrow then _.Arrow.Visible=b.enabled and self.Settings.ArrowShow end if _.Label then _.Label.Enabled=b.enabled end end end return b.enabled end function e:SetGroupProperty(_,a,b)local _=self:AddGroup(_) _.properties[a]=b for _,_ in ipairs(_.targets)do local _=self.Indicators[_] if _ then if a=="AccentColor"then if _.Highlight then _.Highlight.FillColor=b _.Highlight.OutlineColor=b end if _.Arrow then _.Arrow.ImageColor3=b end if _.DistanceLabel then _.DistanceLabel.TextColor3=b end if _.Label and _.Label:FindFirstChild("TextLabel")then _.Label.TextLabel.TextColor3=b end end end end end function e:Add(a,g)assert(a,"ESPIndicator:Add requires a non-nil target") g=g or{} local d=Instance.new("Highlight") d.Name="Highlight_"..b:GenerateGUID(false) d.Adornee=a d.FillTransparency=g.HighlightFillTransparency or self.Settings.HighlightFillTransparency d.FillColor=g.AccentColor or self.Settings.AccentColor d.OutlineColor=g.AccentColor or self.Settings.AccentColor d.OutlineTransparency=g.HighlightOutlineTransparency or self.Settings.HighlightOutlineTransparency d.DepthMode=g.HighlightDepthMode or self.Settings.HighlightDepthMode d.Parent=self.ScreenGui local c,_,e if(g.ArrowShow or self.Settings.ArrowShow)then c=self.ArrowTemplate:Clone() c.Name="Arrow_"..b:GenerateGUID(false) c.ImageColor3=g.AccentColor or self.Settings.AccentColor c.Visible=true c.Parent=self.ScreenGui _=c:FindFirstChild("Scaler") if(g.ArrowShowDistanceText or self.Settings.ArrowShowDistanceText)then e=Instance.new("TextLabel") e.Name="DistanceLabel" e.AnchorPoint=Vector2.new(0.5,0) e.BackgroundTransparency=1 e.Font=g.ArrowDistanceFont or self.Settings.ArrowDistanceFont e.TextSize=g.ArrowDistanceTextSize or self.Settings.ArrowDistanceTextSize e.TextColor3=g.AccentColor or self.Settings.AccentColor e.Parent=c end end local f if(g.ShowLabel or self.Settings.ShowLabel)then f=Instance.new("BillboardGui") f.Name="Label_"..b:GenerateGUID(false) f.AlwaysOnTop=true f.MaxDistance=self.Settings.LabelMaxDistance f.Size=UDim2.new(0,70,0,70) f.StudsOffset=self.Settings.LabelOffset f.Adornee=a f.Parent=self.ScreenGui local _=Instance.new("TextLabel") _.Name="TextLabel" _.Size=UDim2.new(1,0,1,0) _.AnchorPoint=Vector2.new(0.5,0.5) _.Position=UDim2.new(0.5,0,0.5,0) _.BackgroundTransparency=1 _.Font=Enum.Font.SourceSansBold _.TextScaled=true _.TextWrapped=true _.TextSize=14 _.TextColor3=g.AccentColor or self.Settings.AccentColor _.Text=g.LabelText or self.Settings.LabelText _.Parent=f Instance.new("UIStroke",_)end self.Indicators[a]={Highlight=d,Arrow=c,Scaler=_,DistanceLabel=e,Label=f,Options=g} local _=g.GroupName or self.Settings.GroupName if _ then self:AddToGroup(a,_)end end function e:Remove(c)local _=self.Indicators[c] if not _ then return end if _.Highlight then _.Highlight.Adornee=nil _.Highlight:Destroy()end if _.Arrow then _.Arrow:Destroy()end if _.Label then _.Label:Destroy()end local _=e.TargetIndex[c] if _ then for _,_ in ipairs(_)do local b=e.Groups[_] if b then for a,_ in ipairs(b.targets)do if _==c then table.remove(b.targets,a) break end end end end e.TargetIndex[c]=nil end self.Indicators[c]=nil end function e:AddToGroup(c,b)local _=self:AddGroup(b) if not table.find(_.targets,c)then table.insert(_.targets,c)end local a=e.TargetIndex[c] if not a then a={} e.TargetIndex[c]=a end if not table.find(a,b)then table.insert(a,b)end for a,_ in pairs(_.properties)do self:SetGroupProperty(b,a,_)end if not _.enabled then local _=self.Indicators[c] if _ and _.Highlight then _.Highlight.Enabled=false end end return true end function e:RemoveFromGroup(d,b)local c=e.Groups[b] if not c then return false end if table.find(c.targets,d)then for _,a in ipairs(c.targets)do if a==d then table.remove(c.targets,_) break end end else return false end local c=e.TargetIndex[d] if c then for a,_ in ipairs(c)do if _==b then table.remove(c,a) break end end if#c==0 then e.TargetIndex[d]=nil end end return true end function e:GetGroupTargets(_)local _=e.Groups[_] return _ and _.targets or{}end function e:GetTargetGroups(_)return e.TargetIndex[_]or{}end function e:_cleanupOrphanedHighlights()for _,_ in ipairs(self.ScreenGui:GetChildren())do if _:IsA("Highlight")and not table.find(self:_allHighlights(),_)then _.Adornee=nil _:Destroy()end end end function e:_allHighlights()local a={} for _,_ in pairs(self.Indicators)do if _.Highlight then table.insert(a,_.Highlight)end end return a end function e:_cleanupOrphanedArrows()for _,_ in ipairs(self.ScreenGui:GetChildren())do if _:IsA("ImageLabel")and _.Name:match("^Arrow_")then if not table.find(self:_allArrows(),_)then _:Destroy()end end end end function e:_allArrows()local a={} for _,_ in pairs(self.Indicators)do if _.Arrow then table.insert(a,_.Arrow)end end return a end function e:_cleanupOrphanedLabels()for _,_ in ipairs(self.ScreenGui:GetChildren())do if _:IsA("BillboardGui")and _.Name:match("^Label_")then if not table.find(self:_allLabels(),_)then _.Adornee=nil _:Destroy()end end end end function e:_allLabels()local a={} for _,_ in pairs(self.Indicators)do if _.Label then table.insert(a,_.Label)end end return a end function e:_update()local a=workspace.CurrentCamera local _=a.ViewportSize local f,i=_.X,_.Y for _,p in pairs(self.Indicators)do local j=p.Options local h=p.Arrow local k=p.Scaler if((not h)or(not k))and self.Settings.ArrowShow then self:Remove(_) continue end if not h then continue end local n if _:IsA("Model")then n=(_.PrimaryPart and _.PrimaryPart.Position)or _:GetModelCFrame().p elseif _:IsA("BasePart")then n=_.Position else continue end local m,e=a:WorldToViewportPoint(n) local c=(a.CFrame.p-n).Magnitude local _=j.ArrowMinDistance or self.Settings.ArrowMinDistance local o=j.ArrowEdgePadding or self.Settings.ArrowEdgePadding if e and c>_ then l:Create(k,TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Scale=0}):Play()else l:Create(k,TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Scale=1}):Play() local d,g=f-o*2,i-o*2 local b=a.CFrame local _=math.sqrt((d/2)^2+(g/2)^2) local a=n-b.Position local a=b:VectorToObjectSpace(a) local n=Vector2.new(a.X,a.Y).Unit local a=math.clamp(m.X,o,f-o) local b=math.clamp(m.Y,o,i-o) if a==m.X and b==m.Y and e then l:Create(k,TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Scale=0}):Play()else local _=n*_ local b if math.abs(_.Y)>g/2 then b=n*math.abs((g/2)/n.Y)else b=n*math.abs((d/2)/n.X)end local a=f/2+b.X local _=i/2-b.Y local b=math.atan2(n.X,n.Y) l:Create(h,TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.fromOffset(a,_),Rotation=math.deg(b)}):Play()end if p.DistanceLabel then p.DistanceLabel.Text=string.format("%dm",math.round(c)) local _=(j.ArrowSize and j.ArrowSize.Y.Offset or self.Settings.ArrowSize.Y.Offset)+16 p.DistanceLabel.Position=UDim2.new(0.5,0,0,_)end end end end function e:Destroy()if self._updateConn then self._updateConn:Disconnect()end if self._cleanupConn then self._cleanupConn:Disconnect()end self:ClearAllGroups() for _,_ in pairs(self.Indicators)do if _.Highlight then _.Highlight:Destroy()end if _.Arrow then _.Arrow:Destroy()end if _.Label then _.Label:Destroy()end end self.ScreenGui:Destroy() self.Indicators={} e.Groups={} e.TargetIndex={}end return e
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.Bezier
    local script = Instance.new("ModuleScript")
    script.Name = "Bezier"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local h={} h.__index=h function h.new(...)local k={...} assert(#k>=3,"Must have at least 3 points") local e=(#k==3) local _=(#k==4) local j={} local d=Vector3.new local b=d().lerp local f=nil local i={} local c=0 local a=nil local function g(_)local _={_.X,_.Y,_.Z} function _:ToVector3()return d(self[1],self[2],self[3])end function _:lerp(_,a)return b(self:ToVector3(),_:ToVector3(),a)end return _ end if(not e and not _)then for _=1,#k-1 do local a=g(k[_]) local _=g(k[_+1]) local _={a,_,g(a)} i[#i+1]=_ end local b=i for _=#i,2,-1 do local a={} for c=1,_-1 do local b,_=b[c],b[c+1] local _={b[3],_[3],g(b[3])} a[c]=_ i[#i+1]=_ end b=a end a=b[1] c=#i end if(e)then local b,c,_=k[1],k[2],k[3] function j:Get(d,a)if(a)then d=(d<0 and 0 or d>1 and 1 or d)end return(1-d)*(1-d)*b+2*(1-d)*d*c+d*d*_ end elseif(_)then local _,a,c,b=k[1],k[2],k[3],k[4] function j:Get(e,d)if(d)then e=(e<0 and 0 or e>1 and 1 or e)end return(1-e)*(1-e)*(1-e)*_+3*(1-e)*(1-e)*e*a+3*(1-e)*e*e*c+e*e*e*b end else function j:Get(b,_)if(_)then b=(b<0 and 0 or b>1 and 1 or b)end for _=1,c do local _=i[_] local a=_[1]:lerp(_[2],b) local _=_[3] _[1],_[2],_[3]=a.X,a.Y,a.Z end return a[3]:ToVector3()end end function j:GetLength(_)if(not f)then local a=self:GetPath(_ or 0.1) local b=0 for _=2,#a do local _=(a[_-1]-a[_]).Magnitude b=(b+_)end f=b end return f end function j:GetPath(_)assert(type(_)=="number","Must provide a step increment") assert(_>0 and _<1,"Step out of domain; should be between 0 and 1 (exclusive)") local b={} local a=0 for _=0,1,_ do a=_ b[#b+1]=self:Get(_)end if(a<1)then local _=((1-a)<(_*0.5)) b[#b+(_ and 0 or 1)]=self:Get(1)end return b end function j:GetPathByNumberSegments(_)assert(type(_)=="number","Must provide number of segments") assert(_>0,"Number of segments must be greater than 0") return self:GetPath(1/_)end function j:GetPathBySegmentLength(a)assert(type(a)=="number","Must provide a segment length") assert(a>0,"Segment length must be greater than 0") local _=self:GetLength() local _=_/a return self:GetPathByNumberSegments(math.floor(_+0.5))end function j:GetPoints()return k end return setmetatable(j,h)end return h
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.Theme
    local script = Instance.new("ModuleScript")
    script.Name = "Theme"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		-- Theme module
		
		local ThanhNeBroRoot = getgenv().ThanhNeBro
		local api = {
			colors = {
				font = Enum.Font.Montserrat,
				textColor = Color3.fromRGB(255, 255, 255),
				accentColor = Color3.fromRGB(197, 0, 0),
				primaryColor = Color3.fromRGB(22, 22, 22),
				secondaryColor = Color3.fromRGB(12, 12, 12),
		
				backgroundColorCSQ = ColorSequence.new(Color3.fromRGB(36, 36, 36), Color3.fromRGB(68, 68, 68)),	
				strokeColorCSQ = ColorSequence.new{
					ColorSequenceKeypoint.new(0, Color3.fromRGB(53.00000064074993, 53.00000064074993, 53.00000064074993)),
					ColorSequenceKeypoint.new(0.15224914252758026, Color3.fromRGB(50.69031357765198, 50.69031357765198, 50.69031357765198)),
					ColorSequenceKeypoint.new(0.4723183512687683, Color3.fromRGB(255, 0, 4.000000236555934)),
					ColorSequenceKeypoint.new(0.7577854990959167, Color3.fromRGB(50.13314567506313, 50.13314567506313, 50.13314567506313)),
					ColorSequenceKeypoint.new(1, Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155))
				},
			}
		}
		
		local themeObjects = {
			font = {},
			textColor = {},
			primaryColor = {},
			secondaryColor = {},
			backgroundColorCSQ = {},
			strokeColorCSQ = {},
		}
		
		
		
		-- value method matching
		function api:sortObjects(gui)
			for _, obj in next, gui:getDescendants() do
				if obj:FindFirstChild("themedColor") then 
					if obj:FindFirstChild("themedColor").Value == "primaryColor" then
						table.insert(themeObjects.primaryColor, obj)
					elseif obj:FindFirstChild("themedColor").Value == "secondaryColor" then
						table.insert(themeObjects.secondaryColor, obj)
					elseif obj:FindFirstChild("themedColor").Value == "backgroundColorCSQ" then
						for _, find in ipairs(obj:GetChildren()) do
							if find:IsA("UIGradient") then table.insert(themeObjects.backgroundColorCSQ, find) break end
						end
					else
						warn("FRAME unknown obj: "..obj.Name)
					end
				end
				if obj:IsA("TextLabel") or obj:IsA("TextButton") then
					--print("found obj")
					
					table.insert(themeObjects.font, obj)
					table.insert(themeObjects.textColor, obj)
					--print("added to font obj",obj.Name)
				end
				if obj:IsA("UIStroke") and obj:FindFirstChildWhichIsA("UIGradient") then
					table.insert(themeObjects.strokeColorCSQ, obj:FindFirstChildWhichIsA("UIGradient"))
				end
				
			end
			--print("sorted")
		end
		
		
		--function api:sortObjects(gui)
		--	for _, obj in next, gui:getDescendants() do
		--		if obj:IsA("Frame") then 
		--			if obj.BackgroundColor == api.colors.primaryColor then
		--				table.insert(themeObjects.primaryColor, obj)
		--			elseif obj.BackgroundColor == api.colors.secondaryColor then
		--				table.insert(themeObjects.secondaryColor, obj)
		--			else
		--				warn("FRAME unknown obj: "..obj.Name)
		--				local c = obj.BackgroundColor3
						--print(string.format("color of unknown obj: (%d, %d, %d)", c.R * 255, c.G * 255, c.B * 255))
		--			end
		--		elseif obj:IsA("TextLabel") or obj:IsA("TextButton") then
					--print("found obj")
		--			if obj.BackgroundColor == api.colors.primaryColor then
		--				table.insert(themeObjects.primaryColor, obj)
		--			elseif obj.BackgroundColor == api.colors.secondaryColor then
		--				table.insert(themeObjects.secondaryColor, obj)
		--		--[[
		--			elseif obj.Font == api.colors.font then
						--print("FONT OBJECT", api.colors.font)
		--				table.insert(themeObjects.font, obj)
		--			elseif obj.Text and obj.TextColor == api.colors.textColor then
		--				table.insert(themeObjects.textColor, obj)
		--		]]
		--			else
		--				warn("TEXT unknown obj: "..obj.Name)
		--			end
		--			table.insert(themeObjects.font, obj)
		--			table.insert(themeObjects.textColor, obj)
					--print("added to font obj",obj.Name)
		--		end
		--	end
			--print("sorted")
		--end
		
		function api:updateColor(colorType, newColor)
			--print("aplying")
			--api.colors[colorType] = (colorType == "font" and newColor) or newColor
			if colorType == "font" then
				--for _, obj in next, themeObjects.font do
				--	obj.Font = newColor
				--end
				
				-- changed weights so disabeled sorry
			elseif colorType == "textColor" then
				for _, obj in next, themeObjects.textColor do
					obj.TextColor3 = newColor
					--print("applied", newColor)
				end
			elseif colorType == "primaryColor" then
				for _, obj in next, themeObjects.primaryColor do
					obj.BackgroundColor3 = newColor
					--print("applied", newColor)
				end
			elseif colorType == "secondaryColor" then
				for _, obj in next, themeObjects.secondaryColor do
					obj.BackgroundColor3 = newColor
					--print("applied", newColor)
				end
			elseif colorType == "backgroundColorCSQ" then
				for _, obj in next, themeObjects.backgroundColorCSQ do
					obj.Color = newColor
					--print("applied", newColor)
				end
			elseif colorType == "strokeColorCSQ" then
				for _, obj in next, themeObjects.strokeColorCSQ do
					obj.Color = newColor
					--print("applied", newColor)
				end
			end
		end
		
		function api:setColorTable(t)
			api.colors = t
			if getgenv then getgenv().ThanhNeBro_THEME = t end
		end
		
		function api:init(p)
			api:sortObjects(p)
			for colorKey, color in api.colors do
				api:updateColor(colorKey, color)
			end
		end
		
		getgenv().ThemeManager = api
		getgenv().ThemeObjects = themeObjects
		
		getgenv().ThemeManagerModuleObject = script
		
		return api
		
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.ThanhNeBro.PointSave
    local script = Instance.new("ModuleScript")
    script.Name = "PointSave"
    script.Parent = Converted["_ThanhNeBro"]
    local function module_script()
		local _=false local function d(...)if _ then print("[PointSave DEBUG]:",...)end end _G._FOLDERS=_G._FOLDERS or{} _G._FILES=_G._FILES or{} isfolder=isfolder or function(_)d("Checking if folder exists:",_) return _G._FOLDERS[_]~=nil end makefolder=makefolder or function(_)d("Creating folder:",_) _G._FOLDERS[_]={} return _G._FOLDERS[_]end isfile=isfile or function(_)d("Checking if file exists:",_) return _G._FILES[_]~=nil end writefile=writefile or function(a,_)d("Writing file:",a,"with content:",_) _G._FILES[a]=_ return _G._FILES[a]end readfile=readfile or function(_)d("Reading file:",_) return _G._FILES[_]end delfile=delfile or function(_)d("Deleting file:",_) _G._FILES[_]=nil end listfiles=listfiles or function(c)d("Listing files in folder:",c) local _=_G._FOLDERS[c] if _ then local a={} for b,_ in pairs(_G._FILES)do if b:sub(1,#c+1)==c.."/"then local _=b:sub(#c+2) d("Found file in folder:",_) table.insert(a,_)end end return a end d("Folder does not exist:",c) return{}end local b={} b.__index=b local c="PointSaveData" local function _()if not isfolder(c)then d("Base folder not found, creating:",c) makefolder(c)else d("Base folder already exists:",c)end end function b.new(a)d("Initializing new PointSave instance for namespace:",a) _() local _=setmetatable({},b) _.namespace=a _.folderPath=c.."/"..a if not isfolder(_.folderPath)then d("Namespace folder does not exist, creating:",_.folderPath) makefolder(_.folderPath)else d("Namespace folder already exists:",_.folderPath)end return _ end function b:set(b,a)local _=self.folderPath.."/"..b..".txt" d("Setting value for key:",b,"->",a) writefile(_,tostring(a))end function b:get(a)local _=self.folderPath.."/"..a..".txt" d("Getting value for key:",a) if isfile(_)then local _=readfile(_) d("Found value for key:",a,"->",_) return _ end d("Key not found:",a) return nil end function b:remove(a)local _=self.folderPath.."/"..a..".txt" d("Removing key:",a) if isfile(_)then delfile(_) d("Removed file for key:",a)else d("File for key does not exist:",a)end end function b:clear()d("Clearing all keys in namespace:",self.namespace) local _=listfiles(self.folderPath) for _,_ in ipairs(_)do local _=self.folderPath.."/".._ if isfile(_)then d("Deleting file:",_) delfile(_)end end end function b.deleteNamespace(a)local b=c.."/"..a d("Deleting namespace:",a) local _=listfiles(b) for _,_ in ipairs(_)do local _=b.."/".._ if isfile(_)then d("Deleting file from namespace:",_) delfile(_)end end _G._FOLDERS[b]=nil d("Deleted folder for namespace:",a)end function b.listNamespaces()d("Listing all namespaces") _() local b={} for a,_ in pairs(_G._FOLDERS)do if a:sub(1,#c+1)==c.."/"then local _=a:sub(#c+2) d("Found namespace:",_) table.insert(b,_)end end return b end return b
    end
    fake_module_scripts[script] = module_script
end
-- Fake Local Scripts:
local function ZTSOVAR_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Open.InitOpen
    local script = Instance.new("LocalScript")
    script.Name = "InitOpen"
    script.Parent = Converted["_Open"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local ts = game:GetService("TweenService")
	
	
	local stroke = Instance.new("UIStroke")
	stroke.Parent = script.Parent
	stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	stroke.Color = Color3.fromRGB(255,255,255)
	
	
	script.Parent.Position = UDim2.fromScale(0.5, -1)
	ts:Create(script.Parent, TweenInfo.new(1.5, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
		Position = UDim2.fromScale(0.5, 0.063)
	}):Play()
	
	
	task.wait(5)
	ts:Create(script.Parent, TweenInfo.new(5), {
		TextTransparency = 1
	}):Play()
	--ts:Create(stroke, TweenInfo.new(5), {
	--	Transparency = 1
	--}):Play()
end
local function FONQUUM_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Open.OnClick
    local script = Instance.new("LocalScript")
    script.Name = "OnClick"
    script.Parent = Converted["_Open"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local ts = game:GetService("TweenService")
	
	local clickCount = 0
	local lastClickTime = tick()
	script.Parent.MouseButton1Click:Connect(function()
		local currentTime = tick()
		
		script.Parent.TextTransparency = 1
		ts:Create(script.Parent, TweenInfo.new(1),
			{TextTransparency = 1}
		):Play()
		
		-- Check if the time since the last click is within a certain threshold
		if currentTime - lastClickTime < 0.5 then
			clickCount = clickCount + 1
		else
			
			clickCount = 1
		end
	
		lastClickTime = currentTime
	
		if clickCount == 3 then
			-- Triple-click detected
	
			ts:Create(getgenv().ThanhNeBro.Menu, TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out), 
				{Position = UDim2.fromScale(0.499, 0.041), Size = UDim2.fromOffset(441, 268)}
			):Play()
		end
	end)
	
end
local function DOAXIVT_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Open.Resizer
    local script = Instance.new("LocalScript")
    script.Name = "Resizer"
    script.Parent = Converted["_Open"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local guiObject = script.Parent
	local userInputService = game:GetService("UserInputService")
	local ts = game:GetService("TweenService")
	
	local resizing = false
	local initialMousePosition = nil
	local initialSize = nil
	local touchCount = 0
	
	-- Define the minimum width (50 pixels) and maximum width (initial width)
	local MIN_WIDTH = 100
	local MAX_WIDTH = guiObject.Size.X.Offset
	
	local function onInputBegan(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Touch then
			touchCount = touchCount + 1
		end
	
		if touchCount == 2 then
			resizing = false
			return
		end
	
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			resizing = true
			initialMousePosition = input.Position
			initialSize = guiObject.Size
		end
	end
	
	local function onInputEnded(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Touch then
			touchCount = touchCount - 1
		end
	
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then		
			resizing = false
			initialMousePosition = nil
			initialSize = nil
			--ts:Create(guiObject.UIStroke, TweenInfo.new(1.2, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			--	Transparency = 1
			--}):Play()
		end
	end
	
	local function onInputChanged(input, gameProcessed)
		if touchCount == 2 then
			return
		end
	
		if resizing and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - initialMousePosition
			if math.abs(delta.X) > 50 then
				local newWidth = math.clamp(initialSize.X.Offset + delta.X, MIN_WIDTH, MAX_WIDTH)
				local newSize = UDim2.new(
					initialSize.X.Scale,
					newWidth,
					initialSize.Y.Scale,
					initialSize.Y.Offset
				)
				ts:Create(guiObject, TweenInfo.new(0.8, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Size = newSize
				}):Play()
				--guiObject.UIStroke.Transparency = 0
			end
		end
	end
	
	guiObject.InputBegan:Connect(onInputBegan)
	guiObject.InputEnded:Connect(onInputEnded)
	userInputService.InputChanged:Connect(onInputChanged)
	
end
local function DVJENL_fake_script() -- Fake Script: StarterGui.ThanhNeBro.FloatingButton.Keybinding
    local script = Instance.new("LocalScript")
    script.Name = "Keybinding"
    script.Parent = Converted["_FloatingButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	
end
local function SAJO_fake_script() -- Fake Script: StarterGui.ThanhNeBro.FloatingButton.Invisible
    local script = Instance.new("LocalScript")
    script.Name = "Invisible"
    script.Parent = Converted["_FloatingButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	--local ts = game:GetService("TweenService")
	
	--local holding = false
	--local invisible = false
	
	
	
	--script.Parent.MouseButton1Down:Connect(function()
	--	holding = true
	--	task.wait(0.5)
	--	if holding then
	--		if not invisible then 
	--			invisible = true
	--			ts:Create(script.Parent, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
	--				BackgroundTransparency = 1,
	--				TextTransparency = 1
	--			}):Play()
	--			ts:Create(script.Parent.UIStroke, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
	--				Transparency = 0.7
	--			}):Play()
	--		else
	--			invisible = false
	--			ts:Create(script.Parent, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
	--				BackgroundTransparency = 0,
	--				TextTransparency = 0
	--			}):Play()
	--			ts:Create(script.Parent.UIStroke, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
	--				Transparency = 0
	--			}):Play()
	--		end
	--	end
	--end)
	
	--script.Parent.MouseButton1Up:Connect(function()
	--	holding = false
	--end)
end
local function NCDB_fake_script() -- Fake Script: StarterGui.ThanhNeBro.AddCustomModule.Add.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_Add"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local ts = game:GetService("TweenService")
	
	
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.TextBox.Text == "" then return end
		ts:Create(script.Parent.Parent.Parent.Menu.UIScale, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Scale = 1
		}):Play()
		ts:Create(script.Parent.Parent, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.fromScale(0.5, -0.5)
		}):Play()
		
		
		local lastmodule = getgenv().Modules[#getgenv().Modules]
		require(script.Parent.Parent.Parent.FUNCTIONS).notification("Module is loading...")
	
		local moduleEx = loadstring(game:HttpGet(script.Parent.Parent.TextBox.Text))
		--setfenv(moduleEx, {FUNCTIONS = require(script.Parent.Parent.Parent.FUNCTIONS)})
		
		local newmodule = moduleEx()
		if newmodule["BG_TASK"] then
			coroutine.wrap(newmodule["BG_TASK"])()
		end
		if getgenv().Modules[#getgenv().Modules] ~= lastmodule then
			local newmodule = getgenv().Modules[#getgenv().Modules]
			require(script.Parent.Parent.Parent.FUNCTIONS).notification("New module added: " .. newmodule["Name"])
			require(script.Parent.Parent.Parent.FUNCTIONS).refreshlist()
		else
			require(script.Parent.Parent.Parent.FUNCTIONS).notification("Module failed to load...")
		end
	end)
	
end
local function SBOBP_fake_script() -- Fake Script: StarterGui.ThanhNeBro.AddCustomModule.Cancel.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_Cancel"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local ts = game:GetService("TweenService")
	
	script.Parent.MouseButton1Click:Connect(function()
		ts:Create(script.Parent.Parent.Parent.Menu.UIScale, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Scale = 1
		}):Play()
		ts:Create(script.Parent.Parent, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.fromScale(0.5, -0.5)
		}):Play()
	end)
end
local function VIZJP_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Flee the Facility
    local script = Instance.new("LocalScript")
    script.Name = "Flee the Facility"
    script.Parent = Converted["_ThanhNeBro"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local module = {}
	module["gameId"] = 893973440 -- Restrict module to a certain game ID only. 0 allows all games.
	if (module["gameId"] ~= game.GameId) and module["gameId"] ~= 0 then
		script.Enabled = false
	end
	
	module["Name"] = "Flee the Facility"
	
	local ts = game:GetService("TweenService")
	
	local FUNCTIONS = require(script.Parent.FUNCTIONS)
	
	
	module.players = false
	module.pcs = false
	module.pods = false
	module.exits = false
	
	module.antipcerror = false
	module.flashlight = false
	
	local esps = {}
	
	local function getBeast()
		local listplayers = game.Players:GetChildren()
		for _, player in ipairs(listplayers) do
			local character = player.Character
			if character ~= nil and character:FindFirstChild("BeastPowers") then
				return player
			end
		end
	end
	
	local function reloadESP()
	
	
		for _, i in ipairs(workspace:GetChildren()) do
			if i.Name == "PlayerHighlight" and not module.players then
				i:Destroy()
			end
	
			if i.Name == "PCHighlight" and not module.pcs then
				i:Destroy()
			end
	
			if i.Name == "PodsHighlight" and not module.pods then
				i:Destroy()
			end
	
			if i.Name == "ExitsHighlight" and not module.exits then
				i:Destroy()
			end
		end
	
		if module.players then
	
	
	
			local listplayers = game.Players:GetChildren()
			for _, player in ipairs(listplayers) do
				if player ~= game.Players.LocalPlayer and player.Character ~= nil then
					local character = player.Character
					if not character:FindFirstChild("PlayerHighlight") then
						local a = Instance.new("Highlight", workspace)
						esps["PlayerHighlight"] = a
						a.Name = "PlayerHighlight"
						a.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
						a.Adornee = character
						task.spawn(function()
							repeat
								task.wait(0.1)
								if player == getBeast() then
									a.FillColor = Color3.fromRGB(255,0,0)
								else
									a.FillColor = Color3.fromRGB(0,255,0)
								end
							until character == nil or a == nil
						end)
					end
				end
			end
	
	
		end
	
		if module.pcs then
	
	
	
	
			for _, obj in ipairs(game.Workspace:GetDescendants()) do
				if obj.Name == "ComputerTable" and not obj:FindFirstChild("PCHighlight") then
					local hili = Instance.new("Highlight", workspace)
					esps["PCHighlight"] = hili
					hili.Name = "PCHighlight"
					hili.OutlineTransparency = 1
					hili.Adornee = obj
					hili.FillColor = obj:FindFirstChild("Screen").Color
				end
			end
	
	
		end
	
		if module.pods then
	
	
	
			for _, obj in ipairs(game.Workspace:GetDescendants()) do
				if obj.Name == "FreezePod" then
					local hili = Instance.new("Highlight", workspace)
					esps["PodsHighlight"] = hili
					hili.Name = "PodsHighlight"
					hili.OutlineTransparency = 1
					hili.Adornee = obj
					hili.FillColor = Color3.fromRGB(0, 200, 255)
				end
			end
	
		end
	
	
		if module.exits then
	
	
	
			for _, obj in ipairs(game.Workspace:GetDescendants()) do
				if obj.Name == "ExitDoor" and not obj:FindFirstChild("ExitsHighlight") then
					local hili = Instance.new("Highlight", workspace)
					esps["ExitsHighlight"] = hili
					hili.Name = "ExitsHighlight"
					hili.OutlineTransparency = 1
					hili.Adornee = obj
					hili.FillColor = Color3.fromRGB(255,255,0)
				end
			end
	
		end
	end
	
	
	
	
	module[1] = {
		Type = "Text",
		Args = {"ESPs"}
	}
	
	module[2] = {
		Type = "ButtonGrid",
		Toggleable = true, -- Recolors buttons for you onclick, you still need to save the state yourself
		Args = {3, { -- 3 is the number of columns
			Players = function(Self)
	
				if module.players then
					module.players = false
					reloadESP()
				else
					module.players = true
					reloadESP()
				end
	
	
			end,
			PCs = function(Self)
	
				if module.pcs then
					module.pcs = false
					reloadESP()
				else
					module.pcs = true
					reloadESP()
				end
	
			end,
			Pods = function(Self)
	
				if module.pods then
					module.pods = false
					reloadESP()
				else
					module.pods = true
					reloadESP()
				end
	
	
			end,
			Exits = function(Self)
	
				if module.exits then
					module.exits = false
					reloadESP()
				else
					module.exits = true
					reloadESP()
				end
	
			end,
		}
		} 
	}
	module[3] = { -- spacing, button grid doesnt correctly height itself for some reason
		Type = "Text",
		Args = {""}
	}
	
	module[4] = {
		Type = "Text",
		Args = {"Tools"}
	}
	
	
	local root = game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	
	light = Instance.new("PointLight", root)
	light.Brightness = 0
	light.Range = 9999999999
	
	local wslock = false
	local ws = 18
	
	local antifail = false
	
	
	task.spawn(function() 
		if game:GetService("RunService"):IsStudio() then return end -- :)
	
		local OldNameCall = nil
	
		OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
			local Args = {...}
			local NamecallMethod = getnamecallmethod()
	
			if NamecallMethod == "FireServer" and Args[1] == "SetPlayerMinigameResult" and antifail then
				print("Minigame result - Intercepting result to true")
				Args[2] = true
			end
	
			return OldNameCall(Self, unpack(Args))
		end)
	
	end)
	
	
	module[5] = {
		Type = "ButtonGrid",
		Toggleable = true,
		Args = {3, {
			Anti_PC_Error = function()
				if antifail then antifail = false else antifail = true end
			end,
			Flashlight = function()
				if light.Brightness == 0 then
					light.Brightness = 2.5
				else
					light.Brightness = 0
				end
			end,
		}}
	}
	
	task.spawn(function()
		while task.wait(0.1) do
			if wslock then
				root.Parent:WaitForChild("Humanoid").WalkSpeed = ws
			end
		end
	end)
	
	module[6] = {
		Type = "Input",
		Args = {"Input a walkspeed", "Set & Lock", function(Self, text)
			if not tonumber(text) then
				FUNCTIONS.notification("Input isn't a valid number.")
				return
			end
	
			ws = tonumber(text)
			wslock = true
		end,}
	}
	
	module[7] = {
		Type = "Button",
		Args = {"Unlock all", function()
			wslock = false
		end,}
	}	
	
	module[8] = {
		Type = "Text",
		Args = {"Locking means your speed will stay the same no matter what. This means you will not be slow when crawling or jumping as beast."}
	}
	
	repeat task.wait() until getgenv().Modules
	getgenv().Modules[2] = module
end
local function UTRFSE_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Universal
    local script = Instance.new("LocalScript")
    script.Name = "Universal"
    script.Parent = Converted["_ThanhNeBro"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end
	local module = {}
	module["gameId"] = 0 -- Restrict module to a certain game ID only. 0 allows all games.
	if (module["gameId"] ~= game.GameId) and module["gameId"] ~= 0 then
		script.Enabled = true
	end
	
	local ts = game:GetService("TweenService")
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")
	local https = game:GetService("HttpService")
	local Players = game:GetService("Players")
	local fu = require(script.Parent.FUNCTIONS)
	local theme = require(script.Parent.Theme)
	
	local PointSave = require(script.Parent.PointSave)
	
	local loopfovandws = false
	local ctrlclicktp = false
	local ws = 16
	local fov = 70
	
	local hidden = false
	
	local ThanhNeBroPointSave = PointSave.new("ThanhNeBro")
	
	function splitString(str,delim)
		local broken = {}
		if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
		return broken
	end
	
	function toTokens(str)
		local tokens = {}
		for op,name in string.gmatch(str,"([+-])([^+-]+)") do
			table.insert(tokens,{Operator = op,Name = name})
		end
		return tokens
	end
	
	function onlyIncludeInTable(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end
	
	function removeTableMatches(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end
	
	function getPlayersByName(Name)
		local Name,Len,Found = string.lower(Name),#Name,{}
		for _,v in pairs(Players:GetPlayers()) do
			if Name:sub(0,1) == '@' then
				if string.sub(string.lower(v.Name),1,Len-1) == Name:sub(2) then
					table.insert(Found,v)
				end
			else
				if string.sub(string.lower(v.Name),1,Len) == Name or string.sub(string.lower(v.DisplayName),1,Len) == Name then
					table.insert(Found,v)
				end
			end
		end
		return Found
	end
	
	function getPlayer(list,speaker)
		if list == nil then return {speaker.Name} end
		local nameList = splitString(list,",")
	
		local foundList = {}
	
		for _,name in pairs(nameList) do
			if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
			local tokens = toTokens(name)
			local initialPlayers = Players:GetPlayers()
	
			for i,v in pairs(tokens) do
				if v.Operator == "+" then
					local tokenContent = v.Name
					local foundCase = false
	
					if not foundCase then
						initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
					end
				else
					local tokenContent = v.Name
					local foundCase = false
	
					if not foundCase then
						initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
					end
				end
			end
	
			for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
		end
	
		local foundNames = {}
		for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end
	
		return foundNames[1]
	end
	
	
	
	task.spawn(function()
		rs.RenderStepped:Connect(function()
			if loopfovandws then
				workspace.CurrentCamera.FieldOfView = fov
				if game.Players.LocalPlayer.Character then
					if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
						game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ws
					end
				end
			end
		end)
	end)
	
	uis.InputBegan:Connect(function(inp, proc)
		if proc then return end
	
		if uis:IsKeyDown(Enum.KeyCode.LeftControl) and inp.KeyCode == Enum.KeyCode.Y and hidden then
			hidden = false
			ts:Create(script.Parent.Menu.UIScale, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				Scale = 1
			}):Play()
		end
	end)
	
	local function getPlayerMouse()
		local player = game:GetService("Players").LocalPlayer
		if player then
			return player:GetMouse()
		end
		return nil
	end
	
	-- Function to cast a ray from the cursor to the furthest object
	local function getRayHitPosition()
		local mouse = getPlayerMouse()
		if not mouse then
			return nil
		end
	
		local camera = workspace.CurrentCamera
		local unitRay = camera:ScreenPointToRay(mouse.X, mouse.Y)
		local ray = Ray.new(unitRay.Origin, unitRay.Direction * 1000) -- Adjust the range as needed
	
		local part, position = workspace:FindPartOnRay(ray, game:GetService("Players").LocalPlayer.Character)
	
		if part then
			return position
		else
			return nil
		end
	end
	
	uis.InputBegan:Connect(function(inp, proc)
		if proc then return end
	
		if uis:IsKeyDown(Enum.KeyCode.LeftControl) and inp.UserInputType == Enum.UserInputType.MouseButton1 and ctrlclicktp then
			local ray = getRayHitPosition()
			if not ray then fu.notification("Couldn't find a place to teleport to.") return end
			game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(ray)
		end
	end)
	
	if uis.AccelerometerEnabled then
		uis.DeviceAccelerationChanged:Connect(function(acc)
			if hidden and acc.Position.Magnitude > 50 then
				hidden = false
				ts:Create(script.Parent.Menu.UIScale, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Scale = 1
				}):Play()
			end 
		end)
	end
	
	module["Name"] = "Universal"
	
	local ts = game:GetService("TweenService")
	
	table.insert(module, {
		Type = "Text",
		Args = {"Welcome to ThanhNeBro! The open, free script hub."}
	})
	
	table.insert(module, {
		Type = "Text",
		Args = {"<font color='#FFFF00'>Also try...</font>"}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"AFEM - A free, FE, simple and easy emotes menu!", function()
			loadstring(game:HttpGet("https://ThanhNeBro.mhi.im/scr?channel=afem"))()
		end,}
	})
	
	
	table.insert(module, {
		Type = "Text",
		Args = {"---"}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Join our Discord", function(Self)
			if setclipboard then setclipboard("https://discord.gg/2jbYxvDkxr") end
			fu.notification('Discord link has been copied to clipboard!')
		end,}
	})
	
	local aggressiveExp = false
	local hitboxExp = 1
	table.insert(module, {
		Type = "Input",
		Args = {"Hitbox expander", "Expand everyone's hitbox", function(Self, ToExpand)
			hitboxExp = ToExpand
			local players = game:GetService("Players"):GetPlayers()
			for i,v in ipairs(players) do
				if v ~= game.Players.LocalPlayer and v.Character:FindFirstChild('HumanoidRootPart') then
					local sizeArg = tonumber(ToExpand)
					local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
					if aggressiveExp then
						for _, part in ipairs(v.Character:GetChildren()) do
							if part:IsA("BasePart") then
								if not ToExpand or sizeArg == 1 then
									part.Size = Vector3.new(2,1,1)
									part.Transparency = 0.2
								else
									part.Size = Size
									part.Transparency = 0.2
								end
								--part.CanCollide = false
							end
						end
					else
						local Root = v.Character:FindFirstChild('HumanoidRootPart')
						if Root:IsA("BasePart") then
							if not ToExpand or sizeArg == 1 then
								Root.Size = Vector3.new(2,1,1)
								Root.Transparency = 0.2
							else
								Root.Size = Size
								Root.Transparency = 0.2
							end
							Root.CanCollide = false
						end
					end
				end
			end
			fu.notification("Hitboxes expanded.")
		end,}
	})
	
	local loopHitBoxExp
	table.insert(module, {
		Type = "Toggle",
		Args = {"Loop hitbox expansion", function(Self, state)
			if state then
				loopHitBoxExp = rs.Heartbeat:Connect(function()
					local players = game:GetService("Players"):GetPlayers()
					for i,v in ipairs(players) do
						if v ~= game.Players.LocalPlayer and v.Character:FindFirstChild('HumanoidRootPart') then
							local sizeArg = tonumber(hitboxExp)
							local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
							local Root = v.Character:FindFirstChild('HumanoidRootPart')
							if aggressiveExp then
								for _, part in ipairs(v.Character:GetChildren()) do
									if part:IsA("BasePart") then
										if not hitboxExp or sizeArg == 1 then
											part.Size = Vector3.new(2,1,1)
											part.Transparency = 0.2
										else
											part.Size = Size
											part.Transparency = 0.2
										end
										--part.CanCollide = false
									end
								end
							else
								local Root = v.Character:FindFirstChild('HumanoidRootPart')
								if Root:IsA("BasePart") then
									if not hitboxExp or sizeArg == 1 then
										Root.Size = Vector3.new(2,1,1)
										Root.Transparency = 0.2
									else
										Root.Size = Size
										Root.Transparency = 0.2
									end
									Root.CanCollide = false
								end
							end
						end
					end
				end)
			else
				loopHitBoxExp:Disconnect()
			end
		end,}
	})
	
	table.insert(module, {
		Type = "Toggle",
		Args = {"Aggressive hitbox expasion (all parts)", function(Self, state)
			aggressiveExp = state
		end,}
	})
	
	table.insert(module, {
		Type = "Input",
		Args = {"Walkspeed", "Set speed", function(Self, speed)
			local lp = game:GetService("Players").LocalPlayer
			local char = lp.Character
			if not char then fu.notification("No character!") return end
			local hu = char:FindFirstChildOfClass("Humanoid")
			if not hu then fu.notification("No humanoid on your character..?") return end
			hu.WalkSpeed = tonumber(speed) or 16
			fu.notification("Walkspeed set.")
			ws = tonumber(speed) or 16
		end,}
	})
	
	
	local walkspeedInDeCrement = 3
	table.insert(module, {
		Type = "Button",
		Args = {"Increase walkspeed", function(Self)
			local lp = game:GetService("Players").LocalPlayer
			local char = lp.Character
			if not char then fu.notification("No character!") return end
			local hu = char:FindFirstChildOfClass("Humanoid")
			if not hu then fu.notification("No humanoid on your character..?") return end
			ws = ws + walkspeedInDeCrement
			hu.WalkSpeed = hu.WalkSpeed + walkspeedInDeCrement
			fu.notification("Walkspeed is now ".. hu.WalkSpeed)
		end,}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Decrease walkspeed", function(Self)
			local lp = game:GetService("Players").LocalPlayer
			local char = lp.Character
			if not char then fu.notification("No character!") return end
			local hu = char:FindFirstChildOfClass("Humanoid")
			if not hu then fu.notification("No humanoid on your character..?") return end
			ws = ws - walkspeedInDeCrement
			hu.WalkSpeed = hu.WalkSpeed - walkspeedInDeCrement
			fu.notification("Walkspeed is now ".. hu.WalkSpeed)
		end,}
	})
	
	table.insert(module, {
		Type = "Input",
		Args = {"Walkspeed increment (How big each increase/decrease is)", "Set", function(Self, input)
			walkspeedInDeCrement = tonumber(input) or 3
			if not tonumber(input) then fu.notification("Not a number. Setting to default.") end
			fu.notification("Set walkspeed increment to ".. walkspeedInDeCrement)
		end,}
	})
	
	table.insert(module, {
		Type = "Input",
		Args = {"FOV change", "Set FOV", function(Self, tofov)
			if not tonumber(tofov) then fu.notification("Not a number. Setting to default.") end
			ts:Create(workspace.CurrentCamera, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				FieldOfView = tonumber(tofov) or 70
			}):Play()
			fov = tonumber(tofov) or 70
		end,}
	})
	
	table.insert(module, {
		Type = "Toggle",
		Args = {"Loop walkspeed and FOV", function(Self, state)
			loopfovandws = state
		end,}
	})
	
	
	if uis.KeyboardEnabled and uis.MouseEnabled then
		table.insert(module, {
			Type = "Toggle",
			Args = {"CTRL+Click Teleport", function(Self, state)
				ctrlclicktp = state
			end,}
		})
	end
	
	table.insert(module, {
		Type = "Text",
		Args = {"Teleports"}
	})
	
	local function gotoPlayer(targetPlayerName)
		local targetPlayer = Players:FindFirstChild(getPlayer(targetPlayerName, game.Players.LocalPlayer))
		if targetPlayer then
			local character = targetPlayer.Character
			if character and character:FindFirstChild("HumanoidRootPart") then
				local targetPosition = character.HumanoidRootPart.Position
				local playerCharacter = Players.LocalPlayer.Character
				if playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart") then
					playerCharacter.HumanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 0))
				end
			end
		else
			print("Player '" .. targetPlayerName .. "' not found.")
		end
	end
	
	table.insert(module, {
		Type = "Input",
		Args = {
			"Enter player's name", 
			"Teleport", 
			function(Self, text)
				gotoPlayer(text)
			end
		}
	})
	
	local spectateLoop = nil
	table.insert(module, {
		Type = "Button",
		Args = {"Spectate players", function(Self)
			local listofplayers = game.Players:GetPlayers()
			local currentlyViewing = 1
			local currentPlayer = listofplayers[currentlyViewing]
			if not currentPlayer then return end
			workspace.CurrentCamera.CameraSubject = currentPlayer.Character.Humanoid
			spectateLoop = task.spawn(function()
				while true do
					fu.dialog("Spectating...", "Now spectating: " .. workspace.CurrentCamera.CameraSubject.Parent.Name, {"Previous", "Stop", "Next"})
					local action = fu.waitfordialog()
					if action == "Stop" then
						fu.closedialog()
						workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
						task.cancel(spectateLoop)
						break
					elseif action == "Next" then
						currentlyViewing = currentlyViewing + 1
						if currentlyViewing > #listofplayers then
							currentlyViewing = 1
						end
						currentPlayer = listofplayers[currentlyViewing]
						if not currentPlayer then return end
						workspace.CurrentCamera.CameraSubject = currentPlayer.Character.Humanoid
					elseif action == "Previous" then
						currentlyViewing = currentlyViewing - 1
						if currentlyViewing < 1 then
							currentlyViewing = #listofplayers
						end
						currentPlayer = listofplayers[currentlyViewing]
						if not currentPlayer then return end
						workspace.CurrentCamera.CameraSubject = currentPlayer.Character.Humanoid
					end
				end
	
			end)
		end,}
	})
	
	table.insert(module, {
		Type = "Text",
		Args = {"Aim locking"}
	})
	
	local aimlockrscon
	local target
	
	table.insert(module, {
		Type = "Input",
		Args = {"Target player", "Set target", function(Self, input)
			if not Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer)) then
				fu.notification("Player not found.")
				return
			end
			fu.notification("Target is set to " .. Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer)).Name)
			target = Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer))
		end,}
	})
	
	local aimlock = false
	local cam = workspace.CurrentCamera
	table.insert(module, {
		Type = "Button",
		Args = {"Aim lock", function(Self)
			if aimlock then return end
			if aimlockrscon then aimlockrscon:Disconnect() end
			if not target then fu.notification("Set a target first.") return end
			aimlockrscon = rs.RenderStepped:Connect(function()
				if not target then fu.notification("No valid target.") aimlockrscon:Disconnect() return end
				if not target.Character then return end
				if not target.Character:FindFirstChild("HumanoidRootPart") then return end
				cam.CFrame = CFrame.new(cam.CFrame.Position, target.Character:FindFirstChild("HumanoidRootPart").Position)
			end)
			aimlock = true
			fu.notification("Aim lock is now on.")
		end,}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Unaim lock", function(Self)
			if not aimlock then return end
			aimlock = false
			if aimlockrscon then aimlockrscon:Disconnect() end
			fu.notification("Aim lock is now off.")
		end,}
	})
	
	local RunService = rs
	local UserInputService = uis
	
	local FLYING = false
	local QEfly = true
	local iyflyspeed = 1
	local vehicleflyspeed = 1
	local IYMouse = Players.LocalPlayer:GetMouse()
	
	
	local Clip = true
	local Noclipping = nil
	local floatName = "FloatingName"
	
	local function getRoot(char)
		local rootPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
		return rootPart
	end
	
	local function sFLY(vfly)
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		repeat wait() until IYMouse
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
	
		local T = getRoot(Players.LocalPlayer.Character)
		local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local SPEED = 0
	
		local function FLY()
			FLYING = true
			local BG = Instance.new('BodyGyro')
			local BV = Instance.new('BodyVelocity')
			BG.P = 9e4
			BG.Parent = T
			BV.Parent = T
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			task.spawn(function()
				repeat wait()
					if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
						Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
					end
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0, 0)
					end
					BG.cframe = workspace.CurrentCamera.CFrame
				until not FLYING
				CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				SPEED = 0
				BG:Destroy()
				BV:Destroy()
				if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
				end
			end)
		end
		flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 's' then
				CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'a' then
				CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'd' then 
				CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
			elseif QEfly and KEY:lower() == 'e' then
				CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
			elseif QEfly and KEY:lower() == 'q' then
				CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
			end
			pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
		end)
		flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'e' then
				CONTROL.Q = 0
			elseif KEY:lower() == 'q' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end
	
	local function NOFLY()
		FLYING = false
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
		if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
			Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end
		pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
	end
	
	local function noclip()
		Clip = false
		wait(0.1)
		local function NoclipLoop()
			if Clip == false and Players.LocalPlayer.Character ~= nil then
				for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = RunService.Stepped:Connect(NoclipLoop)
	end
	
	local function clip()
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
	end
	
	local function toggleNoclip()
		if Clip then
			noclip()
		else
			clip()
		end
	end
	
	
	
	
	
	
	if uis.KeyboardEnabled then
		table.insert(module, {
			Type = "Toggle",
			Args = {"Fly", function(Self)
				if FLYING then
					NOFLY()
				else
					sFLY()
				end
			end}
		})
	end
	
	table.insert(module, {
		Type = "Text",
		Args = {"Fling"}
	})
	
	local playerToFling
	table.insert(module, {
		Type = "Input",
		Args = {"Target fling player", "Set target", function(Self, input)
			if not Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer)) then
				fu.notification("Player not found.")
				return
			end
			fu.notification("Target is set to " .. Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer)).Name)
			playerToFling = Players:FindFirstChild(getPlayer(input, game.Players.LocalPlayer))
		end,}
	})
	
	
	local antiFling = false
	table.insert(module, {
		Type = "ButtonGrid",
		Args = {1, {
	
			Fling = function(Self)
				if not playerToFling then
					fu.notification("You need to target a player to fling.")
					return
				end
				if not Players:FindFirstChild(playerToFling.Name) then
					fu.notification("You need to target a player to fling.")
					return
				end
				if antiFling then
					fu.notification("Turn off anti-fling to use fling.")
					return
				end
	
				local player = game.Players.LocalPlayer
				local mouse = player:GetMouse()
				local Targets = {playerToFling}
	
				local Players = game:GetService("Players")
				local Player = Players.LocalPlayer
	
				local AllBool = false
	
				local SkidFling = function(TargetPlayer)
					local Character = Player.Character
					local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
					local RootPart = Humanoid and Humanoid.RootPart
	
					local TCharacter = TargetPlayer.Character
					local THumanoid
					local TRootPart
					local THead
					local Accessory
					local Handle
	
					if TCharacter:FindFirstChildOfClass("Humanoid") then
						THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
					end
					if THumanoid and THumanoid.RootPart then
						TRootPart = THumanoid.RootPart
					end
					if TCharacter:FindFirstChild("Head") then
						THead = TCharacter.Head
					end
					if TCharacter:FindFirstChildOfClass("Accessory") then
						Accessory = TCharacter:FindFirstChildOfClass("Accessory")
					end
					if Accessory and Accessory:FindFirstChild("Handle") then
						Handle = Accessory.Handle
					end
	
					if Character and Humanoid and RootPart then
						if RootPart.Velocity.Magnitude < 50 then
							getgenv().OldPos = RootPart.CFrame
						end
						if THumanoid and THumanoid.Sit and not AllBool then
						end
						if THead then
							if THead.Velocity.Magnitude > 500 then
								fu.dialog("Player flung", "Player is already flung. Fling again?", {"Fling again", "No"})
								if fu.waitfordialog() == "No" then return fu.closedialog() end
								fu.closedialog()
							end
						elseif not THead and Handle then
							if Handle.Velocity.Magnitude > 500 then
								fu.dialog("Player flung", "Player is already flung. Fling again?", {"Fling again", "No"})
								if fu.waitfordialog() == "No" then return fu.closedialog() end
								fu.closedialog()
							end
						end
	
	
						if THead then
							workspace.CurrentCamera.CameraSubject = THead
						elseif not THead and Handle then
							workspace.CurrentCamera.CameraSubject = Handle
						elseif THumanoid and TRootPart then
							workspace.CurrentCamera.CameraSubject = THumanoid
						end
						if not TCharacter:FindFirstChildWhichIsA("BasePart") then
							return
						end
	
						local FPos = function(BasePart, Pos, Ang)
							RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
							Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
							RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
							RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
						end
	
						local SFBasePart = function(BasePart)
							local TimeToWait = 2
							local Time = tick()
							local Angle = 0
	
							repeat
								if RootPart and THumanoid then
									if BasePart.Velocity.Magnitude < 50 then
										Angle = Angle + 100
	
										FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
									else
										FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
										task.wait()
	
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
										task.wait()
									end
								else
									break
								end
							until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or TargetPlayer.Character ~= TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
						end
	
						workspace.FallenPartsDestroyHeight = 0/0
	
						local BV = Instance.new("BodyVelocity")
						BV.Name = "EpixVel"
						BV.Parent = RootPart
						BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
						BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
	
						Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
	
						if TRootPart and THead then
							if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
								SFBasePart(THead)
							else
								SFBasePart(TRootPart)
							end
						elseif TRootPart and not THead then
							SFBasePart(TRootPart)
						elseif not TRootPart and THead then
							SFBasePart(THead)
						elseif not TRootPart and not THead and Accessory and Handle then
							SFBasePart(Handle)
						else
							fu.notification("Can't find a proper part of target player to fling.")
						end
	
						BV:Destroy()
						Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
						workspace.CurrentCamera.CameraSubject = Humanoid
	
						repeat
							RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
							Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
							Humanoid:ChangeState("GettingUp")
							table.foreach(Character:GetChildren(), function(_, x)
								if x:IsA("BasePart") then
									x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
								end
							end)
							task.wait()
						until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
						workspace.FallenPartsDestroyHeight = getgenv().FPDH
					else
						fu.notification("No valid character of said target player. May have died.")
					end
				end
				SkidFling(Targets[1])
				-- this whole thing is skidded LMAOO
			end,
	
			--Stop_Fling = function(Self)
			--	if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BodyAngularVelocity") then
			--		game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BodyAngularVelocity"):Destroy()
			--	end
			--end,
		}
		}
	})
	
	
	local antiFlingLastPos = Vector3.zero
	local flingNeutralizerCon
	local flingDetectionCon
	local detectedPlayers = {}
	table.insert(module, {
		Type = "Toggle",
		Args = {"Anti-fling", function(Self, state)
			antiFling = state
			if state then
				fu.notification("Anti-fling activated.")
				flingDetectionCon = rs.Heartbeat:Connect(function()
					for _, pl in ipairs(game:GetService("Players"):GetPlayers()) do
						if pl.Character:IsDescendantOf(workspace) then
							if pl.Character.PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 or pl.Character.PrimaryPart.AssemblyLinearVelocity.Magnitude > 100 then
								if not detectedPlayers[pl.Name] then
									fu.notification("A flinger has been detected with the name " .. pl.Name .. "!")
									detectedPlayers[pl.Name] = true	
								end
	
								for _, p in ipairs(pl.Character:GetDescendants()) do
									if p:IsA("BasePart") then
										p.CanCollide = false
										p.AssemblyAngularVelocity = Vector3.zero
										p.AssemblyLinearVelocity = Vector3.zero
										p.CustomPhysicalProperties = PhysicalProperties.new(0,0,0)
									end
								end
							end
						end
					end
				end)
	
				flingNeutralizerCon = rs.Heartbeat:Connect(function()
					if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.PrimaryPart then
						if game.Players.LocalPlayer.Character.PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or  game.Players.LocalPlayer.Character.PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
							fu.notification("You were flung. Neutralizing velocity!")
							game.Players.LocalPlayer.Character.PrimaryPart.AssemblyLinearVelocity = Vector3.zero
							game.Players.LocalPlayer.Character.PrimaryPart.AssemblyAngularVelocity = Vector3.zero
							if antiFlingLastPos ~= Vector3.zero then
								game.Players.LocalPlayer.Character.PrimaryPart.CFrame = CFrame.new(antiFlingLastPos)
							end
						else
							antiFlingLastPos = game.Players.LocalPlayer.Character.PrimaryPart.Position
						end
					end
				end)
			else
				flingDetectionCon:Disconnect()
				flingNeutralizerCon:Disconnect()
				detectedPlayers = {}
				fu.notification("Anti-fling deactivated.")
			end
		end,}
	})
	
	table.insert(module, {
		Type = "Text",
		Args = {"Miscellaneous"}
	})
	
	
	--table.insert(module, {
	--	Type = "Dropdown",
	--	Args = {"Player to fling", function()
	--		local playersAsStrings = {"None"}
	--		for _, p in ipairs(game.Players:GetPlayers()) do
	--			table.insert(playersAsStrings, p.Name)
	--		end
	--		return playersAsStrings
	--	end,
	
	--	function(Self, selected)
	--		print(selected)
	--	end,}
	--})
	
	pcall(function()
		if game:GetService("CoreGui"):FindFirstChild("DeltaIcon") then
			table.insert(module, {
				Type = "Toggle",
				Args = {"Hide Delta Icon", function(Self, state)
					game:GetService("CoreGui"):FindFirstChild("DeltaIcon").Enabled = state
				end,}
			})
		end
	end)
	
	
	
	
	table.insert(module, {
		Type = "Button",
		Args = {"Hide ThanhNeBro", function(Self)
			if uis.KeyboardEnabled then
				ts:Create(script.Parent.Menu.UIScale, TweenInfo.new(0.6, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Scale = 0
				}):Play()
				hidden=true
				fu.notification("Press CTRL+Y to bring back the menu.")
			elseif uis.AccelerometerEnabled then
				ts:Create(script.Parent.Menu.UIScale, TweenInfo.new(0.6, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					Scale = 0
				}):Play()
				hidden=true
				fu.notification("Shake your device to bring back the menu.")
			else
				fu.notification("Can't hide ThanhNeBro!") -- how else are you gonna open???
			end
		end,}
	}
	)
	
	table.insert(module, {
		Type = "Button",
		Args = {"FPS Boost", function(Self)
			fu.dialog("FPS boosting", "FPS boosting can have unpredictable effects. You may instead lag more using this!", {"FPS boost anyway", "Nevermind"})
			local result = fu.waitfordialog()
			fu.closedialog()
			if result == "FPS boost anyway" then
				local Terrain = workspace:FindFirstChildOfClass('Terrain')
				Terrain.WaterWaveSize = 0
				Terrain.WaterWaveSpeed = 0
				Terrain.WaterReflectance = 0
				Terrain.WaterTransparency = 0
				game.Lighting.GlobalShadows = false
				game.Lighting.FogEnd = 9e9
				pcall(function()
					settings().Rendering.QualityLevel = 1
				end)
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
						v.Material = "Plastic"
						v.Reflectance = 0
					elseif v:IsA("Decal") then
						v.Transparency = 1
					elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
						v.Lifetime = NumberRange.new(0)
					elseif v:IsA("Explosion") then
						v.BlastPressure = 1
						v.BlastRadius = 1
					end
				end
				for i,v in pairs(game.Lighting:GetDescendants()) do
					if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
						v.Enabled = false
					end
				end
				workspace.DescendantAdded:Connect(function(child)
					task.spawn(function()
						if child:IsA('ForceField') then
							rs.Heartbeat:Wait()
							child:Destroy()
						elseif child:IsA('Sparkles') then
							rs.Heartbeat:Wait()
							child:Destroy()
						elseif child:IsA('Smoke') or child:IsA('Fire') then
							rs.Heartbeat:Wait()
							child:Destroy()
						end
					end)
				end)
			end
		end,}
	})
	
	local rsloopconnectionfling
	local clip = true
	local nocliploop
	
	
	table.insert(module, {
		Type = "ButtonGrid",
		Args = {2, {
			Noclip = function()
				clip = false
				nocliploop = rs.Stepped:Connect(function()
					if clip == false and game.Players.LocalPlayer.Character ~= nil then
						for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
							if child:IsA("BasePart") and child.CanCollide == true then
								child.CanCollide = false
							end
						end
					end
				end)
			end,
	
			Reclip = function()
				if clip then return end
				clip = true
				nocliploop:Disconnect()
				fu.notification("Reclipping may need you to reset your character.")
			end,
		}}})
	
	
	
	table.insert(module, {
		Type = "Text",
		Args = {"Other"}
	})
	
	--table.insert(module, {
	--	Type = "Button",
	--	Args = {"Lock/unlock a floating button", function()
	--		fu.lockMode = true
	--		fu.notification("Click/tap a floating button to lock/unlock...")
	--	end,}
	--})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Get ping", function(Self)
			fu.notification(game.Players.LocalPlayer:GetNetworkPing() * 1000)
		end,}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Open developer console (debugging)", function(Self)
			game.StarterGui:SetCore("DevConsoleVisible", true)
			--getgenv().ThanhNeBro.Open.UIStroke.Transparency = 0
			--getgenv().ThanhNeBro.Open.TextTransparency = 0
			--ts:Create(getgenv().ThanhNeBro.Open, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			--	Position = UDim2.fromScale(0.5, 0.903)
			--}):Play()
	
			--ts:Create(getgenv().ThanhNeBro.Open.UIStroke, TweenInfo.new(1), {
			--	Transparency = 1
			--}):Play()
			--ts:Create(getgenv().ThanhNeBro.Open, TweenInfo.new(1), {
			--	TextTransparency = 1
			--}):Play()
		end}
	}
	)
	
	function themeSerialize(data)
		local function s(v)
			local t = typeof(v)
			if t == "number" or t == "string" or t == "boolean" then
				return v
			elseif t == "Color3" then
				return {__type="Color3", r=math.floor(v.R*255+0.5), g=math.floor(v.G*255+0.5), b=math.floor(v.B*255+0.5)}
			elseif t == "EnumItem" then
				return {__type="EnumItem", enumType=v.EnumType.Name, name=v.Name}
			elseif t == "ColorSequence" then
				local kp = {}
				for _, k in ipairs(v.Keypoints) do
					table.insert(kp, {t=k.Time, v={r=math.floor(k.Value.R*255+0.5), g=math.floor(k.Value.G*255+0.5), b=math.floor(k.Value.B*255+0.5)}})
				end
				return {__type="ColorSequence", keypoints=kp}
			elseif t == "table" then
				local out = {}
				for k, val in pairs(v) do
					if k ~= "font" then out[k] = s(val) end
				end
				return out
			else
				error("Unsupported type: " .. t)
			end
		end
		return s(data)
	end
	
	function themeDeserialize(data)
		local function d(v)
			if typeof(v) ~= "table" then return v end
			if v.__type == "Color3" then
				return Color3.fromRGB(v.r, v.g, v.b)
			elseif v.__type == "EnumItem" then
				local e = Enum[v.enumType] return e and e[v.name] or nil
			elseif v.__type == "ColorSequence" then
				local kps = {}
				for _, k in ipairs(v.keypoints) do
					table.insert(kps, ColorSequenceKeypoint.new(k.t, Color3.fromRGB(k.v.r, k.v.g, k.v.b)))
				end
				return ColorSequence.new(kps)
			else
				local out = {}
				for k, val in pairs(v) do out[k] = d(val) end
				return out
			end
		end
		return d(data)
	end
	
	table.insert(module, {
		Type = "Text",
		Args = {"Theme"}
	})
	
	local function loadThemeFromSave(last)
		if not last then task.wait(1) else task.wait(0.2) end
		if ThanhNeBroPointSave:get("ThanhNeBroGlobal_themeCode") then
			local themeObjectImport = themeDeserialize(https:JSONDecode(fu.from_base64(ThanhNeBroPointSave:get("ThanhNeBroGlobal_themeCode"))))
			theme:setColorTable(themeObjectImport)
			theme:init(getgenv().ThanhNeBro)
	
			fu.setTheme(themeObjectImport)
	
			fu.refreshlist()
			fu.refresharea()
			if not last then loadThemeFromSave(true) end -- im getting desperate
		end
	end
	
	table.insert(module, {
		Type = "Input",
		Args = {
			"Theme code",
			"Apply",
			function(obj, value)
				local themeObjectImport = themeDeserialize(https:JSONDecode(fu.from_base64(value)))
				theme:setColorTable(themeObjectImport)
				theme:init(getgenv().ThanhNeBro)
				
				fu.setTheme(themeObjectImport)
				
				fu.refreshlist()
				fu.refresharea()
				fu.notification("Successfully applied theme!")
				
				ThanhNeBroPointSave:set("ThanhNeBroGlobal_themeCode", value)
			end
		}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Reload theme", function()
			theme:init(getgenv().ThanhNeBro)
	
			fu.refreshlist()
			fu.refresharea()
		end,}
	})
	
	table.insert(module, {
		Type = "Button",
		Args = {"Delete theme from save", function()
			ThanhNeBroPointSave:remove("ThanhNeBroGlobal_themeCode")
			
			fu.notification("Theme will not be restored on the next executes.")
		end,}
	})
	
	task.spawn(loadThemeFromSave)
	
	local tagsFolder = Instance.new("Folder", script.Parent)
	tagsFolder.Name = "TagsFolder"
	
	local Players = game:GetService("Players")
	
	-- Customize these with your own usernames and developers
	local usernameColors = {
		["XxxS_omeonexxX"] = Color3.fromHex("#f48fff"),
		["Dextacular"] = Color3.fromHex("#f48fff"),
		["ThanhNeBroplus"] = Color3.fromHex("#f48fff"),
		["joystick531"] = Color3.fromHex("#ff0000"),
		["givepetroblox"] = Color3.fromHex("#ff0000"),
		["Bubberbolf"] = Color3.fromHex("#0030ff"),
	}
	
	local specialUsernameColors = {
		["heyprestonitsme"] = Color3.fromHex("#ffac33"),
		["vuralnovada"] = Color3.fromHex("#ffac33"),
		["Doge3071"] = Color3.fromHex("#ffac33"),
		["jacobisawsome307"] = Color3.fromHex("#ffac33"),
		["fweemeimtrapwed"] = Color3.fromHex("ffac33"),
	}
	
	local mainText = "ThanhNeBro Developer"
	local mainFont = Enum.Font.GothamBold
	local specialText = "ThanhNeBro+"
	local specialFont = Enum.Font.GothamBold
	
	local function createTextLabel(player, text, color)
		local head = player.Character and player.Character:FindFirstChild("Head")
		if head then
			-- Remove any existing tags to avoid duplicates
			local existingTag = head:FindFirstChild("DeveloperTag") or head:FindFirstChild("SpecialTag")
			if existingTag then
				existingTag:Destroy()
			end
	
			local mainTextLabel = Instance.new("BillboardGui")
			mainTextLabel.Parent = tagsFolder
			mainTextLabel.Name = text == mainText and "DeveloperTag" or "SpecialTag"
			mainTextLabel.Size = UDim2.new(5, 0, 1, 0)
			mainTextLabel.StudsOffset = Vector3.new(0, 2, 0)
			mainTextLabel.Adornee = head
			mainTextLabel.AlwaysOnTop = false
			mainTextLabel.MaxDistance = math.huge
			mainTextLabel.LightInfluence = 0
			if player.Name == "joystick531" then
				mainTextLabel.Brightness = 5
			end
	
			local mainTextElement = Instance.new("TextLabel")
			mainTextElement.Size = UDim2.new(1, 0, 1, 0)
			mainTextElement.Text = text
			mainTextElement.TextColor3 = color
			mainTextElement.BackgroundTransparency = 1
			mainTextElement.Font = mainFont
			mainTextElement.TextScaled = true
			mainTextElement.Parent = mainTextLabel
		end
	end
	
	local function checkForPlayer(player)
		if usernameColors[player.Name] then
			createTextLabel(player, mainText, usernameColors[player.Name])
		elseif specialUsernameColors[player.Name] then
			createTextLabel(player, specialText, specialUsernameColors[player.Name])
		end
	end

	local function onCharacterAdded(player)
		player.CharacterAdded:Connect(function(character)
			-- Wait for 10 seconds before reapplying the tag
			task.wait(10)
			checkForPlayer(player)
		end)
	end

	local function handlePlayer(player)
		checkForPlayer(player)
		onCharacterAdded(player)
	end

	for _, player in ipairs(Players:GetPlayers()) do
		handlePlayer(player)
	end

	Players.PlayerAdded:Connect(handlePlayer)

	table.insert(module, {
		Type = "Toggle",
		Args = {"Hide ThanhNeBro+/Developer tags", function(Self, state)
			for _, tag in ipairs(tagsFolder:GetChildren()) do
				tag.Enabled = not state
			end
		end,}
	})

	repeat task.wait() until getgenv().Modules
	getgenv().Modules[1] = module
end
local function SFEGW_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Menu.UIStroke.UIGradient.Animator
	local script = Instance.new("LocalScript")
	script.Name = "Animator"
	script.Parent = Converted["_UIGradient4"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	local ts = game:GetService("TweenService")

	ts:Create(script.Parent, TweenInfo.new(
		10, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut,
		math.huge, false), {
			Rotation = -180
		}):Play()
end
local function MZHT_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Menu.List.AutoSetup
	local script = Instance.new("LocalScript")
	script.Name = "AutoSetup"
	script.Parent = Converted["_List"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	--local ts = game:GetService("TweenService")


	--local States = {}

	--local FloatingButtonConnectionsMouse = {}
	--local FloatingButtonConnectionsTouch = {}

	--task.wait(0.1)

	--AREA = script.Parent.Parent.Area

	--local function calculateWidth(n)
	--	if n <= 3 then
	--		return 30
	--	else
	--		local base = 30
	--		local additional = math.floor((n - 3) / 3) * 30
	--		return base + additional
	--	end
	--end

	----local listlayout = Instance.new("UIListLayout")
	----listlayout.Parent = AREA
	----listlayout.Padding = UDim.new(0, 10)
	----listlayout.FillDirection = Enum.FillDirection.Vertical
	----listlayout.SortOrder = Enum.SortOrder.LayoutOrder
	----listlayout.HorizontalAlignment = Enum.HorizontalAlignment.Center




	--task.wait(.5) -- magic number to wait modules to load lmao
	--task.spawn(function()
	--	require(script.Parent.Parent.Parent.FUNCTIONS).refreshlist()
	--	--for i = 1, 10 do
	--	--	task.wait(.1)
	--	--	require(script.Parent.Parent.Parent.FUNCTIONS).refreshlist()
	--	--end
	--end)
end
local function PKEHOF_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Menu.List.AddCustomModule.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_AddCustomModule1"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	local ts = game:GetService("TweenService")

	script.Parent.MouseButton1Click:Connect(function()
		ts:Create(script.Parent.Parent.Parent.UIScale, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Scale = 0.9
		}):Play()
		ts:Create(script.Parent.Parent.Parent.Parent.AddCustomModule, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.fromScale(0.5, 0.5)
		}):Play()
	end)
end
local function OEALVLK_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Menu.CloseArea.CloseOpen
	local script = Instance.new("LocalScript")
	script.Name = "CloseOpen"
	script.Parent = Converted["_CloseArea"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")

	local menu = script.Parent.Parent
	local Spring = require(menu.Parent.Spring)
	local DraggableObject = require(menu.Parent.DraggableObject)
	local Bezier = require(menu.Parent.Bezier)

	-- Tween the TextLabel transparency
	--TweenService:Create(script.Parent.TextLabel, TweenInfo.new(20, Enum.EasingStyle.Linear), {
	--	TextTransparency = 1,
	--	BackgroundTransparency = 1
	--}):Play()

	local closed = false
	local springing = false

	local closing

	local lastPos = UDim2.fromScale(0.5, 0.5)
	local closedLastPos = UDim2.fromScale(0.5, 0.1)

	-- Initialize springs for menu position and size
	local MenuPosXScale = Spring.new(0.7, 30, 160, menu.Position.X.Scale, 0, menu.Position.X.Scale)
	local MenuPosYScale = Spring.new(0.7, 45, 190, 0.05, 0, 0.05)
	local MenuPosXOffset = Spring.new(0.7, 30, 160, 0, 0)
	local MenuPosYOffset = Spring.new(0.7, 45, 190, 0, 0)
	local MenuSizeXOffset = Spring.new(1, 25, 120, menu.Size.X.Offset, 0, menu.Size.X.Offset)
	local MenuSizeYOffset = Spring.new(1, 25, 120, menu.Size.Y.Offset, 0, menu.Size.Y.Offset)

	-- Functions to update spring goals and offsets


























































-- Load the Rayfield UI library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Initialize the Rayfield Window (Main GUI)
local GUI = Rayfield:CreateWindow({
    Name = "Applesaken",  -- Name of the window
    Theme = "Default",    -- Theme style for the window
    LoadingTitle = "Apple Ware",  -- Title shown while loading
    LoadingSubtitle = "can fart hub please collab already",  -- Subtitle shown during loading
    Icon = "apple",  -- Icon displayed in the window
    Link = "https://github.com/SilkScripts/AppleStuff",  -- Link shown in the window
    DisableBuildWarnings = true,  -- Disable any build warnings
    KeySystem = true,  -- Enable key system for authentication
    KeySettings = {  -- Key system settings
        Title = "Appleware Key",  -- Title of the key system window
        Subtitle = "Join Discord for Key",  -- Subtitle for the key system
        Key = {"1234"},  -- Predefined key for access
        SaveKey = true,  -- Save the key for future use
    },
})

-- Helper function to create a toggle switch for enabling/disabling features
local function createToggle(tab, name, defaultState, callback)
    return tab:CreateToggle({
        Name = name,
        CurrentValue = defaultState,
        Callback = callback,
    })
end

-- Helper function to create a button that triggers actions when clicked
local function createButton(tab, name, callback)
    return tab:CreateButton({
        Name = name,
        Callback = callback,
    })
end

-- Create Tabs for different categories
local VisualTab = GUI:CreateTab("Visuals", "eye")
local GeneratorTab = GUI:CreateTab("Generator", "archive")
local KillerTab = GUI:CreateTab("Killers", "axe")
local SurvivorTab = GUI:CreateTab("Survivors", "key")
local MiscTab = GUI:CreateTab("Misc", "meh")
local BlatantTab = GUI:CreateTab("Blatant", "laugh")

-- Global variables for handling different features
local isHighlightActive = false
local toolhighlightactive = false
local hawktuahactive = false
local isCorruptNatureEspActive = false
local isSurvivorUtilEspActive = false
local run = false
local delay
local isSurvivorHighlightActive = false
local givepizza = false
local connections = {}
local isKillerHighlightActive = false
local hideplayerbar = false
local VirtualBallsManager = game:GetService('VirtualInputManager')
local jumppowerenabled = false
local player = game.Players.LocalPlayer
local survivorutil = {"007n7", "BuildermanSentry", "BuildermanDispenser", "Pizza", "BuildermanSentryEffectRange"}
local aimbot1x1sounds = {"rbxassetid://79782181585087", "rbxassetid://128711903717226"}
local chanceaimbotsounds = {"rbxassetid://201858045", "rbxassetid://139012439429121"}
local johnaimbotsounds = {"rbxassetid://109525294317144"}
local jasonaimbotsounds = {"rbxassetid://112809109188560", "rbxassetid://102228729296384"}
local shedaimbotsounds = {"rbxassetid://12222225", "rbxassetid://83851356262523"}
local guestsounds = {"rbxassetid://609342351"}
local hawktuahactivatesound = {"rbxassetid://110759725172567"}
local hakariactive = false
local quietactive = false
local stam = false
local chanceaim = false
local chanceaimbotLoop
local jasonaimbotloop
local genshouldloop = false
local genactive = false
local aimbot1x1loop
local johnaim = false
local guestaim = false

-- Main UI Features
-- ---- Generator Tab ----
createButton(GeneratorTab, "Instant Solve Generator", function()
    -- Insert the GitHub link for the instant solve generator script here
    -- Replace the following line with the correct link for the generator script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/instantsolvegen.lua"))()  -- Replace this with your GitHub link
end)

createButton(GeneratorTab, "Gen Hell 2 Map Instant Solver", function()
    -- Insert the GitHub link for the Gen Hell 2 solver script here
    -- Replace the following line with the correct link for the Gen Hell 2 script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/genhell2solver.lua"))()  -- Replace this with your GitHub link
end)

createToggle(GeneratorTab, "Auto Generator", false, function(state)
    -- Insert the GitHub link for the auto generator script here
    -- Replace the following line with the correct link for the auto generator script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/autogen.lua"))()  -- Replace this with your GitHub link
end)

createToggle(GeneratorTab, "Generator Highlighter", false, function(state)
    -- Insert the GitHub link for the generator highlighter script here
    -- Replace the following line with the correct link for the generator highlighter script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/genhighlighter.lua"))()  -- Replace this with your GitHub link
end)

-- ---- Visual Tab ----
createToggle(VisualTab, "Tool Highlighter", false, function(state)
    -- Insert the GitHub link for the tool highlighter script here
    -- Replace the following line with the correct link for the tool highlighter script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/toolhighlighter.lua"))()  -- Replace this with your GitHub link
end)

createToggle(VisualTab, "Survivor Highlighter", false, function(state)
    -- Insert the GitHub link for the survivor highlighter script here
    -- Replace the following line with the correct link for the survivor highlighter script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/survivorhighlighter.lua"))()  -- Replace this with your GitHub link
end)

createToggle(VisualTab, "Killer Highlighter", false, function(state)
    -- Insert the GitHub link for the killer highlighter script here
    -- Replace the following line with the correct link for the killer highlighter script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/killerhighlighter.lua"))()  -- Replace this with your GitHub link
end)

createToggle(VisualTab, "C00lkidd ESP", false, function(state)
    -- Insert the GitHub link for the C00lkidd ESP script here
    -- Replace the following line with the correct link for the C00lkidd ESP script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/c00lkiddesp.lua"))()  -- Replace this with your GitHub link
end)

createToggle(VisualTab, "Survivor Utility Highlighter", false, function(state)
    -- Insert the GitHub link for the survivor utility highlighter script here
    -- Replace the following line with the correct link for the survivor utility highlighter script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/survivorutilhighlighter.lua"))()  -- Replace this with your GitHub link
end)

-- ---- Misc Tab ----
createButton(MiscTab, "Unlock Characters [CLIENT]", function()
    -- Insert the GitHub link for unlocking client-side characters script here
    -- Replace the following line with the correct link for unlocking client characters
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/unlockclientchars.lua"))()  -- Replace this with your GitHub link
end)

createToggle(MiscTab, "Hakari Dance", false, function(state)
    -- Insert the GitHub link for activating Hakari Dance mode script here
    -- Replace the following line with the correct link for the Hakari Dance script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/hakaridance.lua"))()  -- Replace this with your GitHub link
end)

createToggle(MiscTab, "Aw Shucks [PAID EXECS]", false, function(state)
    -- Insert the GitHub link for Aw Shucks for paid users script here
    -- Replace the following line with the correct link for Aw Shucks (Paid) script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/awshucks_paid.lua"))()  -- Replace this with your GitHub link
end)

createToggle(MiscTab, "Aw Shucks [FREE EXECS]", false, function(state)
    -- Insert the GitHub link for Aw Shucks for free users script here
    -- Replace the following line with the correct link for Aw Shucks (Free) script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/awshucks_free.lua"))()  -- Replace this with your GitHub link
end)

createToggle(MiscTab, "Instant Pop-Up solver", false, function(state)
    -- Insert the GitHub link for the instant pop-up solver script here
    -- Replace the following line with the correct link for pop-up solver script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/instantpopupsolver.lua"))()  -- Replace this with your GitHub link
end)

-- ---- Survivors Tab ----
createButton(SurvivorTab, "Kai 1337 Skin", function()
    -- Insert the GitHub link for Kai 1337 skin script here
    -- Replace the following line with the correct link for Kai 1337 skin script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/kai1337skin.lua"))()  -- Replace this with your GitHub link
end)

createButton(SurvivorTab, "Doombringer Shed Skin", function()
    -- Insert the GitHub link for Doombringer Shed skin script here
    -- Replace the following line with the correct link for Doombringer Shed skin script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/doombringershedskin.lua"))()  -- Replace this with your GitHub link
end)

createToggle(SurvivorTab, "Chance Aimbot", false, function(state)
    -- Insert the GitHub link for Chance aimbot script here
    -- Replace the following line with the correct link for Chance aimbot script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/chanceaimbot.lua"))()  -- Replace this with your GitHub link
end)

-- ---- Blatant Tab ----
createToggle(BlatantTab, "No Stamina Loss", false, function(state)
    -- Insert the GitHub link for No Stamina Loss script here
    -- Replace the following line with the correct link for No Stamina Loss script
    loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/nostaminaloss.lua"))()  -- Replace this with your GitHub link
end)

BlatantTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {1, 1000},  -- Slider range for WalkSpeed
    Increment = 1,  -- Slider step
    Suffix = ";",  -- Suffix for the value
    CurrentValue = 1,  -- Initial value for the slider
    Callback = function(value)
        -- Insert the GitHub link for WalkSpeed script here
        -- Replace the following line with the correct link for WalkSpeed script
        loadstring(game:HttpGet("https://github.com/yourusername/yourrepo/walkspeed.lua"))()  -- Replace this with your GitHub link
    end,
})

-- Function to notify users about Discord and Welcome Message
Rayfield:Notify{Title = "JOIN THE DISCORD", Content = "plz https://discord.gg/fGFV3r9yKC", Duration = 1, Image = "clipboard"}
Rayfield:Notify{Title = "Welcome to Apple Ware", Content = "Feel free to post any bugs or suggestions in the server :)", Duration = 10, Image = "Apple"}

-- The core game feature logic (aimbots, skins, generators, etc.) remains the same from the original script

	local function setSpringPosGoal(udim2)
		MenuPosXScale:SetGoal(udim2.X.Scale)
		MenuPosYScale:SetGoal(udim2.Y.Scale)
		MenuPosXOffset:SetGoal(udim2.X.Offset)
		MenuPosYOffset:SetGoal(udim2.Y.Offset)
	end

	local function setSpringSizeGoal(udim2)
		MenuSizeXOffset:SetGoal(udim2.X.Offset)
		MenuSizeYOffset:SetGoal(udim2.Y.Offset)
	end

	-- Render step to update menu position and size based on spring values
	RunService.RenderStepped:Connect(function()
		if springing then
			menu.Position = UDim2.new(MenuPosXScale.Offset, MenuPosXOffset.Offset, MenuPosYScale.Offset, MenuPosYOffset.Offset)
			menu.Size = UDim2.fromOffset(MenuSizeXOffset.Offset, MenuSizeYOffset.Offset)
		end
	end)

	-- Initialize draggable menu
	local MenuDrag = DraggableObject.new(script.Parent, menu, false, true)
	MenuDrag:Enable()

	local OpenerMenuDrag = DraggableObject.new(script.Parent.Parent.CanvasGroup.Opener, menu, false, true)
	OpenerMenuDrag:Enable()
	local OpenerDraggable = true

	textHidden = false


	-- Dragging behavior
	MenuDrag.Dragged = function(pos)
		--if not textHidden then
		--	textHidden = true
		--	TweenService:Create(script.Parent.TextLabel, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
		--		TextTransparency = 1,
		--		BackgroundTransparency = 1
		--	}):Play()
		--end
		setSpringPosGoal(pos)
		TweenService:Create(menu.UIScale, TweenInfo.new(0.6, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			Scale = 0.95
		}):Play()
	end

	OpenerMenuDrag.Dragged = function(pos)
		if OpenerDraggable then
			closedLastPos = pos
			setSpringPosGoal(pos)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not textHidden then
			textHidden = true
			TweenService:Create(script.Parent.TextLabel, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				TextTransparency = 1,
				BackgroundTransparency = 1
			}):Play()
		end
		TweenService:Create(menu, TweenInfo.new(2, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			AnchorPoint = Vector2.new(0.5, 0.5)
		}):Play()
		springing = true
		setSpringPosGoal(closedLastPos)
		setSpringSizeGoal(UDim2.fromOffset(60, 60))
		--script.Parent.ZIndex = script.Parent.ZIndex - 2
		menu.CanvasGroup.Visible = true
		OpenerDraggable = true
		if closing then closing:Cancel() end
		TweenService:Create(menu.CanvasGroup, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			GroupTransparency = 0
		}):Play()
	end)

	MenuDrag.DragEnded = function(vel)
		TweenService:Create(menu.UIScale, TweenInfo.new(0.6, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			Scale = 1 
		}):Play()
		if math.abs(vel.Y) > 10 then
			local thrownPosition = menu.Position
			if not textHidden then
				textHidden = true
				TweenService:Create(script.Parent.TextLabel, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
					TextTransparency = 1,
					BackgroundTransparency = 1
				}):Play()
			end
			--print(vel)
			--setSpringPosGoal(UDim2.new(closedLastPos.X.Scale, thrownPosition.X.Offset + vel.X * 10, closedLastPos.Y.Scale, thrownPosition.Y.Offset + vel.Y * 10))
			--task.wait(0.07)
			TweenService:Create(menu, TweenInfo.new(2, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				AnchorPoint = Vector2.new(0.5, 0.5)
			}):Play()
			springing = true
			local bezierCurve = Bezier.new(Vector3.new(thrownPosition.X.Offset, thrownPosition.Y.Offset, 0), Vector3.new(thrownPosition.X.Offset + vel.X * 10, thrownPosition.Y.Offset + vel.Y * 10, 0), Vector3.new(closedLastPos.X.Offset, closedLastPos.Y.Offset, 0))
			task.spawn(function()
				for _, point in bezierCurve:GetPath(0.08) do
					setSpringPosGoal(UDim2.new(closedLastPos.X.Scale, point.X, closedLastPos.Y.Scale, point.Y))
					task.wait()
					--print(point)
				end
			end)
			setSpringSizeGoal(UDim2.fromOffset(60, 60))
			--script.Parent.ZIndex = script.Parent.ZIndex - 2
			menu.CanvasGroup.Visible = true
			OpenerDraggable = true
			if closing then closing:Cancel() end
			TweenService:Create(menu.CanvasGroup, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
				GroupTransparency = 0
			}):Play()
		else
			lastPos = menu.Position
		end
	end

	-- Opener button behavior
	local function sign(n) if n>0 then return 1 elseif n<0 then return -1 else return 0 end end
	local function openMenu()
		TweenService:Create(menu, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			AnchorPoint = Vector2.new(0.5, 0)
		}):Play()

		local bezierCurve = Bezier.new(
			Vector3.new(closedLastPos.X.Offset, closedLastPos.Y.Offset, 0),
			Vector3.new(
				(closedLastPos.X.Offset + lastPos.X.Offset) / 2,
				lastPos.Y.Offset + (math.abs(lastPos.Y.Offset - closedLastPos.Y.Offset) * 2.5 * -math.sign(closedLastPos.Y.Offset - lastPos.Y.Offset)),
				0
			),
			Vector3.new(lastPos.X.Offset, lastPos.Y.Offset, 0)
		)

		task.spawn(function()
			for _, point in bezierCurve:GetPath(0.2) do
				setSpringPosGoal(UDim2.new(closedLastPos.X.Scale, point.X, closedLastPos.Y.Scale, point.Y))
				task.wait() task.wait() -- 2 heartbeats uwu
			end
		end)
		--setSpringPosGoal(lastPos)
		setSpringSizeGoal(UDim2.fromOffset(441, 268))
		OpenerDraggable = false
		--script.Parent.ZIndex = script.Parent.ZIndex + 2
		closing = TweenService:Create(menu.CanvasGroup, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), {
			GroupTransparency = 1
		})
		closing:Play()
		closing.Completed:Once(function(state)
			menu.CanvasGroup.Visible = false
		end)
	end
	menu.CanvasGroup.Opener.MouseButton1Click:Connect(openMenu)
	UserInputService.InputBegan:Connect(function(inp, proc)
		if proc then return end

		if UserInputService:IsKeyDown(Enum.KeyCode.LeftAlt) and inp.KeyCode == Enum.KeyCode.Y then
			openMenu()
		end
	end)

	script.Parent.AllowForSpring.Event:Wait()
	springing = true
end
local function NFLXNSA_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Init
	local script = Instance.new("LocalScript")
	script.Name = "Init"
	script.Parent = Converted["_ThanhNeBro"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	getgenv().Modules = {}

	local ts = game:GetService("TweenService")


	getgenv().ThanhNeBro = script.Parent
	getgenv().ThemeManager = require(script.Parent.Theme)
	local COREGUI = game:GetService("CoreGui")
	function randomString()
		local length = math.random(10,20)
		local array = {}
		for i = 1, length do
			array[i] = string.char(math.random(32, 126))
		end
		return table.concat(array)
	end
	local s, e = pcall(function()
		if get_hidden_gui or gethui then
			local hiddenUI = get_hidden_gui or gethui
			script.Parent.Name = randomString()
			script.Parent.Parent = hiddenUI()
			--print("[ThanhNeBro] - Using get_hidden_gui for anti-detection.")
		elseif (not is_sirhurt_closure) and (syn and syn.protect_gui) then
			script.Parent.Name = randomString()
			syn.protect_gui(script.Parent)
			script.Parent.Parent = COREGUI
			--print("[ThanhNeBro] - Using syn.protect_gui for anti-detection.")
		elseif COREGUI:FindFirstChild('RobloxGui') then
			script.Parent.Parent = COREGUI.RobloxGui
			--print("[ThanhNeBro] - Using RobloxGui for anti-detection.")
		else
			--warn("[ThanhNeBro] - Using CoreGui as anti-detection. This is the most basic coverage and can still be detected.")
		end
	end)

	--print("[ThanhNeBro] - ThanhNeBro is now in " .. tostring(script.Parent:GetFullName()))
	if not s then
		--warn("[ThanhNeBro] - Attempts at anti-detection failed. Using CoreGui as anti-detection.")
		warn(e)	
	end

	--printidentity("[ThanhNeBro] - Your executor level (identity) is")

	local getExeName = identifyexecutor or getexecutorname or function() return "Yet Another Roblox Executor v1.2" end
	--print("[ThanhNeBro] - Your executor is " .. getExeName())

	script.Parent.SafeAreaCompatibility = Enum.SafeAreaCompatibility.None
	script.Parent.ScreenInsets = Enum.ScreenInsets.None
	script.Parent.ResetOnSpawn = false


	script.Parent.Menu.Position = UDim2.fromScale(0.5, -0.6)
	--script.Parent.Menu.Size = UDim2.fromOffset(441,0)

	script.Parent.Dialog.Size = UDim2.fromOffset(0, 147)
	script.Parent.Dialog.UIScale.Scale = 0

	script.Parent.Dialog.Visible = true

	script.Parent.Menu.CanvasGroup.Visible = true
	script.Parent.Menu.CanvasGroup.GroupTransparency = 0

	if not game:IsLoaded() then
		game.Loaded:Wait()
	end
	require(script.Parent.FUNCTIONS).notification("Welcome to ThanhNeBro Nebula.")

	ts:Create(script.Parent.Menu, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), 
		{Position = UDim2.fromScale(0.5, 0.05)}
	):Play()

	task.wait(1)
	ts:Create(script.Parent.Menu.CanvasGroup, TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out), 
		{GroupTransparency = 1}
	):Play()
	require(script.Parent.FUNCTIONS).refreshlist()
	task.wait(0.5)
	script.Parent.Menu.CanvasGroup.Visible = false
	script.Parent.Menu.CanvasGroup.TextLabel.Visible = false
	script.Parent.Menu.CanvasGroup.ImageLabel.Visible = true
	script.Parent.Menu.CanvasGroup.Interactable = true

	script.Parent.Menu.CloseArea.AllowForSpring:Fire()
	task.wait(1)
	require(script.Parent.FUNCTIONS).loadFloatingButtons()
	--require(script.Parent.Theme):init(getgenv().ThanhNeBro)

	--require(script.Parent.FUNCTIONS).refreshlist()
	--require(script.Parent.FUNCTIONS).refresharea()

	--getgenv().ThemeManager:init(script.Parent)
end
local function DFEDO_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Forsaken
	local script = Instance.new("LocalScript")
	script.Name = "Forsaken"
	script.Parent = Converted["_ThanhNeBro"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	-- Module setup
	local module = {}
	module.gameId = 6331902150
	module.Name = "Forsaken"

	local fu = require(getgenv().ThanhNeBro.FUNCTIONS)
	if (module.gameId ~= game.GameId) then
		table.insert(module, {
			Type = "Text",
			Args = {"ThanhNeBro now includes an official <font color='#FFFF00'>Forsaken</font> module!"}
		})
		table.insert(module, {
			Type = "Text",
			Args = {"<font size='10'>To use, run ThanhNeBro on Forsaken.</font>"}
		})
		repeat task.wait() until getgenv().Modules
		getgenv().Modules[4] = module
		return
	end

	-- Imports
	local ts = game:GetService("TweenService")

	local espind = require(script.Parent.ESPIndicator)
	local espcontainer = espind.new({EdgePadding = 60, ShowDistanceText = true})

	-- Toggles
	module.players = false
	module.items = false
	module.generators = false
	module.priotizingmedkit = false
	module.infinitestamina = false

	-- Cooldowns
	local solveGeneratorCooldown = false

	-- Connections
	local conns = {}

	-- ESP Helpers
	local function addPlayer(p)
		espcontainer:Add(p, {AccentColor = Color3.new(0.149, 1, 0), ArrowShow = false, ShowLabel = false, GroupName = "players"})
	end

	local function addKiller(k)
		espcontainer:Add(k, {
			AccentColor = Color3.new(1, 0, 0),
			ArrowShow = true,
			ArrowMinDistance = 999999,
			ArrowSize = UDim2.new(0, 40, 0, 40),
			LabelText = "Killer",
			ShowLabel = true,
			GroupName = "players"
		})
	end

	local function addItem(i)
		local cfg = {AccentColor = Color3.new(0.0313725, 0.917647, 1), ArrowShow = false, ShowLabel = false, GroupName = "items"}
		if module.priotizingmedkit and i.Name == "Medkit" then
			fu.notification("Medkit spawned!")
			cfg = {
				AccentColor = Color3.new(1, 1, 1),
				ArrowShow = true,
				ArrowMinDistance = 999999,
				ArrowSize = UDim2.new(0, 40, 0, 40),
				LabelText = "Medkit",
				ShowLabel = true,
				GroupName = "items"
			}
		end
		espcontainer:Add(i, cfg)
	end

	local function addGenerator(g)
		local progVal = g:FindFirstChild("Progress")
		local progress = (progVal and progVal.Value) or 0

		local showLabel = true
		local showArrow = true
		local accentColor = Color3.new(0.984, 1, 0)       
		local labelText = tostring(math.floor(progress)) .. "%"

		if progress >= 100 then
			showLabel = false
			showArrow = false
			accentColor = Color3.new(0, 0.5, 0)           
		end

		espcontainer:Add(g, {
			AccentColor      = accentColor,
			ArrowShow        = showArrow,
			ArrowMinDistance = 999999,
			ArrowSize        = UDim2.new(0,20,0,20),
			ShowLabel        = showLabel,
			LabelText        = labelText,
			GroupName        = "generators",
		})

		if progVal then
			progVal.Changed:Connect(function(new)
				espcontainer:Remove(g)
				addGenerator(g)
			end)
		end
	end

	local function getClosestGenerator()
		local char = game.Players.LocalPlayer.Character
		if not char or not char.PrimaryPart then return nil end

		local root = char.PrimaryPart
		local closest, shortestDist = nil, math.huge

		local map = workspace.Map:FindFirstChild("Ingame"):FindFirstChild("Map")
		if map then
			for _, obj in ipairs(map:GetChildren()) do
				if obj.Name == "Generator" and obj:IsA("Model") and obj.PrimaryPart then
					local dist = (root.Position - obj.PrimaryPart.Position).Magnitude
					if dist < shortestDist then
						closest = obj
						shortestDist = dist
					end
				end
			end
		end

		return closest
	end

	local function removeIndicator(obj)
		espcontainer:Remove(obj)
	end

	local function listen(parent, signal, callback)
		local conn = signal:Connect(callback)
		table.insert(conns, conn)
		return conn
	end

	local function setupAutoUpdate()
		local s, k = workspace.Players:FindFirstChild("Survivors"), workspace.Players:FindFirstChild("Killers")
		if s then
			listen(s, s.ChildAdded, function(c) 
				if module.players then addPlayer(c) end 
			end)
			listen(s, s.ChildRemoved, function(c) 
				if module.players then removeIndicator(c) end 
			end)
		end
		if k then
			listen(k, k.ChildAdded, function(c) 
				if module.players then addKiller(c) end 
			end)
			listen(k, k.ChildRemoved, function(c) 
				if module.players then removeIndicator(c) end 
			end)
		end

		local ingame = workspace.Map:FindFirstChild("Ingame")
		if ingame then
			listen(ingame, ingame.ChildAdded, function(c) 
				if module.items and c.Name ~= "Map" then addItem(c) end 
			end)
			listen(ingame, ingame.ChildRemoved, function(c) 
				if module.items and c.Name ~= "Map" then removeIndicator(c) end 
			end)
			local map = ingame:FindFirstChild("Map")
			if map then
				listen(map, map.ChildAdded, function(c) 
					if module.generators and c.Name == "Generator" then addGenerator(c) end 
				end)
				listen(map, map.ChildRemoved, function(c) 
					if module.generators and c.Name == "Generator" then removeIndicator(c) end 
				end)
			end
		end
	end

	function module.clear()
		for _, c in ipairs(conns) do c:Disconnect() end
		table.clear(conns)
		espcontainer:ClearAllGroups()
	end

	-- Sprinting Patch
	task.spawn(function()
		local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
		while task.wait(1) do
			if module.infinitestamina then
				sprintingModule.StaminaLossDisabled = true
			end
		end
	end)

	-- UI Setup
	table.insert(module, { Type = "Text", Args = {"ESPs"} })

	table.insert(module, {
		Type = "ButtonGrid",
		Toggleable = true,
		Args = {3, {
			Players = function(Self)
				module.players = not module.players
				if module.players then
					local survivors = workspace.Players:FindFirstChild("Survivors")
					if survivors then
						for _, p in ipairs(survivors:GetChildren()) do
							addPlayer(p)
						end
					end
					local killers = workspace.Players:FindFirstChild("Killers")
					if killers then
						local killer = killers:GetChildren()[1]
						if killer then addKiller(killer) end
					end
					--espcontainer:ToggleGroup("players", true)
				else
					espcontainer:RemoveGroup("players")
				end
			end,
			Items = function(Self)
				module.items = not module.items
				if module.items then
					local ingame = workspace.Map:FindFirstChild("Ingame")
					if ingame then
						for _, i in ipairs(ingame:GetChildren()) do
							if i.Name ~= "Map" then addItem(i) end
						end
					end
					--espcontainer:ToggleGroup("items", true)
				else
					espcontainer:RemoveGroup("items")
				end
			end,
			Generators = function(Self)
				module.generators = not module.generators
				if module.generators then
					local ingame = workspace.Map:FindFirstChild("Ingame")
					if ingame then
						local map = ingame:FindFirstChild("Map")
						if map then
							for _, g in ipairs(map:GetChildren()) do
								if g.Name == "Generator" then addGenerator(g) end
							end
						end
					end
					--espcontainer:ToggleGroup("generators", true)
				else
					espcontainer:RemoveGroup("generators")
				end
			end,
		}}
	})

	table.insert(module, {
		Type = "Toggle",
		Args = {"Show medkit in item ESP", function(Self, state)
			module.priotizingmedkit = state
			espcontainer:RemoveGroup("items")
			if module.items then
				local ingame = workspace.Map:FindFirstChild("Ingame")
				if ingame then
					for _, i in ipairs(ingame:GetChildren()) do
						if i.Name ~= "Map" then addItem(i) end
					end
				end
				--espcontainer:ToggleGroup("items", true)
			end
		end}
	})

	table.insert(module, { Type = "Text", Args = {"Tools"} })

	table.insert(module, {
		Type = "Button",
		Args = {"Finish generator puzzle", function(Self)
			if solveGeneratorCooldown then fu.notification("Slow down!") return end
			solveGeneratorCooldown = true
			if getClosestGenerator() then
				getClosestGenerator().Remotes.RE:FireServer()
			end
			task.wait(10) solveGeneratorCooldown = false
		end}
	})

	table.insert(module, { Type = "Text", Args = {"You will automatically solve the closest generator."} })

	table.insert(module, { Type = "Text", Args = {"<font color='#FF0000'>Detectables</font>"} })

	table.insert(module, {
		Type = "Toggle",
		Args = {"Infinite stamina", function(Self, state)
			module.infinitestamina = state
			if not state then
				local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
				sprintingModule.StaminaLossDisabled = false
			end
		end}
	})

	table.insert(module, {
		Type = "Input",
		Args = {"Sprinting speed (Default = 26)", "Set sprint speed", function(Self, text)
			local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
			sprintingModule.SprintSpeed = tonumber(text) or 26
		end}
	})

	table.insert(module, {
		Type = "Input",
		Args = {"Stamina gain rate (Default = 20)", "Set stamina gain", function(Self, text)
			local sprintingModule = require(game:GetService("ReplicatedStorage").Systems.Character.Game.Sprinting)
			sprintingModule.StaminaGain = tonumber(text) or 20
		end}
	})

	-- Final setup
	setupAutoUpdate()
	repeat task.wait() until getgenv().Modules
	getgenv().Modules[4] = module
end
local function QUXUEEW_fake_script() -- Fake Script: StarterGui.ThanhNeBro.Murder Mystery 2
	local script = Instance.new("LocalScript")
	script.Name = "Murder Mystery 2"
	script.Parent = Converted["_ThanhNeBro"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	local module = {}
	module["gameId"] = 0 -- 66654135 -- Restrict module to a certain game ID only. 0 allows all games.


	local fu = require(getgenv().ThanhNeBro.FUNCTIONS)
	local espindc = require(script.Parent.ESPIndicator)

	local espcontainer = espindc.new({EdgePadding = 120, ShowDistanceText = false,})

	local playerESP = false
	local sheriffAimbot = false
	local coinAutoCollect = false
	local autoShooting = false
	local shootOffset = 2.8
	local offsetToPingMult = 1

	local gunDropESP

	local trapDetection = false
	--local trapESP = Instance.new("Highlight")
	--trapESP.Name = "TrapESP"
	--trapESP.FillColor = Color3.fromRGB(255, 112, 10)
	--trapESP.OutlineColor = Color3.fromRGB(255, 112, 10)
	--trapESP.FillTransparency = 0.5


	local autoGetDroppedGun = false
	local simulateKnifeThrow = false

	local localplayer = game:GetService("Players").LocalPlayer

	local playerData = {}

	local phs = game:GetService("PathfindingService")
	local ts = game:GetService("TweenService")
	local rs = game:GetService("RunService")

	local claimedCoins = {}

	local function findMurderer()


		-- Fallback
		for _, i in ipairs(game.Players:GetPlayers()) do
			if i.Backpack:FindFirstChild("Knife") then
				return i
			end
		end

		for _, i in ipairs(game.Players:GetPlayers()) do
			if not i.Character then continue end
			if i.Character:FindFirstChild("Knife") then
				return i
			end
		end

		if playerData then
			for player, data in playerData do
				if data.Role == "Murderer" then
					if game.Players:FindFirstChild(player) then
						return game.Players:FindFirstChild(player)
					end
				end
			end
		end
		return nil
	end

	local function findSheriff()


		-- Fallback
		for _, i in ipairs(game.Players:GetPlayers()) do
			if i.Backpack:FindFirstChild("Gun") then
				return i
			end
		end

		for _, i in ipairs(game.Players:GetPlayers()) do
			if not i.Character then continue end
			if i.Character:FindFirstChild("Gun") then
				return i
			end
		end


		if playerData then
			for player, data in playerData do
				if data.Role == "Sheriff" then
					if game.Players:FindFirstChild(player) then
						return game.Players:FindFirstChild(player)
					end
				end
			end
		end
		return nil
	end

	local function findSheriffThatsNotMe()


		-- Fallback
		for _, i in ipairs(game.Players:GetPlayers()) do
			if i == localplayer then continue end
			if i.Backpack:FindFirstChild("Gun") then
				return i
			end
		end

		for _, i in ipairs(game.Players:GetPlayers()) do
			if i == localplayer then continue end
			if not i.Character then continue end
			if i.Character:FindFirstChild("Gun") then
				return i
			end
		end


		if playerData then
			for player, data in playerData do
				if data.Role == "Sheriff" then
					if game.Players:FindFirstChild(player) then
						if game.Players:FindFirstChild(player) == localplayer then continue end
						return game.Players:FindFirstChild(player)
					end
				end
			end
		end
		return nil
	end

	function reloadESP()
		espcontainer:RemoveGroup("players")
		local listplayers = game.Players:GetChildren()
		for _, player in ipairs(listplayers) do
			if  player.Character ~= nil then
				local character = player.Character
				if true then

					task.spawn(function()
						if player == findMurderer() then
							espcontainer:Add(character, {
								AccentColor    =  Color3.new(1, 0, 0.0156863),
								ArrowShow        = true,
								ArrowMinDistance       = 999999,           
								ArrowSize         = UDim2.new(0,40,0,40),
								LabelText         = "Murderer",
								ShowLabel         = true,
								GroupName         = "players"
							})
						elseif player == findSheriff() then
							espcontainer:Add(character, {
								AccentColor    =  Color3.new(0, 0.6, 1),
								ArrowShow        = false,
								ShowLabel         = false,
								GroupName         = "players"
							})
						else
							espcontainer:Add(character, {
								AccentColor    =  Color3.new(0, 1, 0.0313725),
								ArrowShow        = false,
								ShowLabel         = false,
								GroupName         = "players"
							})
						end
						--if a then
						--	if not player then return end
						--	a.Adornee = player.Character or player.CharactedAdded:Wait()
						--end
					end)
				end
			end
		end
	end



	if not game.ReplicatedStorage:WaitForChild("Remotes", 10) then
		fu.dialog("Not MM2", "Looks like this game isn't MM2. Do you want to load the module anyway?", {"Load", "No"})

		if fu.waitfordialog() == "No" then
			fu.closedialog()
			fu.notification("MM2 will not be loaded until you rejoin.", Color3.fromRGB(255, 0, 0), "x")
			return
		end	
		fu.closedialog()
	else
		game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Gameplay"):WaitForChild("PlayerDataChanged", 5).OnClientEvent:Connect(function(data)
			playerData = data
			if playerESP then
				reloadESP()
			end
		end)
	end

	local onTesting = game.GameId == 119460199

	--if game.ReplicatedStorage:WaitForChild("UpdatePlayerData", 1) then
	--	local UpdatePlayerDataEvent = game.ReplicatedStorage:WaitForChild("UpdatePlayerData", 5)
	--	if UpdatePlayerDataEvent then
	--		UpdatePlayerDataEvent.OnClientEvent:Connect(function(data)
	--			playerData = data
	--		end)
	--	end
	--end

	local Players = game:GetService("Players")
	local playerToExamineIsSpamJumping = false




	local function findNearestPlayer()
		local Players = game:GetService("Players")
		local localPlayer = Players.LocalPlayer

		local nearestPlayer = nil
		local shortestDistance = math.huge -- Initialize with a very large distance

		-- Iterate through all players
		for _, player in ipairs(Players:GetPlayers()) do
			-- Skip the local player and any players who have left the game
			if player ~= localPlayer and player.Character then 

				-- Get the positions of both players' HumanoidRootParts
				local localRootPart = localPlayer.Character:FindFirstChild("HumanoidRootPart")
				local otherRootPart = player.Character:FindFirstChild("HumanoidRootPart")

				-- Ensure both players have a HumanoidRootPart for accurate distance calculation
				if localRootPart and otherRootPart then
					local distance = (localRootPart.Position - otherRootPart.Position).Magnitude

					-- Update nearest player if a closer one is found
					if distance < shortestDistance then
						shortestDistance = distance
						nearestPlayer = player
					end
				end
			end
		end

		return nearestPlayer
	end

	function miniFling(playerToFling)
		local a=game.Players.LocalPlayer;local b=a:GetMouse()local c={playerToFling}local d=game:GetService("Players")local e=d.LocalPlayer;local f=false;local g=function(h)local i=e.Character;local j=i and i:FindFirstChildOfClass("Humanoid")local k=j and j.RootPart;local l=h.Character;local m;local n;local o;local p;local q;if l:FindFirstChildOfClass("Humanoid")then m=l:FindFirstChildOfClass("Humanoid")end;if m and m.RootPart then n=m.RootPart end;if l:FindFirstChild("Head")then o=l.Head end;if l:FindFirstChildOfClass("Accessory")then p=l:FindFirstChildOfClass("Accessory")end;if p and p:FindFirstChild("Handle")then q=p.Handle end;if i and j and k then if k.Velocity.Magnitude<50 then getgenv().OldPos=k.CFrame end;if m and m.Sit and not f then end;if o then if o.Velocity.Magnitude>500 then fu.dialog("Player flung","Player is already flung. Fling again?",{"Fling again","No"})if fu.waitfordialog()=="No"then return fu.closedialog()end;fu.closedialog()end elseif not o and q then if q.Velocity.Magnitude>500 then fu.dialog("Player flung","Player is already flung. Fling again?",{"Fling again","No"})if fu.waitfordialog()=="No"then return fu.closedialog()end;fu.closedialog()end end;if o then workspace.CurrentCamera.CameraSubject=o elseif not o and q then workspace.CurrentCamera.CameraSubject=q elseif m and n then workspace.CurrentCamera.CameraSubject=m end;if not l:FindFirstChildWhichIsA("BasePart")then return end;local r=function(s,t,u)k.CFrame=CFrame.new(s.Position)*t*u;i:SetPrimaryPartCFrame(CFrame.new(s.Position)*t*u)k.Velocity=Vector3.new(9e7,9e7*10,9e7)k.RotVelocity=Vector3.new(9e8,9e8,9e8)end;local v=function(s)local w=2;local x=tick()local y=0;repeat if k and m then if s.Velocity.Magnitude<50 then y=y+100;r(s,CFrame.new(0,1.5,0)+m.MoveDirection*s.Velocity.Magnitude/1.25,CFrame.Angles(math.rad(y),0,0))task.wait()r(s,CFrame.new(0,-1.5,0)+m.MoveDirection*s.Velocity.Magnitude/1.25,CFrame.Angles(math.rad(y),0,0))task.wait()r(s,CFrame.new(2.25,1.5,-2.25)+m.MoveDirection*s.Velocity.Magnitude/1.25,CFrame.Angles(math.rad(y),0,0))task.wait()r(s,CFrame.new(-2.25,-1.5,2.25)+m.MoveDirection*s.Velocity.Magnitude/1.25,CFrame.Angles(math.rad(y),0,0))task.wait()r(s,CFrame.new(0,1.5,0)+m.MoveDirection,CFrame.Angles(math.rad(y),0,0))task.wait()r(s,CFrame.new(0,-1.5,0)+m.MoveDirection,CFrame.Angles(math.rad(y),0,0))task.wait()else r(s,CFrame.new(0,1.5,m.WalkSpeed),CFrame.Angles(math.rad(90),0,0))task.wait()r(s,CFrame.new(0,-1.5,-m.WalkSpeed),CFrame.Angles(0,0,0))task.wait()r(s,CFrame.new(0,1.5,m.WalkSpeed),CFrame.Angles(math.rad(90),0,0))task.wait()r(s,CFrame.new(0,1.5,n.Velocity.Magnitude/1.25),CFrame.Angles(math.rad(90),0,0))task.wait()r(s,CFrame.new(0,-1.5,-n.Velocity.Magnitude/1.25),CFrame.Angles(0,0,0))task.wait()r(s,CFrame.new(0,1.5,n.Velocity.Magnitude/1.25),CFrame.Angles(math.rad(90),0,0))task.wait()r(s,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(90),0,0))task.wait()r(s,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))task.wait()r(s,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(-90),0,0))task.wait()r(s,CFrame.new(0,-1.5,0),CFrame.Angles(0,0,0))task.wait()end else break end until s.Velocity.Magnitude>500 or s.Parent~=h.Character or h.Parent~=d or h.Character~=l or m.Sit or j.Health<=0 or tick()>x+w end;workspace.FallenPartsDestroyHeight=0/0;local z=Instance.new("BodyVelocity")z.Name="EpixVel"z.Parent=k;z.Velocity=Vector3.new(9e8,9e8,9e8)z.MaxForce=Vector3.new(1/0,1/0,1/0)j:SetStateEnabled(Enum.HumanoidStateType.Seated,false)if n and o then if(n.CFrame.p-o.CFrame.p).Magnitude>5 then v(o)else v(n)end elseif n and not o then v(n)elseif not n and o then v(o)elseif not n and not o and p and q then v(q)else fu.notification("Can't find a proper part of target player to fling.")end;z:Destroy()j:SetStateEnabled(Enum.HumanoidStateType.Seated,true)workspace.CurrentCamera.CameraSubject=j;repeat k.CFrame=getgenv().OldPos*CFrame.new(0,.5,0)i:SetPrimaryPartCFrame(getgenv().OldPos*CFrame.new(0,.5,0))j:ChangeState("GettingUp")table.foreach(i:GetChildren(),function(A,B)if B:IsA("BasePart")then B.Velocity,B.RotVelocity=Vector3.new(),Vector3.new()end end)task.wait()until(k.Position-getgenv().OldPos.p).Magnitude<25;workspace.FallenPartsDestroyHeight=getgenv().FPDH else fu.notification("No valid character of said target player. May have died.")end end;g(c[1])
	end

	function getMap()
		for _, o in ipairs(workspace:GetChildren()) do
			if o:FindFirstChild("CoinContainer") and o:FindFirstChild("Spawns") then
				return o
			end
		end
		return nil
	end



	--task.spawn(function() 
	--	if game:GetService("RunService"):IsStudio() then return end -- :)

	--local OldNameCall = nil

	--OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
	--	local Args = {...}
	--	local NamecallMethod = getnamecallmethod()

	--	if NamecallMethod == "InvokeServer" and Args[1] == 1 and sheriffAimbot then
	--		if not findMurderer() then
	--			print("No murderer to be shot!")
	--		else
	--			print("Shot - Intercepting shot to murderer")
	--			Args[2] = findMurderer().Character:FindFirstChild("HumanoidRootPart").Position
	--		end
	--	end

	--	return OldNameCall(Self, unpack(Args))
	--end)

	--end)

	-- I honestly don't know what went wrong so if any of you experts know why this stuff aint working make a pull request :praying_hands_emoji:


	module["Name"] = "Murder Mystery 2"

	-- Player ESP
	workspace.ChildAdded:Connect(function(ch)
		if ch == getMap() and playerESP then
			fu.notification("Map has loaded, waiting for roles...")
			repeat
				task.wait(1)
			until findMurderer()

			fu.notification("Player ESP reloaded.")
		end
	end)

	workspace.ChildRemoved:Connect(function(ch)
		if ch == getMap() and playerESP then
			fu.notification("Game ended, removing Player ESPs.")
			playerData = {}
			espcontainer:ClearAllGroups()
		end
	end)

	-- Dropped Gun ESP
	workspace.DescendantAdded:Connect(function(ch)
		if trapDetection and ch.Name == "Trap" and ch.Parent:IsDescendantOf(workspace) then
			ch.Transparency = 0
			espcontainer:Add(ch, {
				AccentColor    =  Color3.new(1, 0, 0.0156863),
				ArrowShow        = false,
				ShowLabel         = true,
				LabelText         = "Trap",
				GroupName         = "trap"
			})

			fu.notification("Murderer has placed a trap!")
		end

		if gunDropESP and ch.Name == "GunDrop" then
			espcontainer:Add(ch, {
				AccentColor    =  Color3.new(0.952941, 1, 0.0745098),
				ArrowShow        = true,
				ArrowMinDistance       = 999999,      
				ArrowSize         = UDim2.new(0,40,0,40),
				LabelText         = "Dropped gun!",
				ShowLabel         = true,
				GroupName         = "gun"
			})
			--if not script.Parent:FindFirstChild("GunESP") then
			--	local gunesp = Instance.new("Highlight", script.Parent)
			--	gunesp.OutlineTransparency = 1
			--	gunesp.FillColor = Color3.fromRGB(255, 255, 0)
			--	gunesp.Name = "GunESP"
			--	gunesp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
			--	gunesp.Adornee = ch
			--	gunesp.Enabled = true
			--end
			--script.Parent:FindFirstChild("GunESP").Adornee = ch
			--script.Parent:FindFirstChild("GunESP").Enabled = true
			--local bguiclone = script.Parent.DroppedGunBGUI:Clone()
			--bguiclone.Parent = script.Parent
			--bguiclone.Adornee = ch
			--bguiclone.Enabled = true
			--bguiclone.Name = "DGBGUIClone"
			fu.notification("Gun has been dropped! Find a yellow highlight.")
			if autoGetDroppedGun then
				fu.notification("Auto get dropped gun - Cooling down...")
				task.wait(1)
				if not getMap():FindFirstChild("GunDrop") then fu.notification("No dropped gun to be teleported to.") return end
				local previousPosition = localplayer.Character:GetPivot()
				localplayer.Character:MoveTo(getMap():FindFirstChild("GunDrop").Position)
				localplayer.Backpack.ChildAdded:Wait()
				localplayer.Character:PivotTo(previousPosition)
			end
		end
	end)

	workspace.DescendantRemoving:Connect(function(ch)
		if gunDropESP and ch.Name == "GunDrop" then
			espcontainer:RemoveGroup("gun")
			fu.notification("Someone has took the dropped gun.")
			task.wait(1)
			fu.notification("The hero is " .. findSheriff().DisplayName .. ".")
			reloadESP()
			--if playerESP then
			--	for _, v in ipairs(script.Parent:GetChildren()) do
			--		if v:IsA("Highlight") then
			--			v:Destroy()
			--		end
			--	end
			--end

			--local listplayers = game.Players:GetChildren()
			--for _, player in ipairs(listplayers) do
			--	if  player.Character ~= nil then
			--		local character = player.Character
			--		if not character:FindFirstChild("PlayerESP") then
			--			local a = Instance.new("Highlight", script.Parent)
			--			a.Name = "PlayerESP"
			--			a.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
			--			a.Adornee = character
			--			a.FillColor = Color3.fromRGB(255, 255, 255)
			--			a.FillTransparency = 0.5
			--			task.spawn(function()
			--				if player == findMurderer() then
			--					local mbgui = script.Parent.MurdererBGUI:Clone()
			--					mbgui.Enabled = true
			--					mbgui.Name = "AppliedMurdererBGUI"
			--					mbgui.Parent = getgenv().ThanhNeBro
			--					mbgui.Adornee = character
			--					a.FillColor = Color3.fromRGB(255,0,0)
			--					a.OutlineColor = Color3.fromRGB(255,0,0)
			--				elseif player == findSheriff() then
			--					a.FillColor = Color3.fromRGB(255, 255,0)
			--					a.OutlineColor = Color3.fromRGB(255, 255,0)
			--				else
			--					a.FillColor = Color3.fromRGB(0,255,0)
			--					a.OutlineColor = Color3.fromRGB(0, 255, 0)
			--				end
			--				if a then
			--					if not player then return end
			--					a.Adornee = player.Character or player.CharactedAdded:Wait()
			--				end
			--			end)
			--		end
			--	end
			--end
		end
	end)

	function getClosestModelToPlayer(player, models)
		local closestModel = nil
		local closestDistance = math.huge 

		local playerPosition = player.Character.HumanoidRootPart.Position

		for _, model in ipairs(models) do
			local modelPosition = model:GetPivot().Position
			local distance = (modelPosition - playerPosition).Magnitude
			if distance < closestDistance then
				closestDistance = distance
				closestModel = model
			end
		end

		local returningResult = {closestModel, closestDistance}
		setmetatable(returningResult, {
			__tostring = function(t)
				return closestModel
			end,
		})

		return returningResult
	end

	-- Coin autocollect
	task.spawn(
		function()
			while task.wait(0.1) do
				if not coinAutoCollect then continue end

				if getMap() then
					if getMap():FindFirstChild("CoinContainer") and #getMap():FindFirstChild("CoinContainer"):GetChildren() > 1 then
						local closestCoin = getClosestModelToPlayer(localplayer, getMap():FindFirstChild("CoinContainer"):GetChildren())
						if closestCoin then
							if not localplayer.Character:FindFirstChild("HumanoidRootPart") then continue end
							local distance = (localplayer.Character:FindFirstChild("HumanoidRootPart").Position - closestCoin:GetPivot().Position).Magnitude
							local toclosestcoin = ts:Create(localplayer.Character:FindFirstChild("HumanoidRootPart"), TweenInfo.new(distance*0.05, Enum.EasingStyle.Linear), {
								CFrame = closestCoin:GetPivot()
							})
							toclosestcoin:Play()
							toclosestcoin.Completed:Wait()
							task.wait(0.1)
							closestCoin:Destroy() -- so we wont try to get it anymore
							--localplayer.Character:MoveTo(Vector3.new(closestCoin:GetPivot().X, closestCoin:GetPivot().Y, closestCoin:GetPivot().Z))
							claimedCoins[closestCoin] = true
						end
					end
				end
			end
		end
	)



	local function getPredictedPosition(player, shootOffset)
		pcall(function()
			player = player.Character
			if not player.Character then fu.notification("No murderer to predict position.") return end
		end)
		local playerHRP = player:FindFirstChild("UpperTorso")
		local playerHum = player:FindFirstChild("Humanoid")
		if not playerHRP or not playerHum then
			return Vector3.new(0,0,0), "Could not find the player's HumanoidRootPart."
		end

		local playerPosition = playerHRP.Position
		local velocity = Vector3.new()
		velocity = playerHRP.AssemblyLinearVelocity
		local playerMoveDirection = playerHum.MoveDirection
		local playerLookVec = playerHRP.CFrame.LookVector
		local yVelFactor = velocity.Y > 0 and -1 or 0.5
		local predictedPosition
		predictedPosition = playerHRP.Position + ((velocity * Vector3.new(0, 0.5, 0))) * (shootOffset / 15) +playerMoveDirection * shootOffset
		predictedPosition = predictedPosition * (((localplayer:GetNetworkPing() * 1000) * ((offsetToPingMult - 1) * 0.01)) + 1)
		-- failed so hard i had to revert back to v1.11 :sob:

		--predictedPosition = Vector3.new(predictedPositiomurdererHRP.Position + ((murdererVelocity * Vector3.new(0, 0.5, 0))) * (shootOffset / 15) + murderer.Character.Humanoid.MoveDirection * shootOffsetn.X, math.clamp(predictedPosition.Y, playerPosition.Y - 2, playerPosition.Y + 2), predictedPosition.Z)


		return predictedPosition
	end




	task.spawn(function()
		while task.wait(1) do
			if findSheriff() == localplayer and autoShooting then
				fu.notification("Auto-shooting started.")
				repeat
					task.wait(0.1)
					local murderer = findMurderer()
					if not murderer then fu.notification("No murderer.") continue end
					local murdererPosition = murderer.Character.HumanoidRootPart.Position
					local characterRootPart = localplayer.Character.HumanoidRootPart
					local rayDirection = murdererPosition - characterRootPart.Position

					local raycastParams = RaycastParams.new()
					raycastParams.FilterType = Enum.RaycastFilterType.Exclude
					raycastParams.FilterDescendantsInstances = {localplayer.Character}

					local hit = workspace:Raycast(characterRootPart.Position, rayDirection, raycastParams)
					if not hit or hit.Instance.Parent == murderer.Character then -- Check if nothing collides or if it collides with the murderer
						fu.notification("Auto-shooting!")
						if not localplayer.Character:FindFirstChild("Gun") then
							local hum = localplayer.Character:FindFirstChild("Humanoid")
							if localplayer.Backpack:FindFirstChild("Gun") then
								localplayer.Character:FindFirstChild("Humanoid"):EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
							else
								fu.notification("You don't have the gun..?")
								return
							end
						end
						local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
						if not murdererHRP then
							fu.notification("Could not find the murderer's HumanoidRootPart.")
							return
						end

						local predictedPosition = getPredictedPosition(murderer, shootOffset)

						local args = {
							[1] = 1,
							[2] = predictedPosition,
							[3] = "AH2"
						}


						localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))



					end
				until findSheriff() ~= localplayer or not autoShooting
			end
		end
	end)

	table.insert(module, {
		Type = "Text",
		Args = {"ESPs"}
	})


	table.insert(module, {
		Type = "ButtonGrid",
		Toggleable = true,
		Args = {2, {
			Players = function()
				if playerESP then
					playerESP = false
					espcontainer:RemoveGroup("players")
				else
					playerESP = true
					if not findMurderer() or not findSheriff() then
						fu.notification("No roles yet. Waiting for roles...")
						repeat
							task.wait(1)
						until findSheriff() or findMurderer()
					end
					reloadESP()
				end
			end,

			Dropped_Gun = function()
				if gunDropESP then
					gunDropESP = false
					espcontainer:RemoveGroup("gun")
				else
					gunDropESP = true
					if not getMap() then return end
					if getMap():FindFirstChild("GunDrop") then
						espcontainer:Add(getMap():FindFirstChild("GunDrop"), {
							AccentColor    =  Color3.new(0.952941, 1, 0.0745098),
							ArrowShow        = true,
							ArrowMinDistance       = 999999,      
							ArrowSize         = UDim2.new(0,40,0,40),
							LabelText         = "Dropped gun!",
							ShowLabel         = true,
							GroupName         = "gun"
						})
						fu.notification("Gun has been dropped! Find a yellow highlight.")
					end

				end
			end,

			Traps = function()
				if trapDetection then
					trapDetection = false
					espcontainer:RemoveGroup("trap")
				else
					trapDetection = true
					for _, v in ipairs(workspace:GetDescendants()) do
						if v.Name == "Trap" and v.Parent:IsDescendantOf(workspace) then
							v.Transparency = 0
							espcontainer:Add(v, {
								AccentColor    =  Color3.new(1, 0, 0.0156863),
								ArrowShow        = false,
								ShowLabel         = true,
								LabelText         = "Trap",
								GroupName         = "trap"
							})
						end
					end
				end
			end,
		}}
	})

	table.insert(module, {
		Type = "Text",
		Args = {"Tools"}
	})


	table.insert(module, {
		Type = "Button",
		Args = {"Shoot murderer", function(Self)
			if findSheriff() ~= localplayer then 
				fu.notification("You're not sheriff/hero.") 
				return 
			end

			local murderer = findMurderer() or findSheriffThatsNotMe()
			if not murderer then
				fu.notification("No murderer (or sheriff) to shoot.")
				return
			end

			if not localplayer.Character:FindFirstChild("Gun") then
				local hum = localplayer.Character:FindFirstChild("Humanoid")
				if localplayer.Backpack:FindFirstChild("Gun") then
					hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
				else
					fu.notification("You don't have the gun..?")
					return
				end
			end

			local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
			if not murdererHRP then
				fu.notification("Could not find the murderer's HumanoidRootPart.")
				return
			end

			local predictedPosition = getPredictedPosition(murderer, shootOffset)

			local args = {
				[1] = 1,
				[2] = predictedPosition,
				[3] = "AH2"
			}


			localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
		end,}
	})

	table.insert(module, {
		Type = "Button",
		Args = {"Delayed shoot murderer", function(Self)
			if findSheriff() ~= localplayer then 
				fu.notification("You're not sheriff/hero.") 
				return 
			end

			local murderer = findMurderer() or findSheriffThatsNotMe()
			if not murderer then
				fu.notification("No murderer (or sheriff) to shoot.")
				return
			end

			if not localplayer.Character:FindFirstChild("Gun") then
				local hum = localplayer.Character:FindFirstChild("Humanoid")
				if localplayer.Backpack:FindFirstChild("Gun") then
					hum:EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
				else
					fu.notification("You don't have the gun..?")
					return
				end
			end

			local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
			if not murdererHRP then
				fu.notification("Could not find the murderer's HumanoidRootPart.")
				return
			end

			fu.notification("Waiting for murderer to be in view...")
			rs.Stepped:Connect(function()
				-- shoot a ray from player to murderer
				local origin = localplayer.Character.HumanoidRootPart.Position
				local direction = (Vector3.new(murdererHRP.Position.X, origin.Y, murdererHRP.Position.Z) - origin).unit * 1000
				local params = RaycastParams.new()

				local raycastResult = workspace:Raycast(origin, direction, params)
				if raycastResult then
					if raycastResult.Instance == murdererHRP then
						local predictedPosition = getPredictedPosition(murderer, shootOffset)

						local args = {
							[1] = 1,
							[2] = predictedPosition,
							[3] = "AH2"
						}


						localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
					end
				end
			end)


		end,}
	})


	table.insert(module, {
		Type = "Input",
		Args = {"Shoot position offset", "Set", function(Self, text)
			if not tonumber(text) then fu.notification("Not a valid number.") return end

			if tonumber(text) > 5 then
				fu.notification("An offset with a multiplier of 5 might not at all shoot the murderer!")
			end
			if tonumber(text) < 0 then
				fu.notification("An offset with a negative multiplier will make a shot BEHIND the murderer's walk direction.")
			end
			shootOffset = tonumber(text)
			fu.notification("Offset has been set.")
		end,}
	})

	table.insert(module, {
		Type = "Input",
		Args = {"Offset-to-ping multiplier", "Set", function(Self, text)
			if not tonumber(text) then fu.notification("Not a valid number.") return end

			if tonumber(text) > 5 then
				fu.notification("An offset with a multiplier of 5 might not at all shoot the murderer!")
			end
			if tonumber(text) < 0 then
				fu.notification("An offset with a negative multiplier will make a shot BEHIND the murderer's walk direction.")
			end
			offsetToPingMult = tonumber(text)
			fu.notification("Offset has been set.")
		end,}
	})

	table.insert(module, {
		Type = "Text",
		Args = {"Shoot offset re-aims the gun/knife shoot/throw to the character's predicted position. Recommended is 2.8"}
	})

	table.insert(module, {
		Type = "Text",
		Args = {"Offset-to-ping multiplier allows the offset to change dynamically with latency/ping. The default is 1 (aka no adjustment)"}
	})



	table.insert(module, {
		Type = "ButtonGrid",
		Toggleable = true,
		Args = {1, {
			--Coins_Magnet = function()
			--	coinAutoCollect = not coinAutoCollect
			--	if coinAutoCollect then
			--		fu.notification("Coins magnet is currently buggy right now. Use at your own risk.")
			--	end
			--end,
			Auto_Shoot_murderer = function()
				autoShooting = not autoShooting
				if findSheriff() == localplayer and autoShooting then
					fu.notification("Auto-shooting started.")
					repeat
						task.wait(0.1)
						local murderer = findMurderer() or findSheriffThatsNotMe()
						if not murderer then warn("[ThanhNeBro] > MM2 Autoshoot - No murderer.") continue end
						local murdererPosition = murderer.Character.HumanoidRootPart.Position
						local characterRootPart = localplayer.Character.HumanoidRootPart
						local rayDirection = (murdererPosition - characterRootPart.Position).Unit * 50

						local raycastParams = RaycastParams.new()
						raycastParams.FilterType = Enum.RaycastFilterType.Exclude
						raycastParams.FilterDescendantsInstances = {localplayer.Character}

						local hit = workspace:Raycast(characterRootPart.Position, rayDirection, raycastParams)
						if not hit or hit.Instance.Parent == murderer.Character then -- Check if nothing collides or if it collides with the murderer
							fu.notification("Auto-shooting!")
							if not localplayer.Character:FindFirstChild("Gun") then
								local hum = localplayer.Character:FindFirstChild("Humanoid")
								if localplayer.Backpack:FindFirstChild("Gun") then
									localplayer.Character:FindFirstChild("Humanoid"):EquipTool(localplayer.Backpack:FindFirstChild("Gun"))
								else
									fu.notification("You don't have the gun..?")
									return
								end
							end
							local murdererHRP = murderer.Character:FindFirstChild("HumanoidRootPart")
							if not murdererHRP then
								fu.notification("Could not find the murderer's HumanoidRootPart.")
								return
							end
							local murdererVelocity = murdererHRP.AssemblyLinearVelocity
							local predictedPosition = murdererHRP.Position + (murdererVelocity * Vector3.new(1, 0.5, 1)) * (shootOffset / 15)

							local args = {
								[1] = 1,
								[2] = predictedPosition,
								[3] = "AH2"
							}


							localplayer.Character.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(unpack(args))
						end
					until not autoShooting
				end
			end,
		}}
	})

	local function secondsToMinutes(seconds)
		if seconds == -1 then return "" end
		local minutes = math.floor(seconds / 60)
		local remainingSeconds = seconds % 60
		return string.format("%dm %ds", minutes, remainingSeconds)
	end
	local timertask = nil
	local timertext = nil
	table.insert(module, {
		Type = "Toggle",
		Args = {"Round timer", function(Self, state)
			if state then
				timertext = Instance.new("TextLabel")
				timertext.Parent = script.Parent
				timertext.BackgroundTransparency = 1
				timertext.TextColor3 = Color3.fromRGB(255, 255, 255)
				timertext.TextScaled = true
				timertext.AnchorPoint = Vector2.new(0.5, 0.5)

				timertext.Position = UDim2.fromScale(0.5, 0.15)
				timertext.Size = UDim2.fromOffset(200, 50)

				timertext.Font = Enum.Font.Montserrat

				timertask = task.spawn(function()
					while task.wait(0.5) do
						local timeLeft = game.ReplicatedStorage.Remotes.Extras.GetTimer:InvokeServer()
						timertext.Text = secondsToMinutes(timeLeft)
					end
				end)
			else
				if timertext then
					timertext:Destroy()
				end
				task.cancel(timertask)
			end
		end,}
	})

	table.insert(module, {Type="Text", Args={""}})

	table.insert(module, {
		Type = "Text",
		Args = {"<font color='#FF0000'>Detectables</font>"}
	})

	table.insert(module, {
		Type = "Button",
		Args = {"Send Sheriff and Murderer names into chat", function(Self)
			local textchannels = game:GetService("TextChatService"):WaitForChild("TextChannels"):GetChildren()
			for _, textchannel in ipairs(textchannels) do
				if textchannel.Name == "RBXSystem" then continue end
				local murd = findMurderer()
				local sher = findSheriff()

				local murdName = "-"
				local sherName = "-"
				if murd then murdName = murd.Name end
				if sher then sherName = sher.Name end
				local message = string.format([[Murderer: %s |
	Sheriff: %s |
	<<ThanhNeBro>>]], murdName, sherName)
				textchannel:SendAsync(message)
			end
		end,}
	})

	table.insert(module, {
		Type = "ButtonGrid",
		Args = {2, {
			Teleport_to_lobby = function(Self)
				localplayer.Character:MoveTo(Vector3.new(-107, 152, 41))
			end,

			Teleport_to_map = function(Self)
				local spawnsFolder = getMap():FindFirstChild("Spawns")
				if spawnsFolder then
					local spawns = spawnsFolder:GetChildren()
					local randomSpawn = spawns[math.random(1, #spawns)]
					localplayer.Character:MoveTo(randomSpawn.Position)
				else
					fu.notification("No map to teleport to.")
				end
			end,
		}}
	}) 

	table.insert(module, {
		Type = "ButtonGrid",
		Args = {2, {
			Fling_Sheriff = function()
				if not findSheriff() then
					fu.notification("No sheriff/hero to fling.")
					return
				end
				miniFling(findSheriff())
			end,

			Fling_Murderer = function()
				if not findMurderer() then
					fu.notification("No murderer to fling.")
					return
				end
				miniFling(findMurderer())
			end,
		}}
	})

	table.insert(module, {
		Type = "ButtonGrid",
		Args = {2, {
			Copy_murderer_username = function()
				if not findMurderer() then
					fu.notification("No murderer to copy.")
					return
				end
				if setclipboard then setclipboard(findMurderer().Name) end
				fu.notification("Copied to clipboard.")
			end,

			Copy_sheriff_username = function()
				if not findSheriff() then
					fu.notification("No sheriff/hero to copy.")
					return
				end
				if setclipboard then setclipboard(findSheriff().Name) end
				fu.notification("Copied to clipboard.")
			end,
		}}
	})


	table.insert(module, {
		Type = "Button",
		Args = {"Teleport to dropped gun", function(Self)
			if not getMap():FindFirstChild("GunDrop") then fu.notification("No dropped gun to be teleported to.") return end
			local previousPosition = localplayer.Character:GetPivot()
			localplayer.Character:PivotTo(getMap():FindFirstChild("GunDrop"):GetPivot())
			localplayer.Backpack.ChildAdded:Wait()
			localplayer.Character:PivotTo(previousPosition)
		end,}
	})

	table.insert(module, {
		Type = "Toggle",
		Args = {"Automatically get gun on drop", function(Self, state)
			autoGetDroppedGun = state
		end,}
	})

	local ignoreknifethrow = false
	game.Workspace.ChildAdded:Connect(function(chi)
		if chi.Name == "ThrowingKnife" and ignoreknifethrow then
			chi:Destroy()
		end
	end)

	table.insert(module, {
		Type = "Toggle",
		Args = {"Ignore knife throws (doesn't work)", function(Self, state)
			ignoreknifethrow = state
		end,}
	})



	table.insert(module, {
		Type = "Button",
		Args = {"God mode (Very, VERY UNSTABLE)", function(Self) -- Credits to EdgeIY, Infinite Yield
			local Cam = workspace.CurrentCamera
			local Pos, Char = Cam.CFrame, localplayer.Character
			local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
			local nHuman = Human.Clone(Human)
			nHuman.Parent, localplayer.Character = Char, nil
			nHuman.SetStateEnabled(nHuman, 15, false)
			nHuman.SetStateEnabled(nHuman, 1, false)
			nHuman.SetStateEnabled(nHuman, 0, false)
			nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
			localplayer.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos
			nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			local Script = Char.FindFirstChild(Char, "Animate")
			if Script then
				Script.Disabled = true
				wait()
				Script.Disabled = false
			end
			nHuman.Health = nHuman.MaxHealth
		end,}
	})




	table.insert(module, {
		Type = "Button",
		Args = {"Kill closest player as murderer", function()
			if findMurderer() ~= localplayer then fu.notification("You're not murderer.") return end

			if not localplayer.Character:FindFirstChild("Knife") then
				local hum = localplayer.Character:FindFirstChild("Humanoid")
				if localplayer.Backpack:FindFirstChild("Knife") then
					localplayer.Character:FindFirstChild("Humanoid"):EquipTool(localplayer.Backpack:FindFirstChild("Knife"))
				else
					fu.notification("You don't have the knife..?")
					return
				end
			end

			local NearestPlayer = findNearestPlayer()

			if not NearestPlayer or not NearestPlayer.Character then
				fu.notification("Can't find a player!?")
				return
			end
			local nearestHRP = NearestPlayer.Character:FindFirstChild("HumanoidRootPart")
			if not nearestHRP then
				fu.notification("Can't find the player's pivot.")
			end

			if not localplayer.Character:FindFirstChild("HumanoidRootPart") then fu.notification("You're not a valid character.") return end
			if not simulateKnifeThrow then
				nearestHRP.Anchored = true
				nearestHRP.CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 2
				task.wait(0.1)
				local args = {
					[1] = "Slash"
				}

				localplayer.Character.Knife.Stab:FireServer(unpack(args))
				return
			else
				local lpknife = localplayer.Character:FindFirstChild("Knife")
				if not lpknife then return end

				local raycastParams = RaycastParams.new()
				raycastParams.FilterType = Enum.RaycastFilterType.Exclude
				raycastParams.FilterDescendantsInstances = {localplayer.Character}
				local rayResult = workspace:Raycast(lpknife:GetPivot().Position, (nearestHRP.Position - localplayer.Character:FindFirstChild("HumanoidRootPart").Position).Unit * 350, raycastParams)
				local toThrow = nearestHRP.Position
				--if rayResult then
				--	toThrow = rayResult.Position
				--end
				--if math.random(0, 10) == 5 then -- idk what the fuk im doing
				--	toThrow = nearestHRP.Position
				--end
				local args = {
					[1] = lpknife:GetPivot(), 
					[2] = toThrow
				}

				localplayer.Character.Knife.Throw:FireServer(unpack(args))
				return
			end


		end,}
	})

	table.insert(module, {
		Type = "Toggle",
		Args = {"Simulate knife throw for killing nearest", function(Self, state)
			simulateKnifeThrow = state
			if state then
				fu.notification("Simulating a knife throw can make you look legitimate. However, note that it's less reliable and may miss the target.")
			end
		end,}
	})

	local killAuraCon = nil

	table.insert(module, {
		Type = "Toggle",
		Args = {"Murderer kill aura", function(Self, state)
			if state then
				if killAuraCon then killAuraCon:Disconnect() end
			else
				killAuraCon = game:GetService("RunService").Heartbeat:Connect(function()
					for _, player in ipairs(game.Players:GetPlayers()) do
						if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= localplayer then
							local hrp = player.Character:FindFirstChild("HumanoidRootPart")
							if (hrp.Position - localplayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude < 7 then
								hrp.Anchored = true
								hrp.CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 2

								task.wait(0.1)
								local args = {
									[1] = "Slash"
								}

								localplayer.Character.Knife.Stab:FireServer(unpack(args))
								return	
							end
						end
					end
				end)
			end
		end,}
	})

	table.insert(module, {
		Type = "Button",
		Args = {"Kill EVERYONE as murderer", function()
			if findMurderer() ~= localplayer then fu.notification("You're not murderer.") return end

			if not localplayer.Character:FindFirstChild("Knife") then
				local hum = localplayer.Character:FindFirstChild("Humanoid")
				if localplayer.Backpack:FindFirstChild("Knife") then
					localplayer.Character:FindFirstChild("Humanoid"):EquipTool(localplayer.Backpack:FindFirstChild("Knife"))
				else
					fu.notification("You don't have the knife..?")
					return
				end
			end

			for _, player in ipairs(game.Players:GetPlayers()) do
				if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= localplayer then
					player.Character:FindFirstChild("HumanoidRootPart").Anchored = true
					player.Character:FindFirstChild("HumanoidRootPart").CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 1 

				end	
			end

			local args = {
				[1] = "Slash"
			}
			localplayer.Character.Knife.Stab:FireServer(unpack(args))
		end,}
	})

	table.insert(module, {
		Type = "Text",
		Args = {"Fun"}
	})

	table.insert(module, {
		Type = "Button",
		Args = {"Hold everyone hostage", function()
			if findMurderer() ~= localplayer then fu.notification("You're not murderer. This'll only be useful if you're the murderer.") return end

			for _, player in ipairs(game.Players:GetPlayers()) do
				if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= localplayer then
					player.Character:FindFirstChild("HumanoidRootPart").Anchored = true
					player.Character:FindFirstChild("HumanoidRootPart").CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 5
				end	
			end

			fu.notification("Placed every single player in a single point. Kill everyone at once once you decide to.")
		end,}
	})

	repeat task.wait() until getgenv().Modules
	getgenv().Modules[3] = module
	fu.refreshlist()
end
local function PIXKC_fake_script() -- Fake Script: StarterGui.ThanhNeBro.FloatingButtonSetting.ControlBarContainer.ControlBar.Visibility.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_Visibility"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	script.Parent.MouseButton1Click:Connect(function()
		getgenv().ThanhNeBroFUNCTIONS.ftToggleVisibility()
	end)
end
local function JIUI_fake_script() -- Fake Script: StarterGui.ThanhNeBro.FloatingButtonSetting.ControlBarContainer.ControlBar.Lock.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_Lock1"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	script.Parent.MouseButton1Click:Connect(function()
		getgenv().ThanhNeBroFUNCTIONS.ftToggleLock()
	end)
end
local function ZISNWBG_fake_script() -- Fake Script: StarterGui.ThanhNeBro.FloatingButtonSetting.ControlBarContainer.ControlBar.Exit.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_Exit"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end
	script.Parent.MouseButton1Click:Connect(function()
		getgenv().ThanhNeBroFUNCTIONS.closeFinetuneFB()
	end)
end
coroutine.wrap(ZTSOVAR_fake_script)()
coroutine.wrap(FONQUUM_fake_script)()
coroutine.wrap(DOAXIVT_fake_script)()
coroutine.wrap(DVJENL_fake_script)()
coroutine.wrap(SAJO_fake_script)()
coroutine.wrap(NCDB_fake_script)()
coroutine.wrap(SBOBP_fake_script)()
coroutine.wrap(VIZJP_fake_script)()
coroutine.wrap(UTRFSE_fake_script)()
coroutine.wrap(SFEGW_fake_script)()
coroutine.wrap(MZHT_fake_script)()
coroutine.wrap(PKEHOF_fake_script)()
coroutine.wrap(OEALVLK_fake_script)()
coroutine.wrap(NFLXNSA_fake_script)()
coroutine.wrap(DFEDO_fake_script)()
coroutine.wrap(QUXUEEW_fake_script)()
coroutine.wrap(PIXKC_fake_script)()
coroutine.wrap(JIUI_fake_script)()
coroutine.wrap(ZISNWBG_fake_script)()





local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player.PlayerGui

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.Name = "MinimalistUI"

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 280)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.Text = "Control Panel"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = mainFrame

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 20, 0, 20)
minimizeButton.Position = UDim2.new(1, -25, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 16
minimizeButton.Parent = mainFrame
local isMinimized = false

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    mainFrame.Size = isMinimized and UDim2.new(0, 200, 0, 30) or UDim2.new(0, 200, 0, 280)
    minimizeButton.Text = isMinimized and "+" or "-"
end)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 40)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: 16"
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 14
speedLabel.Parent = mainFrame

local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(1, -20, 0, 30)
speedBox.Position = UDim2.new(0, 10, 0, 60)
speedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
speedBox.Text = "16"
speedBox.Font = Enum.Font.SourceSans
speedBox.TextSize = 14
speedBox.Parent = mainFrame

speedBox.FocusLost:Connect(function()
    local speed = tonumber(speedBox.Text)
    if speed and speed >= 1 and speed <= 100 then
        local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = speed
            speedLabel.Text = "Speed: " .. speed
        end
    else
        speedBox.Text = "16"
    end
end)


local staminaButton = Instance.new("TextButton")
staminaButton.Size = UDim2.new(1, -20, 0, 30)
staminaButton.Position = UDim2.new(0, 10, 0, 100)
staminaButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
staminaButton.Text = "Infinite Stamina: OFF"
staminaButton.TextColor3 = Color3.fromRGB(255, 255, 255)
staminaButton.Font = Enum.Font.SourceSans
staminaButton.TextSize = 14
staminaButton.Parent = mainFrame
local staminaEnabled = false

staminaButton.MouseButton1Click:Connect(function()
    staminaEnabled = not staminaEnabled
    staminaButton.Text = "Infinite Stamina: " .. (staminaEnabled and "ON" or "OFF")
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.Stamina = staminaEnabled and 100 or 50 -- Имитация
    end
end)

local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(1, -20, 0, 30)
espButton.Position =有可能

System: UDim2.new(0, 10, 0, 140)
espButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
espButton.Text = "ESP: OFF"
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.Font = Enum.Font.SourceSans
espButton.TextSize = 14
espButton.Parent = mainFrame
local espEnabled = false
local espObjects = {}

local function addESP(character, color, name)
    local billboard = Instance.new("BillboardGui")
    billboard.Parent = character
    billboard.Adornee = character
    billboard.Size = UDim2.new(0, 100,  CURSOR
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    local text = Instance.new("TextLabel", billboard)
    text.Size = UDim2.new(1, 0, 1, 0)
    text.BackgroundTransparency = 1
    text.TextColor3 = color
    text.Font = Enum.Font.SourceSans
    text.TextSize = 14
    
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        RunService.RenderStepped:Connect(function()
            if not espEnabled or not character.Parent then
                billboard:Destroy()
                return
            end
            local healthPercent = math.floor((humanoid.Health / humanoid.MaxHealth) * 100)
            text.Text = name .. " (" .. healthPercent .. "%)"
        end)
    end
    table.insert(espObjects, billboard)
end

local function addObjectESP(object, color, name)
    local billboard = Instance.new("BillboardGui")
    billboard.Parent = object
    billboard.Adornee = object
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    local text = Instance.new("TextLabel", billboard)
    text.Size = UDim2.new(1, 0, 1, 0)
    text.BackgroundTransparency = 1
    text.TextColor3 = color
    text.Text = name
    text.Font = Enum.Font.SourceSans
    text.TextSize = 14
    table.insert(espObjects, billboard)
end

espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
    
    if espEnabled then
        for _, p in pairs(Players:GetPlayers()) do
            if p.Character and p ~= player then
                addESP(p.Character, Color3.fromRGB(255, 0, 0), p.Name) -- Красный для других
            end
        end
        if player.Character then
            addESP(player.Character, Color3.fromRGB(0, 255, 0), player.Name) -- Зелёный для игрока
        end
        
        for _, obj in pairs(workspace:GetChildren()) do
            if obj.Name == "Generator" then
                addObjectESP(obj, Color3.fromRGB(255, 255, 0), "Generator") -- Жёлтый
            elseif obj.Name == "Item" then
                addObjectESP(obj, Color3.fromRGB(255, 0, 255), "Item") -- Розовый
            end
        end
        
        Players.PlayerAdded:Connect(function(p)
            p.CharacterAdded:Connect(function(char)
                if espEnabled then
                    addESP(char, Color3.fromRGB(255, 0, 0), p.Name)
                end
            end)
        end)
    else
        for _, esp in pairs(espObjects) do
            esp:Destroy()
        end
        espObjects = {}
    end
end)

local repairButton = Instance.new("TextButton")
repairButton.Size = UDim2.new(1, -20, 0, 30)
repairButton.Position = UDim2.new(0, 10, 0, 180)
repairButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
repairButton.Text = "Auto Repair: OFF"
repairButton.TextColor3 = Color3.fromRGB(255, 255, 255)
repairButton.Font = Enum.Font.SourceSans
repairButton.TextSize = 14
repairButton.Parent = mainFrame
local autoRepairEnabled = false

local function createTestGenerator(position, name)
    local generator = Instance.new("Part")
    generator.Name = "Generator"
    generator.Size = Vector3.new(2, 2, 2)
    generator.Position = position
    generator.BrickColor = BrickColor.new("Yellow")
    generator.Anchored = true
    generator.Parent = workspace
    
    local progress = Instance.new("NumberValue")
    progress.Name = "RepairProgress"
    progress.Value = 0
    progress.Parent = generator
    
    local prompt = Instance.new("ProximityPrompt")
    prompt.ActionText = "Repair"
    prompt.Parent = generator
    prompt.Triggered:Connect(function(player)
        if player == Players.LocalPlayer then
            while prompt.Enabled and progress.Value < 100 do
                progress.Value = math.min(progress.Value + 10, 100)
                wait(0.5)
            end
            if progress.Value >= 100 then
                prompt.Enabled = false
                generator.BrickColor = BrickColor.new("Lime green")
            end
        end
    end)
end


for i = 1, 3 do
    createTestGenerator(Vector3.new(i * 10, 1, 0), "Generator" .. i)
end


repairButton.MouseButton1Click:Connect(function()
    autoRepairEnabled = not autoRepairEnabled
    repairButton.Text = "Auto Repair: " .. (autoRepairEnabled and "ON" or "OFF")
    
    if autoRepairEnabled then
        spawn(function()
            while autoRepairEnabled do
                for _, generator in pairs(workspace:GetChildren()) do
                    if generator.Name:find("Generator") and generator:FindFirstChild("RepairProgress") then
                        local progress = generator.RepairProgress
                        if progress.Value < 100 then
                            progress.Value = math.min(progress.Value + 5, 100)
                            if progress.Value >= 100 then
                                generator.BrickColor = BrickColor.new("Lime green")
                                if generator:FindFirstChild("ProximityPrompt") then
                                    generator.ProximityPrompt.Enabled = false
                                end
                            end
                        end
                    end
                end
                wait(0.2)
            end
        end)
    end
end)


local dragging, dragInput, dragStart, startPos
mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        dragInput = input
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        local delta = dragInput.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)


