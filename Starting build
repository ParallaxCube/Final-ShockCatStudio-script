


-- Greet the local player
  local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
-- Define the LocalPlayer right away so we can use their name
local localPlayer = Players.LocalPlayer 
local RBXGeneral = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
-- 1. Greet the local player who is running the script
if localPlayer then
    RBXGeneral:DisplaySystemMessage(string.format("Heyyy!!, %s! Your ShockCatStudio v1.035 UI is Ready!!", localPlayer.DisplayName))
end
---------------------------------------------------------------------------------------------------------------
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
----------------------------------------------------------------------------
--rayfield /\
----------------------------------------------------------------------------
local MainWindow              = Rayfield:CreateWindow({
Name                       = "Welcome,"   ..  localPlayer.DisplayName .. "!",
Icon                       = "paw-print", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
LoadingTitle               = "Welcome "..  localPlayer.DisplayName .. "!",
LoadingSubtitle            = "by IamSkitten",
ShowText                   = " "..  localPlayer.DisplayName .."'s Ui", -- for mobile users to unhide rayfield, change if you'd like
Theme                      = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
ToggleUIKeybind            = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)
DisableRayfieldPrompts     = false,
DisableBuildWarnings       = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
ConfigurationSaving = {
Enabled                 = true,
FolderName              = "Iamskittenconfigfilenameforfile"..  localPlayer.DisplayName .. "!", -- Create a custom folder for your hub/game
FileName                = "Iamskittenconfigfilename"..  localPlayer.DisplayName .. "!"
},
Discord = {
Enabled                 = false, -- Prompt the user to join your Discord server if their executor supports it
Invite                  = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
RememberJoins           = true -- Set this to false to make them join the discord every time they load it up
},
KeySystem                  = true, -- Set this to true to use our key system
KeySettings                = {
Title                   = "Untitled",
Subtitle                = "Key System for "..  localPlayer.DisplayName .. "!",
Note                    = "the key is provided for "..  localPlayer.DisplayName .. " is '1234' !", -- Use this to tell the user how to get a key
FileName                = "Key41For"..  localPlayer.DisplayName .. "!", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
SaveKey                 = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
GrabKeyFromSite         = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
Key                     = {"1234"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
----------------------------------------------------------------------------
--Window Maker 
---------------------------------------------------------------------------- 
local Tab1              =    MainWindow:CreateTab  ("MainPaw"                                      ,             "app-window-mac") -- Title, Image
local Tab2              =    MainWindow:CreateTab  (" "..  localPlayer.DisplayName .. "!"     ,                    "annoyed") -- Title, Image
local Tab3              =    MainWindow:CreateTab  ("Stamina"                                 ,             'chevrons-right')
local Tab4              =    MainWindow:CreateTab  ("Visuals"                                 ,                   "scan-eye")
local Tab5              =    MainWindow:CreateTab  ("Automation"                              ,                   'workflow')
local Tab6              =    MainWindow:CreateTab  ("Device"                                  ,             'laptop-minimal')
local Tab7              =    MainWindow:CreateTab  ("Stun(s)"                                 ,               'shield-alert')
local Tab8              =    MainWindow:CreateTab  ("Savefile!"                                ,     'gallery-horizontal-end')
local Tab9              =    MainWindow:CreateTab  ("Status"                                  ,                 'settings-2')
local Tab11             =    MainWindow:CreateTab  ("Misc"                                    ,                        'cog')
local Tab12             =    MainWindow:CreateTab  ("Generators"                              ,                        "cog")
local Tab13             =    MainWindow:CreateTab  ("Experimental"                            ,                       "bolt")
local Tab14             =    MainWindow:CreateTab  ("Creds"                                   ,                        "cog")
local Tab15             =    MainWindow:CreateTab  ("Fake Block Animations"                   ,                        "cog")
tab = Tab8
----------------------------------------------------------------------------
--Tabs /\ 15
----------------------------------------------------------------------------

local Button = Tab:CreateButton({
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed

  -- The function that takes place when the button is pressed
   end,
})

----------------------------------------------------------------------------
--   ArtistShedletsky button (normal) \/
----------------------------------------------------------------------------
local Button = Tab11:CreateButton({--misc tab
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
    -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/61efe209da5743e89f9bad065c8b1ecfefd12f21/Artshed'  -- Replace with your actual GitHub link
        loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)
  -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--   ArtistShedletsky button (normal) /\
----------------------------------------------------------------------------

----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) \/
----------------------------------------------------------------------------
local Button = Tab11:CreateButton({--gen tab
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
    -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/Final-ShockCatStudio-script/refs/heads/main/GenSpawnButton'  -- Replace with your actual GitHub link
        loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)
  -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) /\
----------------------------------------------------------------------------

----------------------------------------------------------------------------
--   (normal) \/                                                           
----------------------------------------------------------------------------
local Button = Tab12:CreateButton({
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
    -- The URL to your script on GitHub
      local scriptUrl = '   '  -- Replace with your actual GitHub link
        loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)
  -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--  (normal) /\                                                            
----------------------------------------------------------------------------

----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) \/
----------------------------------------------------------------------------
local Button = Tab11:CreateButton({--misc tab
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
    -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/61efe209da5743e89f9bad065c8b1ecfefd12f21/Artshed'  -- Replace with your actual GitHub link
        loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)
  -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) /\
----------------------------------------------------------------------------

----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) \/
----------------------------------------------------------------------------
local Button = Tab11:CreateButton({--misc tab
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
    -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/61efe209da5743e89f9bad065c8b1ecfefd12f21/Artshed'  -- Replace with your actual GitHub link
        loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)
  -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--   Gen Gui Spawner (normal) /\
----------------------------------------------------------------------------











